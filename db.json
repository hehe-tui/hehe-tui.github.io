{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/background.css","path":"css/background.css","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/scrollbars.css","path":"css/scrollbars.css","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/archive_img.jpg","path":"img/archive_img.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/icp.png","path":"img/icp.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/index.jpg","path":"img/index.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/wechat.jpg","path":"img/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/weather.js","path":"js/weather.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"af215dd786bc7be3d4466e0df63db025e48dddd0","modified":1668956026563},{"_id":"source/_data/bangumis.json","hash":"9f179370521eb0b7c8b17c9e3b8a079a8a9db589","modified":1668956026563},{"_id":"source/link/index.md","hash":"fe8bf8545f38bb825c40133c05510d749e0ab67b","modified":1668956026579},{"_id":"source/_data/link.yml","hash":"41067d237649b8282fd9790de090797b54af2bc2","modified":1668956026563},{"_id":"source/_posts/Codis介绍与安装.md","hash":"2238d6a88d6a8ca1c7f6ae07cbf48f51b779d71a","modified":1670051407769},{"_id":"source/_posts/Docker安装部署ElK教程.md","hash":"c6936bd906c229705a1beff695ee3f701571e609","modified":1670051545403},{"_id":"source/_posts/Docker配置MySQL主从复制.md","hash":"9e711374774087c57c4eb1753f6ec4fdcda1871f","modified":1668956026563},{"_id":"source/_posts/GitLab+Jenkins持续集成.md","hash":"78ed6240391c3a0c9119dde08b76de4b0c2b318e","modified":1670051605254},{"_id":"source/_posts/JumpServer介绍与安装.md","hash":"cf748acc73b4979f58639d23a882ecd937c91bc3","modified":1668956026563},{"_id":"source/_posts/HAProxy+Nginx负载均衡介绍与搭建.md","hash":"8c4179ae4b93aba27fc10031e99e487ce61458de","modified":1670051469151},{"_id":"source/_posts/Kubernetes安装部署.md","hash":"56039b9189bee1a3e44b58c7d39c0844306b76e5","modified":1668956026563},{"_id":"source/_posts/MySQL增量备份与恢复.md","hash":"184ed92ca5e0f64dac33f4afba20a311590e8b20","modified":1669043483394},{"_id":"source/_posts/MySQL完全备份与恢复.md","hash":"8ea72583fcafc9114187c0489bb43ca6787b9db4","modified":1668956026563},{"_id":"source/_posts/Nginx缓存加速.md","hash":"d30abd78c3c4d50590524a0cd7eb16aaf89e91b2","modified":1669643592808},{"_id":"source/_posts/Redis介绍与安装部署.md","hash":"b221e4d87559ba92c37e7a1a4c9cd04a35b4f6bf","modified":1669643713345},{"_id":"source/_posts/Prometheus介绍与安装.md","hash":"4cf3166b831d2b854529efc8a97f6c7a62dca4f1","modified":1668956026563},{"_id":"source/_posts/Samba介绍与安装.md","hash":"349e9b0eb30809f2aca6b0946a83c6e819456c50","modified":1670051371784},{"_id":"source/_posts/Squid缓存加速.md","hash":"63078b9416f2c6b298b6c7626631f25aac85717f","modified":1670052067116},{"_id":"source/_posts/Zabbix5.0安装.md","hash":"f52718f1af68ac2827acd89f6202b99c8ac62c58","modified":1668956026563},{"_id":"source/_posts/搭建自己专属的VPN.md","hash":"c7313e6e66b17da21a3f9eec316b813555886be3","modified":1670051630043},{"_id":"source/categories/index.md","hash":"b13c47fb7854a21dda1c8af092ca2568f513670d","modified":1668956026579},{"_id":"source/_posts/github备份迁移hexo.md","hash":"fc05ba9c3d7f23c1b69eeb5520e1b7d5a6acd7d4","modified":1669643392425},{"_id":"source/about/index.md","hash":"b6b0f1767a7e7aa030ddb220746b3528ea426b38","modified":1670051656445},{"_id":"source/photo/index.md","hash":"5aba022f1441cf0da42e2c40f92272109713fa9d","modified":1668956083321},{"_id":"source/tags/index.md","hash":"4996003045fbee1214d14cd4fc533d5c78feb8f2","modified":1668956026579},{"_id":"source/photo/猫咖/index.md","hash":"eba010ba4c74c7821a3a0b9731be4bf84b52ae2e","modified":1668956026579},{"_id":"themes/butterfly/README.md","hash":"bb66a011ebb0284613c09404b591ffbebccd1e37","modified":1668956026579},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1668956026579},{"_id":"themes/butterfly/README_CN.md","hash":"7f019274d495a8e5b2367ab2c13e0899e8b5bb01","modified":1668956026579},{"_id":"themes/butterfly/_config.yml","hash":"cdb8b9d42d0a6516f9066a2adc9f3f91047c5f93","modified":1668956026579},{"_id":"themes/butterfly/package.json","hash":"72705c927abe1d76ed242decff37f804b7eef031","modified":1668956026595},{"_id":"themes/butterfly/languages/default.yml","hash":"02349c0728bbf723ce23c4fed46a6ea68f84e752","modified":1668956026579},{"_id":"themes/butterfly/languages/en.yml","hash":"02349c0728bbf723ce23c4fed46a6ea68f84e752","modified":1668956026579},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"0df1a9d6d542d0ac354098ee7d3cd65d96f75409","modified":1668956026579},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"21eaedd8813476b1cca2bf098c61df493b23abef","modified":1668956026579},{"_id":"themes/butterfly/layout/404.pug","hash":"10ce9b0764d975460069bf116bfceaaeb9691d3a","modified":1668956026579},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1668956026579},{"_id":"themes/butterfly/layout/category.pug","hash":"90e56274a7c853f6f30337011f9c9d6d035950dc","modified":1668956026579},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1668956026595},{"_id":"themes/butterfly/layout/post.pug","hash":"78ea7f382e77642993f2622b394104b6d6d48303","modified":1668956026595},{"_id":"themes/butterfly/layout/page.pug","hash":"76536c903cabc8e4619759e3a8b6a384c0518716","modified":1668956026595},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"62b02e90b566259e3c18af85014f2acaaa2fe278","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"e5b4f6514d4edd21c8966d1ee1bfddeb9d0f2330","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"093e018a094dce27ceb493a09bbc4e5d1682a844","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"6006ae4885ad82bd41ffd0f1734bde94d442c9ff","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"ef9a7bc996a08f1aa939cdb6df03084b0ea6c9dd","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"975ce0b43c819a877399fd1713b7648b6a65bd71","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"86b2a4d500542fe764fdc5ff71cf029604325930","modified":1668956026579},{"_id":"themes/butterfly/source/css/background.css","hash":"a2ffce5d64d612bdbe225bbe6ba7728a9041e425","modified":1668956026610},{"_id":"themes/butterfly/source/css/index.styl","hash":"9a13b40cf4b79980f49a2578cb2c35c04b7f5618","modified":1668956026610},{"_id":"themes/butterfly/source/css/scrollbars.css","hash":"1bdb95aa69493ca61f0a42625f15ee3bd41d419d","modified":1668956026610},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1668956026610},{"_id":"themes/butterfly/source/css/var.styl","hash":"ab6fd801f93df0e5b79d60a497c2b3f4332ece2a","modified":1668956026610},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1668956026610},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1668956026626},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1668956026626},{"_id":"themes/butterfly/source/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1668956026626},{"_id":"themes/butterfly/source/js/main.js","hash":"bad76aecdfc0181fb06dc5dd80a5f6fbca6fa44d","modified":1668956026641},{"_id":"themes/butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1668956026641},{"_id":"themes/butterfly/scripts/events/404.js","hash":"5f6127ede7d139891208340b5cf5bf9314e4be7d","modified":1668956026595},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"81952d4744af55a9e123c57fd8e0004d345d7352","modified":1668956026641},{"_id":"themes/butterfly/source/js/utils.js","hash":"fb39c008221509c9c57744fe75c1bcaf005a5d43","modified":1668956026641},{"_id":"themes/butterfly/source/js/weather.js","hash":"265fe058d50eeedd0309991ac31a5dc8c04bf5f1","modified":1669447468145},{"_id":"themes/butterfly/scripts/events/init.js","hash":"f7ab55363d05c945569d9ac4afc889f9706308c6","modified":1668956026595},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"1e1da036fae593be7e2cc502f0a5cbeb2e7881d1","modified":1668956026595},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"dbce193ba170e004790550fe4694de8e29b299b9","modified":1668956026595},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"1e2ac4d26df7cd18a92f1404329f8eb1c388dc18","modified":1668956026595},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"d9cdeecfb0098ad9bf4814ea2f95167b637e015d","modified":1668956026595},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"5060ef561013dc036ec569f77521d5dab894db73","modified":1668956026595},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"54c0c9c6d4d4ca754680cd24d7e204a745a6eec0","modified":1668956026595},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"f42b2358a44d91ef6c853ce75f23af6e8d3ff423","modified":1668956026595},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"0745597f4ffadde037e57e0f66f7d984dc576dc6","modified":1668956026595},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"90e9d5f499c791225a257f062886fedec5973b18","modified":1668956026595},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"a3c3c3feafa544304c1beeb90d25022170a32643","modified":1668956026595},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"829229b0074b332ba779e159219eb2466612ff6e","modified":1668956026595},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"296e17f28d45f85ea638fbc5bc0b6e8e002924aa","modified":1668956026595},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"767b425f97e74a98002f4a435e36e8ec27e8a994","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"25fdae675275d2cefe427c6b5c3f73ed72c6bfbf","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"ed8810709c060691c2000f23f3509e840e239444","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7465f46abba307180d0605dc175eb857f9abe57a","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/js.pug","hash":"0916746e3f0ba8aee4defa6e6244752618721461","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"59844b533b1f633e1cad4c7f7d79536429bc3d2c","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"1ddbd09e1902da7fa4bf7824654f132e41622c42","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"9a6f8211cdcb4aa87ccb5fa4f62b89c245412c94","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"d22d4c98028272dfc6c2e721e469f572a6b62ed3","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"81a34e9d642a68e77650609601a8096c6445daef","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"21ab8afc663d5580099db0d6de9f50fdf43c8589","modified":1669444852879},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"a12b7788b80d2337cd5788fa74ccb701a8dd963e","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"2beb27e33e4492fa80e88c37dcb7a3ffd7da9e24","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"9ac6e803603a67ec3f61fc0e98ae8d4fe9c6c8a7","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/page/artitalk.pug","hash":"006309e66180a521289dddae9d2aa3b37bc3492f","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"95924d28d71b28769963529f82b376a9dc731fad","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"f5ea1e10a169aeb98e42b19ac084c4eb27693b46","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/post/passage-end-tag.pug","hash":"5ce5785b49ac9d8b6e1e0159ad940f95b65de0cb","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"62dc2e683d56ddc9b588abc44dc1cfb778a2c68f","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"6ec54b77e3a90e148e66e317e5bb6c89624fddca","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"7e7832aafdf5ca50e71a039ad3fc98d8ef6e7d30","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"d9b96f24c2439f263a606fd38a5517bd4bb162b7","modified":1668956026579},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"1024193a42e1e36930f7361a019022de59fe735c","modified":1668956026595},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"125d2aee370ab07755fe4cb00decc53619be17f8","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"eb18647e15acbf0f9faf9c56bc43cecc6c3069b1","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/baidu_push.pug","hash":"f23428ac998c9844e616fa19113dd35a601538ae","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/artitalk.pug","hash":"99fb65c54a687b76e14f517ffb5dd2f607e0e5ed","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"827590914284c10903107a406fddd9f9cd0b4c11","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"c7d65a5376b04e385d4b725c018f94ea40d0bf06","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"8343f868dd31ccc080d499e5e95a8fc01dc811fa","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"2448b243ded58aa1d5fc22fd115e6d06b636f9fd","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"b210ae4e1c53b5a99216a6a75d100fc63b2bb65b","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"44af3c7a67b86f048deacb451dd454b088631374","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"7450c5bae8aa422c39504a3574f97ef1709d1779","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"59d1096a1bb04c9559367d54d90186afcc115850","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"b592c39e7ca61847b5a5629768bb44690802185d","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"40923d59c452d2a71195ddf1a8e3b840f27ef560","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"2254c7ae4ad45be850e1777035d084b1d31885fc","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"1b48347561b6d068f3c720802dd9223a8d1971a5","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"d4d50735c3678c4474cd4eec6050024ff9123458","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"a701dab84ef06177a3baf91f31a9e4cb9a2e967a","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"b68b218472ef668890ab1207b1d9c15a9f2b585a","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"60b308f6e2fe3e78fd9dfbbc874989fdae38fd30","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"536b6b987ea9371d6a960a693aee36147d523efc","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3f0b8699f529f0842c3b101006f60cb7933c16ff","modified":1668956026595},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"84c14368d3fab66d5fb7d03678766274e2e0d84f","modified":1668956026595},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"c03a1b8b9db59a94cadd1dfc7e779ca97e713c37","modified":1668956026595},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1668956026595},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"8e6c9a2c1881985e4b2ae14ef1bdfdbb1bc83b37","modified":1668956026595},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"473d2a6c11f7ff82b28923ddece95919d136d310","modified":1668956026595},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"1bd8faa8c223486d69f3044beddcd088bbbade81","modified":1669444359657},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"c4ae9292d6b7e42943b1b11e109ed560dc3a7753","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"807f18717c29b5c41de6fc600a69a80ce8b7a19c","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"c68a3b9c386a52219e61eb404523d4f13060c07b","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"ba391266cd967fa96109677455dd6701292afd52","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6149c50ad33b3feb3da8a9d0b9e6557d1137210","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"7a37f7ffeb17ea4fc7765e0ee13fb81850d28554","modified":1668956026610},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"d471c8192e6c9f686daeca61527d627e8da08551","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"78ef182c0f6711c8491a8ee421b708c8f2a63c30","modified":1668956026610},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"0cb678f991af06015804eaebafa8e983b0dcc3de","modified":1668956026610},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"39750c1aef1671d0efa6421a53fb2bfd818b28c5","modified":1668956026610},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"190b85de3e686393e45869d12464995f23b304dc","modified":1668956026610},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"ca1d3a885a85a91fcd6f7b55fca96cafb6a1b0a3","modified":1668956026610},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4058ab759577efe280d5e38902be39054ed4b471","modified":1668956026610},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"3c7a7efbb14d8ce6538f612992aa1a62fd278991","modified":1668956026610},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"66fd9cab11a5ec7591b8d48e64a26cf576a69cd7","modified":1668956026610},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"26e26797b3175498e20b2a8bf1679d3ed9fac5a6","modified":1668956026610},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"a470029a157fbb8406ff72322a75ef63d6675431","modified":1668956026610},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"202b01db6ef3cca9e5a173e1a0dadfee8854a849","modified":1668956026610},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"3f2e0b3c9158ea5ceaf46486666ade3ed9752fed","modified":1668956026610},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"5fe4235c038ed128819bd6918cd0781b372b598e","modified":1668956026610},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"a5fcce868c93c073ae2f555ace46a78f72c70067","modified":1668956026610},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"aa0728c556af75f5d66ecd44fa207722d474c26d","modified":1668956026610},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"8ab69f23ee331317abccafbc26943cfbae961ecc","modified":1668956026610},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"8520674768dd0b1837f947892e8402b192a4f9c1","modified":1668956026610},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"75a5c15c7029197ec5cffd27f7c5455891c946c9","modified":1668956026610},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"3a82f1a4d00984f401756b9288d77f1b4c11b96d","modified":1668956026610},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bde8bbc75dfa0eaa512af498046a85660a56d3de","modified":1668956026641},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1668956026579},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"5f3d48f61f10c0da538d54643edc47c0ccaa4d8e","modified":1668956026641},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"663a298253eddb5126ca1a6139d69c7097ffb52e","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b4ccb07da181513ac6b2aa2ad8386b0275def87c","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"9b6b7b589ef7a8109d88ba439b2d8baf7286b961","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"0f06c0aa7538b41554689d2298556fece6dfd1de","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"35e25b7627c158a25e56b8fb5e47fb4dd751f7e0","modified":1668956026579},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"6f4829a8e08c3bd36e96477efdbe552c85a7350b","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"f032eb57f977bbde451b0ec8a826eca14cfca310","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"0322d640fd6a91853dec3ad39cc24c9b1291322b","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"e7da739cabc885eaf4de28e9e6294e4c6b78349d","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1c7e9fe86b7d7ef18cc876dfce19263fd4e73066","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"60bd18e051a442d5ce25325a55982922ab15be04","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"6f92311afe60ca5f44055016db9cecce8fb2dc62","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ecb54cd040fa3648ee84f91988073e336a6ec4b8","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"30e188776865bc9646db3b423c39fd1629390147","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2e1cb17c2a95aedf354150a25f2911648e9301cf","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"659f2c0798cf4dbc934508de69bdc05348db7690","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/leancloud.pug","hash":"a5b5eddd1165ddde539c41c5b4183d5dfd82c79b","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"1c06e60b120c946c1856904848ceba6ab58d1f82","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"fbac21a6c5924fb2f8d1190fd634105fdbc603d4","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"598b54746a86878717306a00bfb2613277526a79","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"0622e955f3d2efef457f61d0cec0408376bd180a","modified":1668956026595},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"ee17bb1905b007ce445817efa84e04d7b70467a8","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"1b2dc0ef768c9be9f18d1c1f93d88f916482c5df","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"ba3bdf02a6c78b15eada95638173a11445dac7ac","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"ebae44a37ac143f4e35523ebd6809371958fb930","modified":1668956026595},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"c1747b8641303a1d9472ec94f2bc654885feb270","modified":1668956026595},{"_id":"themes/butterfly/source/img/alipay.jpg","hash":"cf84008ccd91f15b30264304d1cbd5e3a831da92","modified":1668956026610},{"_id":"themes/butterfly/source/img/avatar.jpg","hash":"773ab84e200649a493dd0f56509d19ea04da9d1d","modified":1668956026626},{"_id":"themes/butterfly/source/img/wechat.jpg","hash":"6058c39edf19b405141dfbedb8daae760c64d697","modified":1668956026641},{"_id":"themes/butterfly/source/img/archive_img.jpg","hash":"51de68b1788d52c8e10f740d9c713de6ac5ebd27","modified":1668956026626},{"_id":"themes/butterfly/source/img/index.jpg","hash":"fa4438e31fc28bf4708aad3d9626d0e62881a99e","modified":1668956026641},{"_id":"public/search.xml","hash":"942e4ddfd9aadc9de82837ab88fa8e818035f5d4","modified":1670151869808},{"_id":"public/404.html","hash":"46fe10db62ef3572315b1890441e9997c1fb537e","modified":1670151869808},{"_id":"public/link/index.html","hash":"d863e4b8704d5c248fbe55c70414a967a5b2df79","modified":1670151869808},{"_id":"public/categories/index.html","hash":"e37cbae246be8c6e945259fe67093e0086918c50","modified":1670151869808},{"_id":"public/about/index.html","hash":"25f00159f64b0ed99beb6bc0177d50c679ca664c","modified":1670151869808},{"_id":"public/photo/index.html","hash":"1606346961b1efc305abc99a6e1f4d7280a3cca7","modified":1670151869808},{"_id":"public/tags/index.html","hash":"db19753867f7b9074c3e4e605f870730851e3a7c","modified":1670151869808},{"_id":"public/photo/猫咖/index.html","hash":"c4300edb61cbc5e08f14252d3fbda3ebe96e9b9e","modified":1670151869808},{"_id":"public/2022/11/28/Samba介绍与安装/index.html","hash":"18673d630935f5c6613eed948c573eb4d2803ba1","modified":1670151869808},{"_id":"public/2021/01/28/Prometheus介绍与安装/index.html","hash":"2b9b90a02e984f0fa20244ce313576a3766deb24","modified":1670151869808},{"_id":"public/2021/01/25/JumpServer介绍与安装/index.html","hash":"e25350561f426ab651e7a187972e5858298bf06d","modified":1670151869808},{"_id":"public/2021/01/17/MySQL增量备份与恢复/index.html","hash":"13888d5cf90a72f28b69ec90a52099a5e5e26919","modified":1670151869808},{"_id":"public/2021/01/13/Codis介绍与安装/index.html","hash":"76ff5cb81dcc3fe7d312f5b51c727b6d6c55bb5c","modified":1670151869808},{"_id":"public/2021/01/12/MySQL完全备份与恢复/index.html","hash":"fda58a03588c7f6bcfb44c2f400b26d37f833fb1","modified":1670151869808},{"_id":"public/2020/12/31/Nginx缓存加速/index.html","hash":"f0ed1208c10a3330f0bb573cbb8b72dcb8a32916","modified":1670151869808},{"_id":"public/2020/12/28/HAProxy+Nginx负载均衡介绍与搭建/index.html","hash":"94a6f6ff3590c8c0b76e9287a265c6b14584f06c","modified":1670151869808},{"_id":"public/2020/12/28/Squid缓存加速/index.html","hash":"f18c2eb345d996c5e7676aa611042f9db8b46cab","modified":1670151869808},{"_id":"public/2020/12/20/Redis介绍与安装部署/index.html","hash":"1c389508db7d537256422991a43f233b8c5a3d6f","modified":1670151869808},{"_id":"public/2020/12/18/Kubernetes安装部署/index.html","hash":"a8f1c5bb26d291ab6e59441e11ee5fc2d74efcbe","modified":1670151869808},{"_id":"public/2020/12/11/Docker配置MySQL主从复制/index.html","hash":"82dd06d0735e79bc43785dfc89d32fb68b4699dd","modified":1670151869808},{"_id":"public/2020/12/05/Zabbix5.0安装/index.html","hash":"2c18b5646896ac86a7232d8c9e22f970e3c8481c","modified":1670151869808},{"_id":"public/2020/12/03/Docker安装部署ElK教程/index.html","hash":"44d89a08816b3038d806d16c27a613e86d9c790a","modified":1670151869808},{"_id":"public/2020/11/28/GitLab+Jenkins持续集成/index.html","hash":"60fbda12d4998176d66fc44c2e4c231522498342","modified":1670151869808},{"_id":"public/2020/11/20/搭建自己专属的VPN/index.html","hash":"408a62a07e546fe57c468afb529b4dc2a447ace4","modified":1670151869808},{"_id":"public/2020/11/12/github备份迁移hexo/index.html","hash":"ceb7a3ecb36440653b0be2dfe5da64684c928400","modified":1670151869808},{"_id":"public/books/index.html","hash":"5ffd4356afc4742dc117d10c83a49be21817265c","modified":1670151869808},{"_id":"public/movies/index.html","hash":"46beea6429e1078e0349d6d51a79c8ec1792cb4f","modified":1670151869808},{"_id":"public/archives/index.html","hash":"260332d83ec52e5be40736a365d8dc030e3bf713","modified":1670151869808},{"_id":"public/archives/page/2/index.html","hash":"4f908c96ca195d5e58a2088e994492f43ab6019b","modified":1670151869808},{"_id":"public/archives/2020/index.html","hash":"fd9697d14caf513466e2f5c41806504932acdb43","modified":1670151869808},{"_id":"public/archives/2020/page/2/index.html","hash":"2966e75b33d23e253819cca2075426499790fb34","modified":1670151869808},{"_id":"public/archives/2020/11/index.html","hash":"e1b2dd605bbfb951b3a1354ce56cf21c6699f9ec","modified":1670151869808},{"_id":"public/archives/2020/12/index.html","hash":"3011355b2568d19fefc0352fa9161726ee9e1197","modified":1670151869808},{"_id":"public/archives/2021/index.html","hash":"63db1556327b06c1e5e4a8931d420625f5f9b9fe","modified":1670151869808},{"_id":"public/archives/2021/01/index.html","hash":"c1ceb36b870dad49a1e19dd9c5196178598d66fd","modified":1670151869808},{"_id":"public/archives/2022/index.html","hash":"efd9e0e3ce0c4acf7ab98dabf5e2feef7e3501c1","modified":1670151869808},{"_id":"public/archives/2022/11/index.html","hash":"3b21ca90f91a213aca96547b73f71b3d736819b2","modified":1670151869808},{"_id":"public/categories/数据库/index.html","hash":"362f895bb015bc554c764dae8050ee55a4b9094d","modified":1670151869808},{"_id":"public/categories/Docker/index.html","hash":"7f6f8ac446fafc43679e0b93dce1e5e43a71b7f0","modified":1670151869808},{"_id":"public/categories/堡垒机/index.html","hash":"87103615e388a864df5facf23a74ac4b517ec936","modified":1670151869808},{"_id":"public/categories/负载均衡/index.html","hash":"c5163caa23505a1e29ce4916dea98ff31f15df4e","modified":1670151869808},{"_id":"public/categories/缓存加速/index.html","hash":"c6147d7e8ea4d4878b472e321bd929a684c7b917","modified":1670151869808},{"_id":"public/categories/监控/index.html","hash":"65a7be982892b7bbe8b379579a85c83b3e3b652b","modified":1670151869808},{"_id":"public/categories/共享服务/index.html","hash":"1481535b44f40e692df9ee0442e41781ed373091","modified":1670151869808},{"_id":"public/categories/VPN/index.html","hash":"035646b270de62d53b4722140d846c5b7e5719f6","modified":1670151869808},{"_id":"public/categories/GitHub/index.html","hash":"a2ea0190ee4902157d7a6de994ed4cc174690552","modified":1670151869808},{"_id":"public/categories/Kubernetes/index.html","hash":"72547bd62edabf38886c8d78fb8a7bd8579c6899","modified":1670151869808},{"_id":"public/index.html","hash":"8dce482efe95f3e410b3a465196e0950a8277c65","modified":1670151869808},{"_id":"public/page/2/index.html","hash":"515eee3d65357abb19edc9550b96b4e752c0a1f0","modified":1670151869808},{"_id":"public/tags/Codis/index.html","hash":"96212ad6f5e0e129c3e60264d18eac555f0557e8","modified":1670151869808},{"_id":"public/tags/Elasticsearch/index.html","hash":"07f9ea4f937b3555db2e88da0873c0772a7f9f1d","modified":1670151869808},{"_id":"public/tags/Logstash/index.html","hash":"6aab5fe13aa9af27ff222f35c8e3e774cd4106dc","modified":1670151869808},{"_id":"public/tags/Kibana/index.html","hash":"ac23605ac8d4fdc77b9082d6e957285aa4d3ab0a","modified":1670151869808},{"_id":"public/tags/Docker/index.html","hash":"47a82205d28d34ee1b2bcc1ebedfe471f3092353","modified":1670151869808},{"_id":"public/tags/MySQL/index.html","hash":"a0019608d555bb68789697d37ec89e7ac8e48e6a","modified":1670151869808},{"_id":"public/tags/Jenkins/index.html","hash":"cbcb1a9afc877bf35b81a60fb561b462512bce82","modified":1670151869808},{"_id":"public/tags/GitLab/index.html","hash":"a409df553cc1d2ea763184a03388ccbb8274b69e","modified":1670151869808},{"_id":"public/tags/JumpServer/index.html","hash":"5fdf25e3268e4e7c278b5c1b481823029ea315e4","modified":1670151869808},{"_id":"public/tags/HAProxy/index.html","hash":"572ac8e697bb097d9455b122a318115884060413","modified":1670151869808},{"_id":"public/tags/Nginx/index.html","hash":"bdda8182aa53f38e7d77d52b8e00d53e19ed5635","modified":1670151869808},{"_id":"public/tags/Redis/index.html","hash":"692b9ee7743a7fefe70a33c2ee0b042a88fe77ad","modified":1670151869808},{"_id":"public/tags/Prometheus/index.html","hash":"f8c0e7c03e28b98705d930f0d0f17d014ed84d39","modified":1670151869808},{"_id":"public/tags/Samba/index.html","hash":"76608b8b15a0b5069b0e3cecc69fd86e03954ebd","modified":1670151869808},{"_id":"public/tags/Squid/index.html","hash":"03d4e586dc67897c45265b4dc4574f64aad538f1","modified":1670151869808},{"_id":"public/tags/Zabbix/index.html","hash":"a9480b8195b880a69f33d176984e8514c77c58e6","modified":1670151869808},{"_id":"public/tags/Shadowsocks/index.html","hash":"86131a26251ce6ff3982a6acad2e0a954067959e","modified":1670151869808},{"_id":"public/tags/Hexo/index.html","hash":"cb2ea82c7d4eef18ccef19666122e705a52911fc","modified":1670151869808},{"_id":"public/tags/Kubernetes/index.html","hash":"7d3126d2401aac83997be0b4c10dbb18be00e64a","modified":1670151869808},{"_id":"public/CNAME","hash":"af215dd786bc7be3d4466e0df63db025e48dddd0","modified":1670151869808},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1670151869808},{"_id":"public/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1670151869808},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1670151869808},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1670151869808},{"_id":"public/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1670151869808},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/idle_02.mtn","hash":"865874c50848fbc9a55011391531e2ec171c9b91","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/idle_01.mtn","hash":"908abce18f6cf7fd4bc1486f048c25a517f4a34a","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/idle_04.mtn","hash":"78e22091792abb0600f724a5dfd60371257954e8","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/idle_03.mtn","hash":"84684914ebf5dc5b2df160338bb97dcc0a978476","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/shake_01.mtn","hash":"dffc54733127832f8f5e91aced55a83da58fa215","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/shake_02.mtn","hash":"7b6c914f6c33450eda2e53d9b638fd7045c0f683","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/touch_01.mtn","hash":"99270ea8fe1f8f5d88eadb94f36bd0810009d1e6","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/touch_02.mtn","hash":"4d1f099fbd18d15c598a644227ed5bf942a2ba71","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/touch_04.mtn","hash":"8d2302cfdaec698e575048797ff4f30ae4d202de","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/touch_03.mtn","hash":"9c394975083915f0f3786caff1762381348b041e","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/touch_05.mtn","hash":"9610bb8a937ba9b11445a3894d8cc0733a2b67e5","modified":1670151869808},{"_id":"public/live2dw/assets/mtn/touch_06.mtn","hash":"feb9237c73f2045ed1704c01b5362c9a54ee5a18","modified":1670151869808},{"_id":"public/live2dw/assets/wanko.model.json","hash":"b98a8ce54fbcf1606a489f1bc5f26b1a18c82d79","modified":1670151869808},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1670151869808},{"_id":"public/img/alipay.jpg","hash":"cf84008ccd91f15b30264304d1cbd5e3a831da92","modified":1670151869808},{"_id":"public/img/avatar.jpg","hash":"773ab84e200649a493dd0f56509d19ea04da9d1d","modified":1670151869808},{"_id":"public/img/wechat.jpg","hash":"6058c39edf19b405141dfbedb8daae760c64d697","modified":1670151869808},{"_id":"public/live2dw/assets/moc/wanko.1024/texture_00.png","hash":"c405c1eeb82bcced7aa7a20f04a76168f60ad561","modified":1670151869808},{"_id":"public/live2dw/assets/moc/wanko.moc","hash":"7b188cd4dcddfe5bdba8ec51a65cb1c21cd2e57a","modified":1670151869808},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1670151869808},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1670151869808},{"_id":"public/css/background.css","hash":"639f6ad7c16bd32917083f37bf14bc9cc671c77b","modified":1670151869808},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1670151869808},{"_id":"public/css/scrollbars.css","hash":"ab3f936bd8797786e23d317d5d829224f099e8d5","modified":1670151869808},{"_id":"public/js/utils.js","hash":"f24426cd3c20057ecf46a872f748bece3fb9653a","modified":1670151869808},{"_id":"public/js/weather.js","hash":"265fe058d50eeedd0309991ac31a5dc8c04bf5f1","modified":1670151869808},{"_id":"public/js/search/algolia.js","hash":"4bc8047817a3a0c11df8409399d57913d713a2a6","modified":1670151869808},{"_id":"public/js/search/local-search.js","hash":"92f2c4c651264331fa7d03e96e79bda4fd0f87db","modified":1670151869808},{"_id":"public/css/index.css","hash":"406368d4ce21419cb3789707b3728371f1c93173","modified":1670151869808},{"_id":"public/js/main.js","hash":"f72262242c4f0e4ae9027b5e291583dff7adc1b2","modified":1670151869808},{"_id":"public/js/tw_cn.js","hash":"2eafc44f4a5b24bef836b00dfc4360a84edb8dcc","modified":1670151869808},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1670151869808},{"_id":"public/img/archive_img.jpg","hash":"51de68b1788d52c8e10f740d9c713de6ac5ebd27","modified":1670151869808},{"_id":"public/img/index.jpg","hash":"fa4438e31fc28bf4708aad3d9626d0e62881a99e","modified":1670151869808}],"Category":[{"name":"数据库","_id":"clb99avew0004tobv41fg1zqf"},{"name":"Docker","_id":"clb99avf1000ctobv2bwf1vvq"},{"name":"堡垒机","_id":"clb99avfa000ttobv57mbeci3"},{"name":"负载均衡","_id":"clb99avfc0011tobv9d0e13mg"},{"name":"缓存加速","_id":"clb99avfe0019tobv4aaoh8wf"},{"name":"监控","_id":"clb99avfg001etobv65hk9mpz"},{"name":"共享服务","_id":"clb99avfh001itobvfbvb0qda"},{"name":"VPN","_id":"clb99avfk001ttobv3bib06he"},{"name":"GitHub","_id":"clb99avfk001ytobvho0ngs5i"},{"name":"Kubernetes","_id":"clb99avfy002mtobvfqw817u9"}],"Data":[{"_id":"bangumis","data":{"wantWatch":[],"watching":[],"watched":[]}},{"_id":"link","data":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}],"Page":[{"title":"塑料情","date":"2020-11-12T13:22:10.000Z","type":"link","top_img":"https://pic.downk.cc/item/5fb60176b18d627113954697.jpg","_content":"\n","source":"link/index.md","raw":"---\ntitle: 塑料情\ndate: 2020-11-12 21:22:10\ntype: \"link\"\ntop_img: https://pic.downk.cc/item/5fb60176b18d627113954697.jpg\n---\n\n","updated":"2022-11-20T14:53:46.579Z","path":"link/index.html","comments":1,"layout":"page","_id":"clb99aver0000tobvdwanbxc7","content":"","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"分类","date":"2020-11-12T13:21:55.000Z","type":"categories","top_img":"https://pic.downk.cc/item/5fb51fd3b18d627113678f55.jpg","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-11-12 21:21:55\ntype: \"categories\"\ntop_img: https://pic.downk.cc/item/5fb51fd3b18d627113678f55.jpg\n---\n","updated":"2022-11-20T14:53:46.579Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clb99avev0002tobvbyoi1ozf","content":"","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"可爱的我","date":"2020-11-13T06:58:17.000Z","type":"about","top_img":"https://pic.imgdb.cn/item/638af57016f2c2beb181f5c0.jpg","_content":"<center>\n{% hideBlock <font face=\"黑体\" size=10>我是谁?</font> %}\n<font face=\"黑体\" size=10>靓仔!</font>\n{% endhideBlock %}\n</center>\n\n##  标签 \n\n已读不回专业户\n\n国家精准扶贫项目重点帮扶对象\n\n##  基本情况  \n\n职业：现在正努力的修炼中....\n\n血型：我也不知道，虽然验了很多次血\n\n星座：双子\n\n性格：时而伤感，时而伤感，最后伤感，你喜欢的样子我都没有\n\n爱好：唱歌，篮球，RAP 我都不会\n\n嗜好：吃饱了睡，睡饱了吃\n\n长相：迷茫大众路人脸\n\n","source":"about/index.md","raw":"---\ntitle: 可爱的我\ndate: 2020-11-13 14:58:17\ntype: about\ntop_img: https://pic.imgdb.cn/item/638af57016f2c2beb181f5c0.jpg\n---\n<center>\n{% hideBlock <font face=\"黑体\" size=10>我是谁?</font> %}\n<font face=\"黑体\" size=10>靓仔!</font>\n{% endhideBlock %}\n</center>\n\n##  标签 \n\n已读不回专业户\n\n国家精准扶贫项目重点帮扶对象\n\n##  基本情况  \n\n职业：现在正努力的修炼中....\n\n血型：我也不知道，虽然验了很多次血\n\n星座：双子\n\n性格：时而伤感，时而伤感，最后伤感，你喜欢的样子我都没有\n\n爱好：唱歌，篮球，RAP 我都不会\n\n嗜好：吃饱了睡，睡饱了吃\n\n长相：迷茫大众路人脸\n\n","updated":"2022-12-03T07:14:16.445Z","path":"about/index.html","comments":1,"layout":"page","_id":"clb99avey0006tobv8wa34mvs","content":"<center>\n<div class=\"hide-block\"><button type=\"button\" class=\"hide-button button--animated\" style=\"\"><font face=黑体 size=10>我是谁?</font>\n    </button><span class=\"hide-content\"><p><font face=\"黑体\" size=10>靓仔!</font></p>\n</span></div>\n</center>\n\n<h2 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h2><p>已读不回专业户</p>\n<p>国家精准扶贫项目重点帮扶对象</p>\n<h2 id=\"基本情况\"><a href=\"#基本情况\" class=\"headerlink\" title=\"基本情况\"></a>基本情况</h2><p>职业：现在正努力的修炼中….</p>\n<p>血型：我也不知道，虽然验了很多次血</p>\n<p>星座：双子</p>\n<p>性格：时而伤感，时而伤感，最后伤感，你喜欢的样子我都没有</p>\n<p>爱好：唱歌，篮球，RAP 我都不会</p>\n<p>嗜好：吃饱了睡，睡饱了吃</p>\n<p>长相：迷茫大众路人脸</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<center>\n<div class=\"hide-block\"><button type=\"button\" class=\"hide-button button--animated\" style=\"\"><font face=黑体 size=10>我是谁?</font>\n    </button><span class=\"hide-content\"><p><font face=\"黑体\" size=10>靓仔!</font></p>\n</span></div>\n</center>\n\n<h2 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h2><p>已读不回专业户</p>\n<p>国家精准扶贫项目重点帮扶对象</p>\n<h2 id=\"基本情况\"><a href=\"#基本情况\" class=\"headerlink\" title=\"基本情况\"></a>基本情况</h2><p>职业：现在正努力的修炼中….</p>\n<p>血型：我也不知道，虽然验了很多次血</p>\n<p>星座：双子</p>\n<p>性格：时而伤感，时而伤感，最后伤感，你喜欢的样子我都没有</p>\n<p>爱好：唱歌，篮球，RAP 我都不会</p>\n<p>嗜好：吃饱了睡，睡饱了吃</p>\n<p>长相：迷茫大众路人脸</p>\n"},{"title":"图库","date":"2020-11-15T03:28:17.000Z","type":"photo","top_img":"https://pic.downk.cc/item/5fb520aeb18d62711367be33.jpg","_content":"<div class=\"gallery-group-main\">\n{% galleryGroup '猫咖' '街边的猫咖' '/photo/猫咖' https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg %}\n</div>\n\n\n","source":"photo/index.md","raw":"---\ntitle: 图库\ndate: 2020-11-15 11:28:17\ntype: \"photo\"\ntop_img: https://pic.downk.cc/item/5fb520aeb18d62711367be33.jpg\n---\n<div class=\"gallery-group-main\">\n{% galleryGroup '猫咖' '街边的猫咖' '/photo/猫咖' https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg %}\n</div>\n\n\n","updated":"2022-11-20T14:54:43.321Z","path":"photo/index.html","comments":1,"layout":"page","_id":"clb99avez0008tobv1gvm2vx8","content":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg'>\n  <figcaption>\n  <div class=\"gallery-group-name\">猫咖</div>\n  <p>街边的猫咖</p>\n  <a href='/photo/%E7%8C%AB%E5%92%96'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img\" src='https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg'>\n  <figcaption>\n  <div class=\"gallery-group-name\">猫咖</div>\n  <p>街边的猫咖</p>\n  <a href='/photo/%E7%8C%AB%E5%92%96'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n\n\n"},{"title":"标签","date":"2020-11-12T13:21:43.000Z","type":"tags","top_img":"https://pic.downk.cc/item/5fb5282fb18d62711369564b.jpg","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2020-11-12 21:21:43\ntype: \"tags\"\ntop_img: https://pic.downk.cc/item/5fb5282fb18d62711369564b.jpg\n---\n","updated":"2022-11-20T14:53:46.579Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clb99avf0000atobvcrglb8yl","content":"","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"猫咖","date":"2020-11-15T03:52:22.000Z","type":"猫咖","top_img":"https://img.imgdb.cn/item/5fba175eb18d627113976dd9.jpg","_content":"{% gallery %}\n![](https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg)\n![](https://pic.downk.cc/item/5fb0a28613b6a3f6d116672b.jpg)\n![](https://pic.downk.cc/item/5fb0a29db7544281d356bf81.jpg)\n![](https://pic.downk.cc/item/5fb0a2b3b7544281d356c668.jpg)\n![](https://pic.downk.cc/item/5fb0a2c8b7544281d356cca0.jpg)\n![](https://pic.downk.cc/item/5fb0a2dbb7544281d356d1a0.jpg)\n![](https://pic.downk.cc/item/5fb0a2eab7544281d356d634.jpg)\n{% endgallery %}\n\n","source":"photo/猫咖/index.md","raw":"---\ntitle: 猫咖\ndate: 2020-11-15 11:52:22\ntype: \"猫咖\"\ntop_img: https://img.imgdb.cn/item/5fba175eb18d627113976dd9.jpg\n---\n{% gallery %}\n![](https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg)\n![](https://pic.downk.cc/item/5fb0a28613b6a3f6d116672b.jpg)\n![](https://pic.downk.cc/item/5fb0a29db7544281d356bf81.jpg)\n![](https://pic.downk.cc/item/5fb0a2b3b7544281d356c668.jpg)\n![](https://pic.downk.cc/item/5fb0a2c8b7544281d356cca0.jpg)\n![](https://pic.downk.cc/item/5fb0a2dbb7544281d356d1a0.jpg)\n![](https://pic.downk.cc/item/5fb0a2eab7544281d356d634.jpg)\n{% endgallery %}\n\n","updated":"2022-11-20T14:53:46.579Z","path":"photo/猫咖/index.html","comments":1,"layout":"page","_id":"clb99avf2000ftobv0q0j7iv9","content":"<div class=\"justified-gallery\"><p><img src=\"https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a28613b6a3f6d116672b.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a29db7544281d356bf81.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2b3b7544281d356c668.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2c8b7544281d356cca0.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2dbb7544281d356d1a0.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2eab7544281d356d634.jpg\"></p>\n          </div>\n\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<div class=\"justified-gallery\"><p><img src=\"https://pic.downk.cc/item/5fb0a184c5384a80f8edd5af.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a28613b6a3f6d116672b.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a29db7544281d356bf81.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2b3b7544281d356c668.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2c8b7544281d356cca0.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2dbb7544281d356d1a0.jpg\"><br><img src=\"https://pic.downk.cc/item/5fb0a2eab7544281d356d634.jpg\"></p>\n          </div>\n\n"}],"Post":[{"title":"Codis介绍与安装","date":"2021-01-12T16:00:00.000Z","updated":"2022-12-03T07:10:07.769Z","description":null,"cover":"https://pic.imgdb.cn/item/638af59e16f2c2beb1826d20.jpg","_content":"##  Codis简介\nCodis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有明显的区别 (不支持的命令列表), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。\n* codis-proxy 是客户端连接的 Redis 代理服务, codis-proxy 本身实现了 Redis 协议, 表现得和一个原生的 Redis 没什么区别 (就像 Twemproxy), 对于一个业务来说, 可以部署多个 codis-proxy, codis-proxy 本身是无状态的.\n* codis-config 是 Codis 的管理工具, 支持包括, 添加/删除 Redis 节点, 添加/删除 Proxy 节点, 发起数据迁移等操作. codis-config 本身还自带了一个 http server, 会启动一个 dashboard, 用户可以直接在浏览器上观察 Codis 集群的运行状态.\n* codis-server 是 Codis 项目维护的一个 Redis 分支, 基于 2.8.13 开发, 加入了 slot 的支持和原子的数据迁移指令. Codis 上层的 codis-proxy 和 codis-config 只能和这个版本的 Redis 交互才能正常运行.\n\nCodis 依赖 ZooKeeper 来存放数据路由表和 codis-proxy 节点的元信息, codis-config 发起的命令都会通过 ZooKeeper 同步到各个存活的 codis-proxy\n\nCodis 支持按照 Namespace 区分不同的产品, 拥有不同的 product name 的产品, 各项配置都不会冲突\n###  特性\n* 自动平衡\n* 使用非常简单\n* 图形化的面板和管理工具\n* 支持绝大多数 Redis 命令，完全兼容twemproxy\n* 支持 Redis 原生客户端\n* 安全而且透明的数据移植，可根据需要轻松添加和删除节点\n* 提供命令行接口\n* RESTful APIs\n\n参考[Codis官网](https://github.com/CodisLabs/codis)\n##  Codis部署\n### Go安装\n```javascript\n[root@codis ~]# yum install -y git gcc make g++ gcc-c++ automake openssl-devel zlib-*\n[root@codis ~]# wget https://golang.google.cn/dl/go1.15.6.linux-amd64.tar.gz\n[root@codis ~]# wget https://github.com/CodisLabs/codis/releases/download/3.2.2/codis3.2.2-go1.8.5-linux.tar.gz\n[root@codis ~]# tar -zxvf go1.15.6.linux-amd64.tar.gz -C /usr/local/\n[root@codis ~]# vim /etc/profile\n···\nexport GOROOT=/usr/local/go   #设置为go安装的路径\nexport GOPATH=/usr/local/gopath  #默认安装包的路径\nexport PATH=$PATH:$GOROOT/bin:$GOPATH/bin\n[root@codis ~]# source /etc/profile\n[root@codis ~]# go version\ngo version go1.15.6 linux/amd64\n```\n### jdk安装\n```javascript\n[root@codis ~]# ls\ngo1.15.6.linux-amd64.tar.gz jdk-8u202-linux-x64.tar.gz\n[root@codis ~]# tar -zxvf jdk-8u202-linux-x64.tar.gz -C /usr/local/\n[root@codis ~]# vim /etc/profile\n···\n#java config\nexport JAVA_HOME=/usr/local/jdk1.8.0_202\nexport JRE_HOME=/usr/local/jdk1.8.0_202/jre\nexport CLASSPATH=.:${JAVA_HOME}/jre/lib/rt.jar:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar\nexport PATH=$PATH:${JAVA_HOME}/bin\n[root@codis ~]# source /etc/profile\n[root@codis ~]# java -version\njava version \"1.8.0_202\"\nJava(TM) SE Runtime Environment (build 1.8.0_202-b08)\nJava HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)\n```\n### ZooKeeper安装\n```javascript\n[root@codis ~]# wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz\n[root@codis ~]# tar -zxvf apache-zookeeper-3.6.2-bin.tar.gz -C /usr/local/\n[root@codis ~]# cd /usr/local/apache-zookeeper-3.6.2-bin/conf\n[root@codis conf]# cp zoo_sample.cfg zoo.cfg\n[root@codis conf]# vim zoo.cfg\n···\ndataDir=/usr/local/apache-zookeeper-3.6.2-bin/data\n···\n[root@codis conf]# cd ..\n[root@codis apache-zookeeper-3.6.2-bin]# mkdir data\n[root@codis apache-zookeeper-3.6.2-bin]# cd data/\n[root@codis data]# vim myid\n1\n[root@codis data]# /usr/local/apache-zookeeper-3.6.2-bin//bin/zkServer.sh start\nZooKeeper JMX enabled by default\nUsing config: /usr/local/apache-zookeeper-3.6.2-bin/bin/../conf/zoo.cfg\nStarting zookeeper ... STARTED\n```\n###  Codis安装\nCodis 源代码需要下载到 $GOPATH/src/github.com/CodisLabs/codis\n```javascript\n[root@codis data]# cd\n[root@codis ~]# mkdir -p $GOPATH/src/github.com/CodisLabs\n# 目录结构一定要是,gopath的自定义，后面的目录需要新建和官网一样，不一样要报错\n[root@codis ~]# cd $_ && git clone https://github.com/CodisLabs/codis.git -b release3.2\n[root@codis ~]# cd $GOPATH/src/github.com/CodisLabs/codis\n[root@codis codis]# make\n```\n#### 启动codis-dashboard\n脚本启动 dashboard，并查看 dashboard 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-dashboard-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/dashboard.toml\nstarting codis-dashboard ... \n[root@codis codis]# tail -100 ./log/codis-dashboard.log.2021-01-13\n···\n2021/01/13 14:22:28 main.go:171: [WARN] [0xc0001caea0] dashboard online failed [10]\n```\n执行报错\n```javascript\n[root@codis codis]# cd /tmp/codis/data/codis3/codis-demo/\n[root@codis codis-demo]# ls\ntopom\n[root@codis codis-demo]# rm topom \nrm: remove regular file ‘topom’? y\n```\netcd已经有/ codis3 / codis-service / topom了，删除掉再启动就好\n```javascript\n[root@codis codis]# ./admin/codis-dashboard-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/dashboard.toml\nstarting codis-dashboard ... \n[root@codis codis]# tail -100 ./log/codis-dashboard.log.2021-01-13\n···\n2021/01/13 14:33:33 main.go:179: [WARN] [0xc00009d680] dashboard is working ...\n```\n####  启动codis-proxy\n脚本启动 codis-proxy，并查看 proxy 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-proxy-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/proxy.toml\nstarting codis-proxy ... \n[root@codis codis]# tail -100 ./log/codis-proxy.log.2021-01-13\n···\n2021/01/13 14:43:08 main.go:343: [WARN] rpc online proxy seems OK\n2021/01/13 14:43:09 main.go:233: [WARN] [0xc00018c580] proxy is working ...\n```\n####  启动codis-server\n脚本启动 codis-server，并查看 redis 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-server-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/redis.conf\nstarting codis-server ... \n[root@codis codis]# tail -100 /tmp/redis_6379.log\n···\n3006:M 13 Jan 14:46:31.533 * The server is now ready to accept connections on port 6379\n```\n####  启动codis-fe\n脚本启动 codis-fe，并查看 fe 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-fe-admin.sh start\n\nstarting codis-fe ... \n[root@codis codis]# tail -100 ./log/codis-fe.log.2021-01-13\n2021/01/13 14:49:32 main.go:101: [WARN] set ncpu = 2\n2021/01/13 14:49:32 main.go:104: [WARN] set listen = 0.0.0.0:9090\n2021/01/13 14:49:32 main.go:120: [WARN] set assets = /usr/local/gopath/src/github.com/CodisLabs/codis/bin/assets\n2021/01/13 14:49:32 main.go:162: [WARN] set --filesystem = /tmp/codis\n2021/01/13 14:49:32 main.go:216: [WARN] option --pidfile = /usr/local/gopath/src/github.com/CodisLabs/codis/bin/codis-fe.pid\n```\n####  通过fe添加group\n通过web浏览器访问集群管理页面(fe地址:XX.XX.XX.XX:9090) 选择我们刚搭建的集群 codis-demo，在 Proxy 栏可看到我们已经启动的 Proxy， 但是 Group 栏为空，因为我们启动的 codis-server 并未加入到集群 添加 NEW GROUP，NEW GROUP 行输入 1，再点击 NEW GROUP 即可添加 Codis Server，Add Server 行输入我们刚刚启动的 codis-server 地址，添加到我们刚新建的 Group，然后再点击 Add Server 按钮即可，如下图所示：\n![](https://img.imgdb.cn/item/5ffe9e333ffa7d37b3c44d22.png)\n####  通过fe初始化slot\n新增的集群 slot 状态是 offline，因此我们需要对它进行初始化（将 1024 个 slot 分配到各个 group），而初始化最快的方法可通过 fe 提供的 rebalance all slots 按钮来做，如下图所示，点击此按钮，我们即快速完成了一个集群的搭建。\n![](https://img.imgdb.cn/item/5ffe9e393ffa7d37b3c4526c.png)\n未完待续。。。\n","source":"_posts/Codis介绍与安装.md","raw":"---\ntitle: Codis介绍与安装\ndate: 2021-1-13\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/638af59e16f2c2beb1826d20.jpg\ntag:\n  - Codis\ncategories:\n  - 数据库\n---\n##  Codis简介\nCodis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有明显的区别 (不支持的命令列表), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。\n* codis-proxy 是客户端连接的 Redis 代理服务, codis-proxy 本身实现了 Redis 协议, 表现得和一个原生的 Redis 没什么区别 (就像 Twemproxy), 对于一个业务来说, 可以部署多个 codis-proxy, codis-proxy 本身是无状态的.\n* codis-config 是 Codis 的管理工具, 支持包括, 添加/删除 Redis 节点, 添加/删除 Proxy 节点, 发起数据迁移等操作. codis-config 本身还自带了一个 http server, 会启动一个 dashboard, 用户可以直接在浏览器上观察 Codis 集群的运行状态.\n* codis-server 是 Codis 项目维护的一个 Redis 分支, 基于 2.8.13 开发, 加入了 slot 的支持和原子的数据迁移指令. Codis 上层的 codis-proxy 和 codis-config 只能和这个版本的 Redis 交互才能正常运行.\n\nCodis 依赖 ZooKeeper 来存放数据路由表和 codis-proxy 节点的元信息, codis-config 发起的命令都会通过 ZooKeeper 同步到各个存活的 codis-proxy\n\nCodis 支持按照 Namespace 区分不同的产品, 拥有不同的 product name 的产品, 各项配置都不会冲突\n###  特性\n* 自动平衡\n* 使用非常简单\n* 图形化的面板和管理工具\n* 支持绝大多数 Redis 命令，完全兼容twemproxy\n* 支持 Redis 原生客户端\n* 安全而且透明的数据移植，可根据需要轻松添加和删除节点\n* 提供命令行接口\n* RESTful APIs\n\n参考[Codis官网](https://github.com/CodisLabs/codis)\n##  Codis部署\n### Go安装\n```javascript\n[root@codis ~]# yum install -y git gcc make g++ gcc-c++ automake openssl-devel zlib-*\n[root@codis ~]# wget https://golang.google.cn/dl/go1.15.6.linux-amd64.tar.gz\n[root@codis ~]# wget https://github.com/CodisLabs/codis/releases/download/3.2.2/codis3.2.2-go1.8.5-linux.tar.gz\n[root@codis ~]# tar -zxvf go1.15.6.linux-amd64.tar.gz -C /usr/local/\n[root@codis ~]# vim /etc/profile\n···\nexport GOROOT=/usr/local/go   #设置为go安装的路径\nexport GOPATH=/usr/local/gopath  #默认安装包的路径\nexport PATH=$PATH:$GOROOT/bin:$GOPATH/bin\n[root@codis ~]# source /etc/profile\n[root@codis ~]# go version\ngo version go1.15.6 linux/amd64\n```\n### jdk安装\n```javascript\n[root@codis ~]# ls\ngo1.15.6.linux-amd64.tar.gz jdk-8u202-linux-x64.tar.gz\n[root@codis ~]# tar -zxvf jdk-8u202-linux-x64.tar.gz -C /usr/local/\n[root@codis ~]# vim /etc/profile\n···\n#java config\nexport JAVA_HOME=/usr/local/jdk1.8.0_202\nexport JRE_HOME=/usr/local/jdk1.8.0_202/jre\nexport CLASSPATH=.:${JAVA_HOME}/jre/lib/rt.jar:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar\nexport PATH=$PATH:${JAVA_HOME}/bin\n[root@codis ~]# source /etc/profile\n[root@codis ~]# java -version\njava version \"1.8.0_202\"\nJava(TM) SE Runtime Environment (build 1.8.0_202-b08)\nJava HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)\n```\n### ZooKeeper安装\n```javascript\n[root@codis ~]# wget http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz\n[root@codis ~]# tar -zxvf apache-zookeeper-3.6.2-bin.tar.gz -C /usr/local/\n[root@codis ~]# cd /usr/local/apache-zookeeper-3.6.2-bin/conf\n[root@codis conf]# cp zoo_sample.cfg zoo.cfg\n[root@codis conf]# vim zoo.cfg\n···\ndataDir=/usr/local/apache-zookeeper-3.6.2-bin/data\n···\n[root@codis conf]# cd ..\n[root@codis apache-zookeeper-3.6.2-bin]# mkdir data\n[root@codis apache-zookeeper-3.6.2-bin]# cd data/\n[root@codis data]# vim myid\n1\n[root@codis data]# /usr/local/apache-zookeeper-3.6.2-bin//bin/zkServer.sh start\nZooKeeper JMX enabled by default\nUsing config: /usr/local/apache-zookeeper-3.6.2-bin/bin/../conf/zoo.cfg\nStarting zookeeper ... STARTED\n```\n###  Codis安装\nCodis 源代码需要下载到 $GOPATH/src/github.com/CodisLabs/codis\n```javascript\n[root@codis data]# cd\n[root@codis ~]# mkdir -p $GOPATH/src/github.com/CodisLabs\n# 目录结构一定要是,gopath的自定义，后面的目录需要新建和官网一样，不一样要报错\n[root@codis ~]# cd $_ && git clone https://github.com/CodisLabs/codis.git -b release3.2\n[root@codis ~]# cd $GOPATH/src/github.com/CodisLabs/codis\n[root@codis codis]# make\n```\n#### 启动codis-dashboard\n脚本启动 dashboard，并查看 dashboard 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-dashboard-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/dashboard.toml\nstarting codis-dashboard ... \n[root@codis codis]# tail -100 ./log/codis-dashboard.log.2021-01-13\n···\n2021/01/13 14:22:28 main.go:171: [WARN] [0xc0001caea0] dashboard online failed [10]\n```\n执行报错\n```javascript\n[root@codis codis]# cd /tmp/codis/data/codis3/codis-demo/\n[root@codis codis-demo]# ls\ntopom\n[root@codis codis-demo]# rm topom \nrm: remove regular file ‘topom’? y\n```\netcd已经有/ codis3 / codis-service / topom了，删除掉再启动就好\n```javascript\n[root@codis codis]# ./admin/codis-dashboard-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/dashboard.toml\nstarting codis-dashboard ... \n[root@codis codis]# tail -100 ./log/codis-dashboard.log.2021-01-13\n···\n2021/01/13 14:33:33 main.go:179: [WARN] [0xc00009d680] dashboard is working ...\n```\n####  启动codis-proxy\n脚本启动 codis-proxy，并查看 proxy 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-proxy-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/proxy.toml\nstarting codis-proxy ... \n[root@codis codis]# tail -100 ./log/codis-proxy.log.2021-01-13\n···\n2021/01/13 14:43:08 main.go:343: [WARN] rpc online proxy seems OK\n2021/01/13 14:43:09 main.go:233: [WARN] [0xc00018c580] proxy is working ...\n```\n####  启动codis-server\n脚本启动 codis-server，并查看 redis 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-server-admin.sh start\n/usr/local/gopath/src/github.com/CodisLabs/codis/admin/../config/redis.conf\nstarting codis-server ... \n[root@codis codis]# tail -100 /tmp/redis_6379.log\n···\n3006:M 13 Jan 14:46:31.533 * The server is now ready to accept connections on port 6379\n```\n####  启动codis-fe\n脚本启动 codis-fe，并查看 fe 日志确认启动是否有异常\n```javascript\n[root@codis codis]# ./admin/codis-fe-admin.sh start\n\nstarting codis-fe ... \n[root@codis codis]# tail -100 ./log/codis-fe.log.2021-01-13\n2021/01/13 14:49:32 main.go:101: [WARN] set ncpu = 2\n2021/01/13 14:49:32 main.go:104: [WARN] set listen = 0.0.0.0:9090\n2021/01/13 14:49:32 main.go:120: [WARN] set assets = /usr/local/gopath/src/github.com/CodisLabs/codis/bin/assets\n2021/01/13 14:49:32 main.go:162: [WARN] set --filesystem = /tmp/codis\n2021/01/13 14:49:32 main.go:216: [WARN] option --pidfile = /usr/local/gopath/src/github.com/CodisLabs/codis/bin/codis-fe.pid\n```\n####  通过fe添加group\n通过web浏览器访问集群管理页面(fe地址:XX.XX.XX.XX:9090) 选择我们刚搭建的集群 codis-demo，在 Proxy 栏可看到我们已经启动的 Proxy， 但是 Group 栏为空，因为我们启动的 codis-server 并未加入到集群 添加 NEW GROUP，NEW GROUP 行输入 1，再点击 NEW GROUP 即可添加 Codis Server，Add Server 行输入我们刚刚启动的 codis-server 地址，添加到我们刚新建的 Group，然后再点击 Add Server 按钮即可，如下图所示：\n![](https://img.imgdb.cn/item/5ffe9e333ffa7d37b3c44d22.png)\n####  通过fe初始化slot\n新增的集群 slot 状态是 offline，因此我们需要对它进行初始化（将 1024 个 slot 分配到各个 group），而初始化最快的方法可通过 fe 提供的 rebalance all slots 按钮来做，如下图所示，点击此按钮，我们即快速完成了一个集群的搭建。\n![](https://img.imgdb.cn/item/5ffe9e393ffa7d37b3c4526c.png)\n未完待续。。。\n","slug":"Codis介绍与安装","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avet0001tobv65zq977x","content":"<h2 id=\"Codis简介\"><a href=\"#Codis简介\" class=\"headerlink\" title=\"Codis简介\"></a>Codis简介</h2><p>Codis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有明显的区别 (不支持的命令列表), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。</p>\n<ul>\n<li>codis-proxy 是客户端连接的 Redis 代理服务, codis-proxy 本身实现了 Redis 协议, 表现得和一个原生的 Redis 没什么区别 (就像 Twemproxy), 对于一个业务来说, 可以部署多个 codis-proxy, codis-proxy 本身是无状态的.</li>\n<li>codis-config 是 Codis 的管理工具, 支持包括, 添加/删除 Redis 节点, 添加/删除 Proxy 节点, 发起数据迁移等操作. codis-config 本身还自带了一个 http server, 会启动一个 dashboard, 用户可以直接在浏览器上观察 Codis 集群的运行状态.</li>\n<li>codis-server 是 Codis 项目维护的一个 Redis 分支, 基于 2.8.13 开发, 加入了 slot 的支持和原子的数据迁移指令. Codis 上层的 codis-proxy 和 codis-config 只能和这个版本的 Redis 交互才能正常运行.</li>\n</ul>\n<p>Codis 依赖 ZooKeeper 来存放数据路由表和 codis-proxy 节点的元信息, codis-config 发起的命令都会通过 ZooKeeper 同步到各个存活的 codis-proxy</p>\n<p>Codis 支持按照 Namespace 区分不同的产品, 拥有不同的 product name 的产品, 各项配置都不会冲突</p>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>自动平衡</li>\n<li>使用非常简单</li>\n<li>图形化的面板和管理工具</li>\n<li>支持绝大多数 Redis 命令，完全兼容twemproxy</li>\n<li>支持 Redis 原生客户端</li>\n<li>安全而且透明的数据移植，可根据需要轻松添加和删除节点</li>\n<li>提供命令行接口</li>\n<li>RESTful APIs</li>\n</ul>\n<p>参考<a href=\"https://github.com/CodisLabs/codis\">Codis官网</a></p>\n<h2 id=\"Codis部署\"><a href=\"#Codis部署\" class=\"headerlink\" title=\"Codis部署\"></a>Codis部署</h2><h3 id=\"Go安装\"><a href=\"#Go安装\" class=\"headerlink\" title=\"Go安装\"></a>Go安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis ~]# yum install -y git gcc make g++ gcc-c++ automake openssl-devel zlib-*</span><br><span class=\"line\">[root@codis ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//golang.google.cn/dl/go1.15.6.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@codis ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/CodisLabs/codis/releases/download/3.2.2/codis3.2.2-go1.8.5-linux.tar.gz</span></span><br><span class=\"line\">[root@codis ~]# tar -zxvf go1<span class=\"number\">.15</span><span class=\"number\">.6</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@codis ~]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">GOROOT</span>=<span class=\"regexp\">/usr/</span>local/go   #设置为go安装的路径</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">GOPATH</span>=<span class=\"regexp\">/usr/</span>local/gopath  #默认安装包的路径</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:$GOROOT/<span class=\"attr\">bin</span>:$GOPATH/bin</span><br><span class=\"line\">[root@codis ~]# source /etc/profile</span><br><span class=\"line\">[root@codis ~]# go version</span><br><span class=\"line\">go version go1<span class=\"number\">.15</span><span class=\"number\">.6</span> linux/amd64</span><br></pre></td></tr></table></figure>\n<h3 id=\"jdk安装\"><a href=\"#jdk安装\" class=\"headerlink\" title=\"jdk安装\"></a>jdk安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis ~]# ls</span><br><span class=\"line\">go1<span class=\"number\">.15</span><span class=\"number\">.6</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> jdk-8u202-linux-x64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@codis ~]# tar -zxvf jdk-8u202-linux-x64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@codis ~]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\">#java config</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">JAVA_HOME</span>=<span class=\"regexp\">/usr/</span>local/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_202</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">JRE_HOME</span>=<span class=\"regexp\">/usr/</span>local/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_202</span>/jre</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">CLASSPATH</span>=.:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/jre/lib/rt.<span class=\"property\">jar</span>:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/lib/dt.<span class=\"property\">jar</span>:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/lib/tools.<span class=\"property\">jar</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/bin</span><br><span class=\"line\">[root@codis ~]# source /etc/profile</span><br><span class=\"line\">[root@codis ~]# java -version</span><br><span class=\"line\">java version <span class=\"string\">&quot;1.8.0_202&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Java</span>(<span class=\"variable constant_\">TM</span>) <span class=\"variable constant_\">SE</span> <span class=\"title class_\">Runtime</span> <span class=\"title class_\">Environment</span> (build <span class=\"number\">1.8</span><span class=\"number\">.0_202</span>-b08)</span><br><span class=\"line\"><span class=\"title class_\">Java</span> <span class=\"title class_\">HotSpot</span>(<span class=\"variable constant_\">TM</span>) <span class=\"number\">64</span>-<span class=\"title class_\">Bit</span> <span class=\"title class_\">Server</span> <span class=\"variable constant_\">VM</span> (build <span class=\"number\">25.202</span>-b08, mixed mode)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ZooKeeper安装\"><a href=\"#ZooKeeper安装\" class=\"headerlink\" title=\"ZooKeeper安装\"></a>ZooKeeper安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis ~]# wget <span class=\"attr\">http</span>:<span class=\"comment\">//mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span></span><br><span class=\"line\">[root@codis ~]# tar -zxvf apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@codis ~]# cd /usr/local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin/conf</span><br><span class=\"line\">[root@codis conf]# cp zoo_sample.<span class=\"property\">cfg</span> zoo.<span class=\"property\">cfg</span></span><br><span class=\"line\">[root@codis conf]# vim zoo.<span class=\"property\">cfg</span></span><br><span class=\"line\">···</span><br><span class=\"line\">dataDir=<span class=\"regexp\">/usr/</span>local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin/data</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@codis conf]# cd ..</span><br><span class=\"line\">[root@codis apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin]# mkdir data</span><br><span class=\"line\">[root@codis apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin]# cd data/</span><br><span class=\"line\">[root@codis data]# vim myid</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">[root@codis data]# /usr/local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin<span class=\"comment\">//bin/zkServer.sh start</span></span><br><span class=\"line\"><span class=\"title class_\">ZooKeeper</span> <span class=\"variable constant_\">JMX</span> enabled by <span class=\"keyword\">default</span></span><br><span class=\"line\"><span class=\"title class_\">Using</span> <span class=\"attr\">config</span>: <span class=\"regexp\">/usr/</span>local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin/bin/../conf/zoo.<span class=\"property\">cfg</span></span><br><span class=\"line\"><span class=\"title class_\">Starting</span> zookeeper ... <span class=\"variable constant_\">STARTED</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Codis安装\"><a href=\"#Codis安装\" class=\"headerlink\" title=\"Codis安装\"></a>Codis安装</h3><p>Codis 源代码需要下载到 $GOPATH/src/github.com/CodisLabs/codis</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis data]# cd</span><br><span class=\"line\">[root@codis ~]# mkdir -p $GOPATH/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span></span><br><span class=\"line\"># 目录结构一定要是,gopath的自定义，后面的目录需要新建和官网一样，不一样要报错</span><br><span class=\"line\">[root@codis ~]# cd $_ &amp;&amp; git clone <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/CodisLabs/codis.git -b release3.2</span></span><br><span class=\"line\">[root@codis ~]# cd $GOPATH/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis</span><br><span class=\"line\">[root@codis codis]# make</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-dashboard\"><a href=\"#启动codis-dashboard\" class=\"headerlink\" title=\"启动codis-dashboard\"></a>启动codis-dashboard</h4><p>脚本启动 dashboard，并查看 dashboard 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-dashboard-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/dashboard.<span class=\"property\">toml</span></span><br><span class=\"line\">starting codis-dashboard ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-dashboard.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">22</span>:<span class=\"number\">28</span> main.<span class=\"property\">go</span>:<span class=\"number\">171</span>: [<span class=\"variable constant_\">WARN</span>] [<span class=\"number\">0xc0001caea0</span>] dashboard online failed [<span class=\"number\">10</span>]</span><br></pre></td></tr></table></figure>\n<p>执行报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# cd /tmp/codis/data/codis3/codis-demo/</span><br><span class=\"line\">[root@codis codis-demo]# ls</span><br><span class=\"line\">topom</span><br><span class=\"line\">[root@codis codis-demo]# rm topom </span><br><span class=\"line\"><span class=\"attr\">rm</span>: remove regular file ‘topom’? y</span><br></pre></td></tr></table></figure>\n<p>etcd已经有/ codis3 / codis-service / topom了，删除掉再启动就好</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-dashboard-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/dashboard.<span class=\"property\">toml</span></span><br><span class=\"line\">starting codis-dashboard ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-dashboard.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">33</span>:<span class=\"number\">33</span> main.<span class=\"property\">go</span>:<span class=\"number\">179</span>: [<span class=\"variable constant_\">WARN</span>] [<span class=\"number\">0xc00009d680</span>] dashboard is working ...</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-proxy\"><a href=\"#启动codis-proxy\" class=\"headerlink\" title=\"启动codis-proxy\"></a>启动codis-proxy</h4><p>脚本启动 codis-proxy，并查看 proxy 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-proxy-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/proxy.<span class=\"property\">toml</span></span><br><span class=\"line\">starting codis-proxy ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-proxy.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">43</span>:<span class=\"number\">08</span> main.<span class=\"property\">go</span>:<span class=\"number\">343</span>: [<span class=\"variable constant_\">WARN</span>] rpc online proxy seems <span class=\"variable constant_\">OK</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">43</span>:<span class=\"number\">09</span> main.<span class=\"property\">go</span>:<span class=\"number\">233</span>: [<span class=\"variable constant_\">WARN</span>] [<span class=\"number\">0xc00018c580</span>] proxy is working ...</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-server\"><a href=\"#启动codis-server\" class=\"headerlink\" title=\"启动codis-server\"></a>启动codis-server</h4><p>脚本启动 codis-server，并查看 redis 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-server-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/redis.<span class=\"property\">conf</span></span><br><span class=\"line\">starting codis-server ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> /tmp/redis_6379.<span class=\"property\">log</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">3006</span>:M <span class=\"number\">13</span> <span class=\"title class_\">Jan</span> <span class=\"number\">14</span>:<span class=\"number\">46</span>:<span class=\"number\">31.533</span> * <span class=\"title class_\">The</span> server is now ready to accept connections on port <span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-fe\"><a href=\"#启动codis-fe\" class=\"headerlink\" title=\"启动codis-fe\"></a>启动codis-fe</h4><p>脚本启动 codis-fe，并查看 fe 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-fe-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\"></span><br><span class=\"line\">starting codis-fe ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-fe.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">101</span>: [<span class=\"variable constant_\">WARN</span>] set ncpu = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">104</span>: [<span class=\"variable constant_\">WARN</span>] set listen = <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">9090</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">120</span>: [<span class=\"variable constant_\">WARN</span>] set assets = <span class=\"regexp\">/usr/</span>local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/bin/assets</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">162</span>: [<span class=\"variable constant_\">WARN</span>] set --filesystem = <span class=\"regexp\">/tmp/</span>codis</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">216</span>: [<span class=\"variable constant_\">WARN</span>] option --pidfile = <span class=\"regexp\">/usr/</span>local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/bin/codis-fe.<span class=\"property\">pid</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"通过fe添加group\"><a href=\"#通过fe添加group\" class=\"headerlink\" title=\"通过fe添加group\"></a>通过fe添加group</h4><p>通过web浏览器访问集群管理页面(fe地址:XX.XX.XX.XX:9090) 选择我们刚搭建的集群 codis-demo，在 Proxy 栏可看到我们已经启动的 Proxy， 但是 Group 栏为空，因为我们启动的 codis-server 并未加入到集群 添加 NEW GROUP，NEW GROUP 行输入 1，再点击 NEW GROUP 即可添加 Codis Server，Add Server 行输入我们刚刚启动的 codis-server 地址，添加到我们刚新建的 Group，然后再点击 Add Server 按钮即可，如下图所示：<br><img src=\"https://img.imgdb.cn/item/5ffe9e333ffa7d37b3c44d22.png\"></p>\n<h4 id=\"通过fe初始化slot\"><a href=\"#通过fe初始化slot\" class=\"headerlink\" title=\"通过fe初始化slot\"></a>通过fe初始化slot</h4><p>新增的集群 slot 状态是 offline，因此我们需要对它进行初始化（将 1024 个 slot 分配到各个 group），而初始化最快的方法可通过 fe 提供的 rebalance all slots 按钮来做，如下图所示，点击此按钮，我们即快速完成了一个集群的搭建。<br><img src=\"https://img.imgdb.cn/item/5ffe9e393ffa7d37b3c4526c.png\"><br>未完待续。。。</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Codis简介\"><a href=\"#Codis简介\" class=\"headerlink\" title=\"Codis简介\"></a>Codis简介</h2><p>Codis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有明显的区别 (不支持的命令列表), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。</p>\n<ul>\n<li>codis-proxy 是客户端连接的 Redis 代理服务, codis-proxy 本身实现了 Redis 协议, 表现得和一个原生的 Redis 没什么区别 (就像 Twemproxy), 对于一个业务来说, 可以部署多个 codis-proxy, codis-proxy 本身是无状态的.</li>\n<li>codis-config 是 Codis 的管理工具, 支持包括, 添加/删除 Redis 节点, 添加/删除 Proxy 节点, 发起数据迁移等操作. codis-config 本身还自带了一个 http server, 会启动一个 dashboard, 用户可以直接在浏览器上观察 Codis 集群的运行状态.</li>\n<li>codis-server 是 Codis 项目维护的一个 Redis 分支, 基于 2.8.13 开发, 加入了 slot 的支持和原子的数据迁移指令. Codis 上层的 codis-proxy 和 codis-config 只能和这个版本的 Redis 交互才能正常运行.</li>\n</ul>\n<p>Codis 依赖 ZooKeeper 来存放数据路由表和 codis-proxy 节点的元信息, codis-config 发起的命令都会通过 ZooKeeper 同步到各个存活的 codis-proxy</p>\n<p>Codis 支持按照 Namespace 区分不同的产品, 拥有不同的 product name 的产品, 各项配置都不会冲突</p>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>自动平衡</li>\n<li>使用非常简单</li>\n<li>图形化的面板和管理工具</li>\n<li>支持绝大多数 Redis 命令，完全兼容twemproxy</li>\n<li>支持 Redis 原生客户端</li>\n<li>安全而且透明的数据移植，可根据需要轻松添加和删除节点</li>\n<li>提供命令行接口</li>\n<li>RESTful APIs</li>\n</ul>\n<p>参考<a href=\"https://github.com/CodisLabs/codis\">Codis官网</a></p>\n<h2 id=\"Codis部署\"><a href=\"#Codis部署\" class=\"headerlink\" title=\"Codis部署\"></a>Codis部署</h2><h3 id=\"Go安装\"><a href=\"#Go安装\" class=\"headerlink\" title=\"Go安装\"></a>Go安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis ~]# yum install -y git gcc make g++ gcc-c++ automake openssl-devel zlib-*</span><br><span class=\"line\">[root@codis ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//golang.google.cn/dl/go1.15.6.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@codis ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/CodisLabs/codis/releases/download/3.2.2/codis3.2.2-go1.8.5-linux.tar.gz</span></span><br><span class=\"line\">[root@codis ~]# tar -zxvf go1<span class=\"number\">.15</span><span class=\"number\">.6</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@codis ~]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">GOROOT</span>=<span class=\"regexp\">/usr/</span>local/go   #设置为go安装的路径</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">GOPATH</span>=<span class=\"regexp\">/usr/</span>local/gopath  #默认安装包的路径</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:$GOROOT/<span class=\"attr\">bin</span>:$GOPATH/bin</span><br><span class=\"line\">[root@codis ~]# source /etc/profile</span><br><span class=\"line\">[root@codis ~]# go version</span><br><span class=\"line\">go version go1<span class=\"number\">.15</span><span class=\"number\">.6</span> linux/amd64</span><br></pre></td></tr></table></figure>\n<h3 id=\"jdk安装\"><a href=\"#jdk安装\" class=\"headerlink\" title=\"jdk安装\"></a>jdk安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis ~]# ls</span><br><span class=\"line\">go1<span class=\"number\">.15</span><span class=\"number\">.6</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> jdk-8u202-linux-x64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@codis ~]# tar -zxvf jdk-8u202-linux-x64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@codis ~]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\">#java config</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">JAVA_HOME</span>=<span class=\"regexp\">/usr/</span>local/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_202</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">JRE_HOME</span>=<span class=\"regexp\">/usr/</span>local/jdk1<span class=\"number\">.8</span><span class=\"number\">.0_202</span>/jre</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">CLASSPATH</span>=.:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/jre/lib/rt.<span class=\"property\">jar</span>:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/lib/dt.<span class=\"property\">jar</span>:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/lib/tools.<span class=\"property\">jar</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:$&#123;<span class=\"variable constant_\">JAVA_HOME</span>&#125;/bin</span><br><span class=\"line\">[root@codis ~]# source /etc/profile</span><br><span class=\"line\">[root@codis ~]# java -version</span><br><span class=\"line\">java version <span class=\"string\">&quot;1.8.0_202&quot;</span></span><br><span class=\"line\"><span class=\"title class_\">Java</span>(<span class=\"variable constant_\">TM</span>) <span class=\"variable constant_\">SE</span> <span class=\"title class_\">Runtime</span> <span class=\"title class_\">Environment</span> (build <span class=\"number\">1.8</span><span class=\"number\">.0_202</span>-b08)</span><br><span class=\"line\"><span class=\"title class_\">Java</span> <span class=\"title class_\">HotSpot</span>(<span class=\"variable constant_\">TM</span>) <span class=\"number\">64</span>-<span class=\"title class_\">Bit</span> <span class=\"title class_\">Server</span> <span class=\"variable constant_\">VM</span> (build <span class=\"number\">25.202</span>-b08, mixed mode)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ZooKeeper安装\"><a href=\"#ZooKeeper安装\" class=\"headerlink\" title=\"ZooKeeper安装\"></a>ZooKeeper安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis ~]# wget <span class=\"attr\">http</span>:<span class=\"comment\">//mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span></span><br><span class=\"line\">[root@codis ~]# tar -zxvf apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@codis ~]# cd /usr/local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin/conf</span><br><span class=\"line\">[root@codis conf]# cp zoo_sample.<span class=\"property\">cfg</span> zoo.<span class=\"property\">cfg</span></span><br><span class=\"line\">[root@codis conf]# vim zoo.<span class=\"property\">cfg</span></span><br><span class=\"line\">···</span><br><span class=\"line\">dataDir=<span class=\"regexp\">/usr/</span>local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin/data</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@codis conf]# cd ..</span><br><span class=\"line\">[root@codis apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin]# mkdir data</span><br><span class=\"line\">[root@codis apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin]# cd data/</span><br><span class=\"line\">[root@codis data]# vim myid</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\">[root@codis data]# /usr/local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin<span class=\"comment\">//bin/zkServer.sh start</span></span><br><span class=\"line\"><span class=\"title class_\">ZooKeeper</span> <span class=\"variable constant_\">JMX</span> enabled by <span class=\"keyword\">default</span></span><br><span class=\"line\"><span class=\"title class_\">Using</span> <span class=\"attr\">config</span>: <span class=\"regexp\">/usr/</span>local/apache-zookeeper-<span class=\"number\">3.6</span><span class=\"number\">.2</span>-bin/bin/../conf/zoo.<span class=\"property\">cfg</span></span><br><span class=\"line\"><span class=\"title class_\">Starting</span> zookeeper ... <span class=\"variable constant_\">STARTED</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Codis安装\"><a href=\"#Codis安装\" class=\"headerlink\" title=\"Codis安装\"></a>Codis安装</h3><p>Codis 源代码需要下载到 $GOPATH/src/github.com/CodisLabs/codis</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis data]# cd</span><br><span class=\"line\">[root@codis ~]# mkdir -p $GOPATH/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span></span><br><span class=\"line\"># 目录结构一定要是,gopath的自定义，后面的目录需要新建和官网一样，不一样要报错</span><br><span class=\"line\">[root@codis ~]# cd $_ &amp;&amp; git clone <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/CodisLabs/codis.git -b release3.2</span></span><br><span class=\"line\">[root@codis ~]# cd $GOPATH/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis</span><br><span class=\"line\">[root@codis codis]# make</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-dashboard\"><a href=\"#启动codis-dashboard\" class=\"headerlink\" title=\"启动codis-dashboard\"></a>启动codis-dashboard</h4><p>脚本启动 dashboard，并查看 dashboard 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-dashboard-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/dashboard.<span class=\"property\">toml</span></span><br><span class=\"line\">starting codis-dashboard ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-dashboard.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">22</span>:<span class=\"number\">28</span> main.<span class=\"property\">go</span>:<span class=\"number\">171</span>: [<span class=\"variable constant_\">WARN</span>] [<span class=\"number\">0xc0001caea0</span>] dashboard online failed [<span class=\"number\">10</span>]</span><br></pre></td></tr></table></figure>\n<p>执行报错</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# cd /tmp/codis/data/codis3/codis-demo/</span><br><span class=\"line\">[root@codis codis-demo]# ls</span><br><span class=\"line\">topom</span><br><span class=\"line\">[root@codis codis-demo]# rm topom </span><br><span class=\"line\"><span class=\"attr\">rm</span>: remove regular file ‘topom’? y</span><br></pre></td></tr></table></figure>\n<p>etcd已经有/ codis3 / codis-service / topom了，删除掉再启动就好</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-dashboard-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/dashboard.<span class=\"property\">toml</span></span><br><span class=\"line\">starting codis-dashboard ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-dashboard.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">33</span>:<span class=\"number\">33</span> main.<span class=\"property\">go</span>:<span class=\"number\">179</span>: [<span class=\"variable constant_\">WARN</span>] [<span class=\"number\">0xc00009d680</span>] dashboard is working ...</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-proxy\"><a href=\"#启动codis-proxy\" class=\"headerlink\" title=\"启动codis-proxy\"></a>启动codis-proxy</h4><p>脚本启动 codis-proxy，并查看 proxy 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-proxy-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/proxy.<span class=\"property\">toml</span></span><br><span class=\"line\">starting codis-proxy ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-proxy.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">43</span>:<span class=\"number\">08</span> main.<span class=\"property\">go</span>:<span class=\"number\">343</span>: [<span class=\"variable constant_\">WARN</span>] rpc online proxy seems <span class=\"variable constant_\">OK</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">43</span>:<span class=\"number\">09</span> main.<span class=\"property\">go</span>:<span class=\"number\">233</span>: [<span class=\"variable constant_\">WARN</span>] [<span class=\"number\">0xc00018c580</span>] proxy is working ...</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-server\"><a href=\"#启动codis-server\" class=\"headerlink\" title=\"启动codis-server\"></a>启动codis-server</h4><p>脚本启动 codis-server，并查看 redis 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-server-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\">/usr/local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/admin/../config/redis.<span class=\"property\">conf</span></span><br><span class=\"line\">starting codis-server ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> /tmp/redis_6379.<span class=\"property\">log</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">3006</span>:M <span class=\"number\">13</span> <span class=\"title class_\">Jan</span> <span class=\"number\">14</span>:<span class=\"number\">46</span>:<span class=\"number\">31.533</span> * <span class=\"title class_\">The</span> server is now ready to accept connections on port <span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"启动codis-fe\"><a href=\"#启动codis-fe\" class=\"headerlink\" title=\"启动codis-fe\"></a>启动codis-fe</h4><p>脚本启动 codis-fe，并查看 fe 日志确认启动是否有异常</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@codis codis]# ./admin/codis-fe-admin.<span class=\"property\">sh</span> start</span><br><span class=\"line\"></span><br><span class=\"line\">starting codis-fe ... </span><br><span class=\"line\">[root@codis codis]# tail -<span class=\"number\">100</span> ./log/codis-fe.<span class=\"property\">log</span><span class=\"number\">.2021</span>-<span class=\"number\">01</span>-<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">101</span>: [<span class=\"variable constant_\">WARN</span>] set ncpu = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">104</span>: [<span class=\"variable constant_\">WARN</span>] set listen = <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">9090</span></span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">120</span>: [<span class=\"variable constant_\">WARN</span>] set assets = <span class=\"regexp\">/usr/</span>local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/bin/assets</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">162</span>: [<span class=\"variable constant_\">WARN</span>] set --filesystem = <span class=\"regexp\">/tmp/</span>codis</span><br><span class=\"line\"><span class=\"number\">2021</span>/<span class=\"number\">01</span>/<span class=\"number\">13</span> <span class=\"number\">14</span>:<span class=\"number\">49</span>:<span class=\"number\">32</span> main.<span class=\"property\">go</span>:<span class=\"number\">216</span>: [<span class=\"variable constant_\">WARN</span>] option --pidfile = <span class=\"regexp\">/usr/</span>local/gopath/src/github.<span class=\"property\">com</span>/<span class=\"title class_\">CodisLabs</span>/codis/bin/codis-fe.<span class=\"property\">pid</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"通过fe添加group\"><a href=\"#通过fe添加group\" class=\"headerlink\" title=\"通过fe添加group\"></a>通过fe添加group</h4><p>通过web浏览器访问集群管理页面(fe地址:XX.XX.XX.XX:9090) 选择我们刚搭建的集群 codis-demo，在 Proxy 栏可看到我们已经启动的 Proxy， 但是 Group 栏为空，因为我们启动的 codis-server 并未加入到集群 添加 NEW GROUP，NEW GROUP 行输入 1，再点击 NEW GROUP 即可添加 Codis Server，Add Server 行输入我们刚刚启动的 codis-server 地址，添加到我们刚新建的 Group，然后再点击 Add Server 按钮即可，如下图所示：<br><img src=\"https://img.imgdb.cn/item/5ffe9e333ffa7d37b3c44d22.png\"></p>\n<h4 id=\"通过fe初始化slot\"><a href=\"#通过fe初始化slot\" class=\"headerlink\" title=\"通过fe初始化slot\"></a>通过fe初始化slot</h4><p>新增的集群 slot 状态是 offline，因此我们需要对它进行初始化（将 1024 个 slot 分配到各个 group），而初始化最快的方法可通过 fe 提供的 rebalance all slots 按钮来做，如下图所示，点击此按钮，我们即快速完成了一个集群的搭建。<br><img src=\"https://img.imgdb.cn/item/5ffe9e393ffa7d37b3c4526c.png\"><br>未完待续。。。</p>\n"},{"title":"Docker安装部署ElK教程","date":"2020-12-02T16:00:00.000Z","updated":"2022-12-03T07:12:25.403Z","description":null,"cover":"https://pic.imgdb.cn/item/638af58116f2c2beb1822199.jpg","_content":"## 简介\n### 核心组成\nELK由**Elasticsearch**，**Logstash**和**Kibana**三部分组件组成；\n\nElasticsearch是一个开源分布式搜索引擎，它的特点是：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。\n\nLogstash是一个完全开源的工具，它可以对您的日志进行收集，分析，将其存储供以后使用Kibana是一个开源和免费的工具，它可以为Logstash和ElasticSearch提供的日志分析友好的Web界面，可以帮助您汇总，分析和搜索重要数据日志。\n\n### 四大组件\nLogstash：logstash服务器端\n\nElasticsearch：存储类别日志\n\nKibana：网络化接口\n\nLogstash转发器：logstash客户端端通过木材服务器网络协议发送日志到logstash服务器\n\n### ELK工作流程\n在需要收集日志的所有服务上部署logstash，作为logstash代理（logstash shipper）用于监控并过滤收集日志，将过滤后的内容发送到Redis，然后logstash indexer将日志收集在一起并提供全文搜索服务ElasticSearch，可以用ElasticSearch进行自定义搜索通过Kibana来结合自定义搜索进行页面展示。\n\n## Docker安装ELK\n参考[ELK官网](https://www.elastic.co/)\n### 拉取镜像\n```javascript\n[root@jjh ~]# docker pull docker.elastic.co/elasticsearch/elasticsearch:7.10.0\n[root@jjh ~]# docker pull docker.elastic.co/logstash/logstash:7.10.0\n[root@jjh ~]# docker pull docker.elastic.co/kibana/kibana:7.10.0\n[root@jjh ~]# docker images\nREPOSITORY                                      TAG                 IMAGE ID            CREATED             SIZE\ndocker.elastic.co/logstash/logstash             7.10.0              bc71baf6997e        3 weeks ago         843 MB\ndocker.elastic.co/kibana/kibana                 7.10.0              da7fcd592595        3 weeks ago         1 GB\ndocker.elastic.co/elasticsearch/elasticsearch   7.10.0              37190fe5beea        3 weeks ago         774 MB\n```\n### 运行容器\n```javascript\n[root@jjh ~]# docker run -d --name es -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" docker.elastic.co/elasticsearch/elasticsearch:7.10.0\n[root@jjh ~]# docker run --name es_logstash docker.elastic.co/logstash/logstash:7.10.0\n[root@jjh ~]# docker run --name es_kibana -p 5601:5601 -d -e ELASTICSEARCH_URL=http://localhost:9200 docker.elastic.co/kibana/kibana:7.10.0\n[root@jjh ~]# docker ps\nCONTAINER ID        IMAGE                                                  COMMAND                  CREATED             STATUS              PORTS                                            NAMES\nf017ffdeb0d5        docker.elastic.co/kibana/kibana:7.10.0                 \"/usr/local/bin/du...\"   4 hours ago         Up 4 hours          0.0.0.0:5601->5601/tcp                           es_kibana\nb7249be98850        docker.elastic.co/logstash/logstash:7.10.0             \"/usr/local/bin/do...\"   4 hours ago         Up 3 hours          5044/tcp, 9600/tcp                               es_logstash\n1242f863cf94        docker.elastic.co/elasticsearch/elasticsearch:7.10.0   \"/tini -- /usr/loc...\"   4 hours ago         Up 3 hours          0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   es\n```\n###  修改配置文件\n#### Elasticsearch\n进入容器，修改 elasticsearch.yml 文件\n```javascript\n[root@1242f863cf94 elasticsearch]# cat config/elasticsearch.yml \ncluster.name: \"docker-cluster\"\nnetwork.host: 0.0.0.0\n# 加入跨域配置\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n```\n访问  http://localhost:9200  ,显示如下：\n```javascript\n{\n  \"name\" : \"1242f863cf94\",\n  \"cluster_name\" : \"docker-cluster\",\n  \"cluster_uuid\" : \"svVoSL31SwCdpvize03tGA\",\n  \"version\" : {\n    \"number\" : \"7.10.0\",\n    \"build_flavor\" : \"default\",\n    \"build_type\" : \"docker\",\n    \"build_hash\" : \"51e9d6f22758d0374a0f3f5c6e8f3a7997850f96\",\n    \"build_date\" : \"2020-11-09T21:30:33.964949Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"8.7.0\",\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\n    \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n```\n####  Logstash\n进入容器，修改 logstash.yml 文件\n```javascript\nbash-4.2$ cat config/logstash.yml \nhttp.host: \"0.0.0.0\"\nxpack.monitoring.elasticsearch.hosts: \"http://localhost:9200\"\n```\n#### Kibana\n进入容器，修改 logstash.yml 文件\n```javascript\nbash-4.4$ cat config/kibana.yml \n# ** THIS IS AN AUTO-GENERATED FILE **\n#Default Kibana configuration for docker target\nserver.name: kibana\nserver.host: \"0\"\nelasticsearch.hosts: \"http://localhost:9200\"\nmonitoring.ui.container.elasticsearch.enabled: true\n```\n访问  http://localhost:5601  ,显示如下：\n![](https://pic.downk.cc/item/5fc8e611394ac5237869fc1a.png)\n记得修改IP地址，不然你会看到访问页面出现如下几个大字：\n\"kibana server is not ready yet\"\n### ElasticSearch-Head（可选）\n参考[ElasticSearch-Head](https://github.com/mobz/elasticsearch-head)\n为什么要安装ElasticSearch-Head呢，原因是需要有一个管理界面进行查看ElasticSearch相关信息，用于监控 Elasticsearch 状态的客户端插件，包括数据可视化、执行增删改查操作等。\n```javascript\n[root@jjh ~]# docker pull mobz/elasticsearch-head:5\n[root@jjh ~]# docker run -d --name es_admin -p 9100:9100 mobz/elasticsearch-head:5\n```\n访问  http://localhost:9100  ,显示如下：\n![](https://pic.downk.cc/item/5fc8ede4394ac523786f1e09.png)\n记得修改页面左上角IP地址，否则集群健康值无法测量\n\n","source":"_posts/Docker安装部署ElK教程.md","raw":"---\ntitle: Docker安装部署ElK教程\ndate: 2020-12-3\nupdated:\ndescription: \ncover: https://pic.imgdb.cn/item/638af58116f2c2beb1822199.jpg\ntag:\n  - Elasticsearch \n  - Logstash \n  - Kibana\ncategories:\n  - Docker\n---\n## 简介\n### 核心组成\nELK由**Elasticsearch**，**Logstash**和**Kibana**三部分组件组成；\n\nElasticsearch是一个开源分布式搜索引擎，它的特点是：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。\n\nLogstash是一个完全开源的工具，它可以对您的日志进行收集，分析，将其存储供以后使用Kibana是一个开源和免费的工具，它可以为Logstash和ElasticSearch提供的日志分析友好的Web界面，可以帮助您汇总，分析和搜索重要数据日志。\n\n### 四大组件\nLogstash：logstash服务器端\n\nElasticsearch：存储类别日志\n\nKibana：网络化接口\n\nLogstash转发器：logstash客户端端通过木材服务器网络协议发送日志到logstash服务器\n\n### ELK工作流程\n在需要收集日志的所有服务上部署logstash，作为logstash代理（logstash shipper）用于监控并过滤收集日志，将过滤后的内容发送到Redis，然后logstash indexer将日志收集在一起并提供全文搜索服务ElasticSearch，可以用ElasticSearch进行自定义搜索通过Kibana来结合自定义搜索进行页面展示。\n\n## Docker安装ELK\n参考[ELK官网](https://www.elastic.co/)\n### 拉取镜像\n```javascript\n[root@jjh ~]# docker pull docker.elastic.co/elasticsearch/elasticsearch:7.10.0\n[root@jjh ~]# docker pull docker.elastic.co/logstash/logstash:7.10.0\n[root@jjh ~]# docker pull docker.elastic.co/kibana/kibana:7.10.0\n[root@jjh ~]# docker images\nREPOSITORY                                      TAG                 IMAGE ID            CREATED             SIZE\ndocker.elastic.co/logstash/logstash             7.10.0              bc71baf6997e        3 weeks ago         843 MB\ndocker.elastic.co/kibana/kibana                 7.10.0              da7fcd592595        3 weeks ago         1 GB\ndocker.elastic.co/elasticsearch/elasticsearch   7.10.0              37190fe5beea        3 weeks ago         774 MB\n```\n### 运行容器\n```javascript\n[root@jjh ~]# docker run -d --name es -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" docker.elastic.co/elasticsearch/elasticsearch:7.10.0\n[root@jjh ~]# docker run --name es_logstash docker.elastic.co/logstash/logstash:7.10.0\n[root@jjh ~]# docker run --name es_kibana -p 5601:5601 -d -e ELASTICSEARCH_URL=http://localhost:9200 docker.elastic.co/kibana/kibana:7.10.0\n[root@jjh ~]# docker ps\nCONTAINER ID        IMAGE                                                  COMMAND                  CREATED             STATUS              PORTS                                            NAMES\nf017ffdeb0d5        docker.elastic.co/kibana/kibana:7.10.0                 \"/usr/local/bin/du...\"   4 hours ago         Up 4 hours          0.0.0.0:5601->5601/tcp                           es_kibana\nb7249be98850        docker.elastic.co/logstash/logstash:7.10.0             \"/usr/local/bin/do...\"   4 hours ago         Up 3 hours          5044/tcp, 9600/tcp                               es_logstash\n1242f863cf94        docker.elastic.co/elasticsearch/elasticsearch:7.10.0   \"/tini -- /usr/loc...\"   4 hours ago         Up 3 hours          0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   es\n```\n###  修改配置文件\n#### Elasticsearch\n进入容器，修改 elasticsearch.yml 文件\n```javascript\n[root@1242f863cf94 elasticsearch]# cat config/elasticsearch.yml \ncluster.name: \"docker-cluster\"\nnetwork.host: 0.0.0.0\n# 加入跨域配置\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n```\n访问  http://localhost:9200  ,显示如下：\n```javascript\n{\n  \"name\" : \"1242f863cf94\",\n  \"cluster_name\" : \"docker-cluster\",\n  \"cluster_uuid\" : \"svVoSL31SwCdpvize03tGA\",\n  \"version\" : {\n    \"number\" : \"7.10.0\",\n    \"build_flavor\" : \"default\",\n    \"build_type\" : \"docker\",\n    \"build_hash\" : \"51e9d6f22758d0374a0f3f5c6e8f3a7997850f96\",\n    \"build_date\" : \"2020-11-09T21:30:33.964949Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"8.7.0\",\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\n    \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n```\n####  Logstash\n进入容器，修改 logstash.yml 文件\n```javascript\nbash-4.2$ cat config/logstash.yml \nhttp.host: \"0.0.0.0\"\nxpack.monitoring.elasticsearch.hosts: \"http://localhost:9200\"\n```\n#### Kibana\n进入容器，修改 logstash.yml 文件\n```javascript\nbash-4.4$ cat config/kibana.yml \n# ** THIS IS AN AUTO-GENERATED FILE **\n#Default Kibana configuration for docker target\nserver.name: kibana\nserver.host: \"0\"\nelasticsearch.hosts: \"http://localhost:9200\"\nmonitoring.ui.container.elasticsearch.enabled: true\n```\n访问  http://localhost:5601  ,显示如下：\n![](https://pic.downk.cc/item/5fc8e611394ac5237869fc1a.png)\n记得修改IP地址，不然你会看到访问页面出现如下几个大字：\n\"kibana server is not ready yet\"\n### ElasticSearch-Head（可选）\n参考[ElasticSearch-Head](https://github.com/mobz/elasticsearch-head)\n为什么要安装ElasticSearch-Head呢，原因是需要有一个管理界面进行查看ElasticSearch相关信息，用于监控 Elasticsearch 状态的客户端插件，包括数据可视化、执行增删改查操作等。\n```javascript\n[root@jjh ~]# docker pull mobz/elasticsearch-head:5\n[root@jjh ~]# docker run -d --name es_admin -p 9100:9100 mobz/elasticsearch-head:5\n```\n访问  http://localhost:9100  ,显示如下：\n![](https://pic.downk.cc/item/5fc8ede4394ac523786f1e09.png)\n记得修改页面左上角IP地址，否则集群健康值无法测量\n\n","slug":"Docker安装部署ElK教程","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avev0003tobv80l2hvhc","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"核心组成\"><a href=\"#核心组成\" class=\"headerlink\" title=\"核心组成\"></a>核心组成</h3><p>ELK由<strong>Elasticsearch</strong>，<strong>Logstash</strong>和<strong>Kibana</strong>三部分组件组成；</p>\n<p>Elasticsearch是一个开源分布式搜索引擎，它的特点是：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</p>\n<p>Logstash是一个完全开源的工具，它可以对您的日志进行收集，分析，将其存储供以后使用Kibana是一个开源和免费的工具，它可以为Logstash和ElasticSearch提供的日志分析友好的Web界面，可以帮助您汇总，分析和搜索重要数据日志。</p>\n<h3 id=\"四大组件\"><a href=\"#四大组件\" class=\"headerlink\" title=\"四大组件\"></a>四大组件</h3><p>Logstash：logstash服务器端</p>\n<p>Elasticsearch：存储类别日志</p>\n<p>Kibana：网络化接口</p>\n<p>Logstash转发器：logstash客户端端通过木材服务器网络协议发送日志到logstash服务器</p>\n<h3 id=\"ELK工作流程\"><a href=\"#ELK工作流程\" class=\"headerlink\" title=\"ELK工作流程\"></a>ELK工作流程</h3><p>在需要收集日志的所有服务上部署logstash，作为logstash代理（logstash shipper）用于监控并过滤收集日志，将过滤后的内容发送到Redis，然后logstash indexer将日志收集在一起并提供全文搜索服务ElasticSearch，可以用ElasticSearch进行自定义搜索通过Kibana来结合自定义搜索进行页面展示。</p>\n<h2 id=\"Docker安装ELK\"><a href=\"#Docker安装ELK\" class=\"headerlink\" title=\"Docker安装ELK\"></a>Docker安装ELK</h2><p>参考<a href=\"https://www.elastic.co/\">ELK官网</a></p>\n<h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/<span class=\"attr\">elasticsearch</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker pull docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/<span class=\"attr\">logstash</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker pull docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/kibana/<span class=\"attr\">kibana</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker images</span><br><span class=\"line\"><span class=\"variable constant_\">REPOSITORY</span>                                      <span class=\"variable constant_\">TAG</span>                 <span class=\"variable constant_\">IMAGE</span> <span class=\"variable constant_\">ID</span>            <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">SIZE</span></span><br><span class=\"line\">docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/logstash             <span class=\"number\">7.10</span><span class=\"number\">.0</span>              bc71baf6997e        <span class=\"number\">3</span> weeks ago         <span class=\"number\">843</span> <span class=\"variable constant_\">MB</span></span><br><span class=\"line\">docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/kibana/kibana                 <span class=\"number\">7.10</span><span class=\"number\">.0</span>              da7fcd592595        <span class=\"number\">3</span> weeks ago         <span class=\"number\">1</span> <span class=\"variable constant_\">GB</span></span><br><span class=\"line\">docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/elasticsearch   <span class=\"number\">7.10</span><span class=\"number\">.0</span>              37190fe5beea        <span class=\"number\">3</span> weeks ago         <span class=\"number\">774</span> <span class=\"variable constant_\">MB</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d --name es -p <span class=\"number\">9200</span>:<span class=\"number\">9200</span> -p <span class=\"number\">9300</span>:<span class=\"number\">9300</span> -e <span class=\"string\">&quot;discovery.type=single-node&quot;</span> docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/<span class=\"attr\">elasticsearch</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker run --name es_logstash docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/<span class=\"attr\">logstash</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker run --name es_kibana -p <span class=\"number\">5601</span>:<span class=\"number\">5601</span> -d -e <span class=\"variable constant_\">ELASTICSEARCH_URL</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//localhost:9200 docker.elastic.co/kibana/kibana:7.10.0</span></span><br><span class=\"line\">[root@jjh ~]# docker ps</span><br><span class=\"line\"><span class=\"variable constant_\">CONTAINER</span> <span class=\"variable constant_\">ID</span>        <span class=\"variable constant_\">IMAGE</span>                                                  <span class=\"variable constant_\">COMMAND</span>                  <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">STATUS</span>              <span class=\"variable constant_\">PORTS</span>                                            <span class=\"variable constant_\">NAMES</span></span><br><span class=\"line\">f017ffdeb0d5        docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/kibana/<span class=\"attr\">kibana</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span>                 <span class=\"string\">&quot;/usr/local/bin/du...&quot;</span>   <span class=\"number\">4</span> hours ago         <span class=\"title class_\">Up</span> <span class=\"number\">4</span> hours          <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">5601</span>-&gt;<span class=\"number\">5601</span>/tcp                           es_kibana</span><br><span class=\"line\">b7249be98850        docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/<span class=\"attr\">logstash</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span>             <span class=\"string\">&quot;/usr/local/bin/do...&quot;</span>   <span class=\"number\">4</span> hours ago         <span class=\"title class_\">Up</span> <span class=\"number\">3</span> hours          <span class=\"number\">5044</span>/tcp, <span class=\"number\">9600</span>/tcp                               es_logstash</span><br><span class=\"line\">1242f863cf94        docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/<span class=\"attr\">elasticsearch</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span>   <span class=\"string\">&quot;/tini -- /usr/loc...&quot;</span>   <span class=\"number\">4</span> hours ago         <span class=\"title class_\">Up</span> <span class=\"number\">3</span> hours          <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">9200</span>-&gt;<span class=\"number\">9200</span>/tcp, <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">9300</span>-&gt;<span class=\"number\">9300</span>/tcp   es</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><h4 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h4><p>进入容器，修改 elasticsearch.yml 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@1242f863cf94 elasticsearch]# cat config/elasticsearch.<span class=\"property\">yml</span> </span><br><span class=\"line\">cluster.<span class=\"property\">name</span>: <span class=\"string\">&quot;docker-cluster&quot;</span></span><br><span class=\"line\">network.<span class=\"property\">host</span>: <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"># 加入跨域配置</span><br><span class=\"line\">http.<span class=\"property\">cors</span>.<span class=\"property\">enabled</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">http.<span class=\"property\">cors</span>.<span class=\"property\">allow</span>-<span class=\"attr\">origin</span>: <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n<p>访问  <a href=\"http://localhost:9200/\">http://localhost:9200</a>  ,显示如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;1242f863cf94&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_name&quot;</span> : <span class=\"string\">&quot;docker-cluster&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_uuid&quot;</span> : <span class=\"string\">&quot;svVoSL31SwCdpvize03tGA&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;number&quot;</span> : <span class=\"string\">&quot;7.10.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_flavor&quot;</span> : <span class=\"string\">&quot;default&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_type&quot;</span> : <span class=\"string\">&quot;docker&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_hash&quot;</span> : <span class=\"string\">&quot;51e9d6f22758d0374a0f3f5c6e8f3a7997850f96&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_date&quot;</span> : <span class=\"string\">&quot;2020-11-09T21:30:33.964949Z&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_snapshot&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;lucene_version&quot;</span> : <span class=\"string\">&quot;8.7.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_wire_compatibility_version&quot;</span> : <span class=\"string\">&quot;6.8.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_index_compatibility_version&quot;</span> : <span class=\"string\">&quot;6.0.0-beta1&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;tagline&quot;</span> : <span class=\"string\">&quot;You Know, for Search&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Logstash\"><a href=\"#Logstash\" class=\"headerlink\" title=\"Logstash\"></a>Logstash</h4><p>进入容器，修改 logstash.yml 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash-<span class=\"number\">4.2</span>$ cat config/logstash.<span class=\"property\">yml</span> </span><br><span class=\"line\">http.<span class=\"property\">host</span>: <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\">xpack.<span class=\"property\">monitoring</span>.<span class=\"property\">elasticsearch</span>.<span class=\"property\">hosts</span>: <span class=\"string\">&quot;http://localhost:9200&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Kibana\"><a href=\"#Kibana\" class=\"headerlink\" title=\"Kibana\"></a>Kibana</h4><p>进入容器，修改 logstash.yml 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash-<span class=\"number\">4.4</span>$ cat config/kibana.<span class=\"property\">yml</span> </span><br><span class=\"line\"># ** <span class=\"variable constant_\">THIS</span> <span class=\"variable constant_\">IS</span> <span class=\"variable constant_\">AN</span> <span class=\"variable constant_\">AUTO</span>-<span class=\"variable constant_\">GENERATED</span> <span class=\"variable constant_\">FILE</span> **</span><br><span class=\"line\">#<span class=\"title class_\">Default</span> <span class=\"title class_\">Kibana</span> configuration <span class=\"keyword\">for</span> docker target</span><br><span class=\"line\">server.<span class=\"property\">name</span>: kibana</span><br><span class=\"line\">server.<span class=\"property\">host</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">elasticsearch.<span class=\"property\">hosts</span>: <span class=\"string\">&quot;http://localhost:9200&quot;</span></span><br><span class=\"line\">monitoring.<span class=\"property\">ui</span>.<span class=\"property\">container</span>.<span class=\"property\">elasticsearch</span>.<span class=\"property\">enabled</span>: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>访问  <a href=\"http://localhost:5601/\">http://localhost:5601</a>  ,显示如下：<br><img src=\"https://pic.downk.cc/item/5fc8e611394ac5237869fc1a.png\"><br>记得修改IP地址，不然你会看到访问页面出现如下几个大字：<br>“kibana server is not ready yet”</p>\n<h3 id=\"ElasticSearch-Head（可选）\"><a href=\"#ElasticSearch-Head（可选）\" class=\"headerlink\" title=\"ElasticSearch-Head（可选）\"></a>ElasticSearch-Head（可选）</h3><p>参考<a href=\"https://github.com/mobz/elasticsearch-head\">ElasticSearch-Head</a><br>为什么要安装ElasticSearch-Head呢，原因是需要有一个管理界面进行查看ElasticSearch相关信息，用于监控 Elasticsearch 状态的客户端插件，包括数据可视化、执行增删改查操作等。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull mobz/elasticsearch-<span class=\"attr\">head</span>:<span class=\"number\">5</span></span><br><span class=\"line\">[root@jjh ~]# docker run -d --name es_admin -p <span class=\"number\">9100</span>:<span class=\"number\">9100</span> mobz/elasticsearch-<span class=\"attr\">head</span>:<span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>访问  <a href=\"http://localhost:9100/\">http://localhost:9100</a>  ,显示如下：<br><img src=\"https://pic.downk.cc/item/5fc8ede4394ac523786f1e09.png\"><br>记得修改页面左上角IP地址，否则集群健康值无法测量</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"核心组成\"><a href=\"#核心组成\" class=\"headerlink\" title=\"核心组成\"></a>核心组成</h3><p>ELK由<strong>Elasticsearch</strong>，<strong>Logstash</strong>和<strong>Kibana</strong>三部分组件组成；</p>\n<p>Elasticsearch是一个开源分布式搜索引擎，它的特点是：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</p>\n<p>Logstash是一个完全开源的工具，它可以对您的日志进行收集，分析，将其存储供以后使用Kibana是一个开源和免费的工具，它可以为Logstash和ElasticSearch提供的日志分析友好的Web界面，可以帮助您汇总，分析和搜索重要数据日志。</p>\n<h3 id=\"四大组件\"><a href=\"#四大组件\" class=\"headerlink\" title=\"四大组件\"></a>四大组件</h3><p>Logstash：logstash服务器端</p>\n<p>Elasticsearch：存储类别日志</p>\n<p>Kibana：网络化接口</p>\n<p>Logstash转发器：logstash客户端端通过木材服务器网络协议发送日志到logstash服务器</p>\n<h3 id=\"ELK工作流程\"><a href=\"#ELK工作流程\" class=\"headerlink\" title=\"ELK工作流程\"></a>ELK工作流程</h3><p>在需要收集日志的所有服务上部署logstash，作为logstash代理（logstash shipper）用于监控并过滤收集日志，将过滤后的内容发送到Redis，然后logstash indexer将日志收集在一起并提供全文搜索服务ElasticSearch，可以用ElasticSearch进行自定义搜索通过Kibana来结合自定义搜索进行页面展示。</p>\n<h2 id=\"Docker安装ELK\"><a href=\"#Docker安装ELK\" class=\"headerlink\" title=\"Docker安装ELK\"></a>Docker安装ELK</h2><p>参考<a href=\"https://www.elastic.co/\">ELK官网</a></p>\n<h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/<span class=\"attr\">elasticsearch</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker pull docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/<span class=\"attr\">logstash</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker pull docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/kibana/<span class=\"attr\">kibana</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker images</span><br><span class=\"line\"><span class=\"variable constant_\">REPOSITORY</span>                                      <span class=\"variable constant_\">TAG</span>                 <span class=\"variable constant_\">IMAGE</span> <span class=\"variable constant_\">ID</span>            <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">SIZE</span></span><br><span class=\"line\">docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/logstash             <span class=\"number\">7.10</span><span class=\"number\">.0</span>              bc71baf6997e        <span class=\"number\">3</span> weeks ago         <span class=\"number\">843</span> <span class=\"variable constant_\">MB</span></span><br><span class=\"line\">docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/kibana/kibana                 <span class=\"number\">7.10</span><span class=\"number\">.0</span>              da7fcd592595        <span class=\"number\">3</span> weeks ago         <span class=\"number\">1</span> <span class=\"variable constant_\">GB</span></span><br><span class=\"line\">docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/elasticsearch   <span class=\"number\">7.10</span><span class=\"number\">.0</span>              37190fe5beea        <span class=\"number\">3</span> weeks ago         <span class=\"number\">774</span> <span class=\"variable constant_\">MB</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d --name es -p <span class=\"number\">9200</span>:<span class=\"number\">9200</span> -p <span class=\"number\">9300</span>:<span class=\"number\">9300</span> -e <span class=\"string\">&quot;discovery.type=single-node&quot;</span> docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/<span class=\"attr\">elasticsearch</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker run --name es_logstash docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/<span class=\"attr\">logstash</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh ~]# docker run --name es_kibana -p <span class=\"number\">5601</span>:<span class=\"number\">5601</span> -d -e <span class=\"variable constant_\">ELASTICSEARCH_URL</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//localhost:9200 docker.elastic.co/kibana/kibana:7.10.0</span></span><br><span class=\"line\">[root@jjh ~]# docker ps</span><br><span class=\"line\"><span class=\"variable constant_\">CONTAINER</span> <span class=\"variable constant_\">ID</span>        <span class=\"variable constant_\">IMAGE</span>                                                  <span class=\"variable constant_\">COMMAND</span>                  <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">STATUS</span>              <span class=\"variable constant_\">PORTS</span>                                            <span class=\"variable constant_\">NAMES</span></span><br><span class=\"line\">f017ffdeb0d5        docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/kibana/<span class=\"attr\">kibana</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span>                 <span class=\"string\">&quot;/usr/local/bin/du...&quot;</span>   <span class=\"number\">4</span> hours ago         <span class=\"title class_\">Up</span> <span class=\"number\">4</span> hours          <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">5601</span>-&gt;<span class=\"number\">5601</span>/tcp                           es_kibana</span><br><span class=\"line\">b7249be98850        docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/logstash/<span class=\"attr\">logstash</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span>             <span class=\"string\">&quot;/usr/local/bin/do...&quot;</span>   <span class=\"number\">4</span> hours ago         <span class=\"title class_\">Up</span> <span class=\"number\">3</span> hours          <span class=\"number\">5044</span>/tcp, <span class=\"number\">9600</span>/tcp                               es_logstash</span><br><span class=\"line\">1242f863cf94        docker.<span class=\"property\">elastic</span>.<span class=\"property\">co</span>/elasticsearch/<span class=\"attr\">elasticsearch</span>:<span class=\"number\">7.10</span><span class=\"number\">.0</span>   <span class=\"string\">&quot;/tini -- /usr/loc...&quot;</span>   <span class=\"number\">4</span> hours ago         <span class=\"title class_\">Up</span> <span class=\"number\">3</span> hours          <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">9200</span>-&gt;<span class=\"number\">9200</span>/tcp, <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">9300</span>-&gt;<span class=\"number\">9300</span>/tcp   es</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><h4 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h4><p>进入容器，修改 elasticsearch.yml 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@1242f863cf94 elasticsearch]# cat config/elasticsearch.<span class=\"property\">yml</span> </span><br><span class=\"line\">cluster.<span class=\"property\">name</span>: <span class=\"string\">&quot;docker-cluster&quot;</span></span><br><span class=\"line\">network.<span class=\"property\">host</span>: <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"># 加入跨域配置</span><br><span class=\"line\">http.<span class=\"property\">cors</span>.<span class=\"property\">enabled</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">http.<span class=\"property\">cors</span>.<span class=\"property\">allow</span>-<span class=\"attr\">origin</span>: <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n<p>访问  <a href=\"http://localhost:9200/\">http://localhost:9200</a>  ,显示如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;1242f863cf94&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_name&quot;</span> : <span class=\"string\">&quot;docker-cluster&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_uuid&quot;</span> : <span class=\"string\">&quot;svVoSL31SwCdpvize03tGA&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;number&quot;</span> : <span class=\"string\">&quot;7.10.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_flavor&quot;</span> : <span class=\"string\">&quot;default&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_type&quot;</span> : <span class=\"string\">&quot;docker&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_hash&quot;</span> : <span class=\"string\">&quot;51e9d6f22758d0374a0f3f5c6e8f3a7997850f96&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_date&quot;</span> : <span class=\"string\">&quot;2020-11-09T21:30:33.964949Z&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_snapshot&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;lucene_version&quot;</span> : <span class=\"string\">&quot;8.7.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_wire_compatibility_version&quot;</span> : <span class=\"string\">&quot;6.8.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_index_compatibility_version&quot;</span> : <span class=\"string\">&quot;6.0.0-beta1&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;tagline&quot;</span> : <span class=\"string\">&quot;You Know, for Search&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Logstash\"><a href=\"#Logstash\" class=\"headerlink\" title=\"Logstash\"></a>Logstash</h4><p>进入容器，修改 logstash.yml 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash-<span class=\"number\">4.2</span>$ cat config/logstash.<span class=\"property\">yml</span> </span><br><span class=\"line\">http.<span class=\"property\">host</span>: <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\">xpack.<span class=\"property\">monitoring</span>.<span class=\"property\">elasticsearch</span>.<span class=\"property\">hosts</span>: <span class=\"string\">&quot;http://localhost:9200&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Kibana\"><a href=\"#Kibana\" class=\"headerlink\" title=\"Kibana\"></a>Kibana</h4><p>进入容器，修改 logstash.yml 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash-<span class=\"number\">4.4</span>$ cat config/kibana.<span class=\"property\">yml</span> </span><br><span class=\"line\"># ** <span class=\"variable constant_\">THIS</span> <span class=\"variable constant_\">IS</span> <span class=\"variable constant_\">AN</span> <span class=\"variable constant_\">AUTO</span>-<span class=\"variable constant_\">GENERATED</span> <span class=\"variable constant_\">FILE</span> **</span><br><span class=\"line\">#<span class=\"title class_\">Default</span> <span class=\"title class_\">Kibana</span> configuration <span class=\"keyword\">for</span> docker target</span><br><span class=\"line\">server.<span class=\"property\">name</span>: kibana</span><br><span class=\"line\">server.<span class=\"property\">host</span>: <span class=\"string\">&quot;0&quot;</span></span><br><span class=\"line\">elasticsearch.<span class=\"property\">hosts</span>: <span class=\"string\">&quot;http://localhost:9200&quot;</span></span><br><span class=\"line\">monitoring.<span class=\"property\">ui</span>.<span class=\"property\">container</span>.<span class=\"property\">elasticsearch</span>.<span class=\"property\">enabled</span>: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>访问  <a href=\"http://localhost:5601/\">http://localhost:5601</a>  ,显示如下：<br><img src=\"https://pic.downk.cc/item/5fc8e611394ac5237869fc1a.png\"><br>记得修改IP地址，不然你会看到访问页面出现如下几个大字：<br>“kibana server is not ready yet”</p>\n<h3 id=\"ElasticSearch-Head（可选）\"><a href=\"#ElasticSearch-Head（可选）\" class=\"headerlink\" title=\"ElasticSearch-Head（可选）\"></a>ElasticSearch-Head（可选）</h3><p>参考<a href=\"https://github.com/mobz/elasticsearch-head\">ElasticSearch-Head</a><br>为什么要安装ElasticSearch-Head呢，原因是需要有一个管理界面进行查看ElasticSearch相关信息，用于监控 Elasticsearch 状态的客户端插件，包括数据可视化、执行增删改查操作等。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull mobz/elasticsearch-<span class=\"attr\">head</span>:<span class=\"number\">5</span></span><br><span class=\"line\">[root@jjh ~]# docker run -d --name es_admin -p <span class=\"number\">9100</span>:<span class=\"number\">9100</span> mobz/elasticsearch-<span class=\"attr\">head</span>:<span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n<p>访问  <a href=\"http://localhost:9100/\">http://localhost:9100</a>  ,显示如下：<br><img src=\"https://pic.downk.cc/item/5fc8ede4394ac523786f1e09.png\"><br>记得修改页面左上角IP地址，否则集群健康值无法测量</p>\n"},{"title":"Docker配置MySQL主从复制","date":"2020-12-10T16:00:00.000Z","updated":"2022-11-20T14:53:46.563Z","description":null,"cover":"https://img.imgdb.cn/item/60028b753ffa7d37b3d4b92a.jpg","_content":"## MySQL主从复制工作原理\n1.MySql主库在事务提交时会把数据变更作为事件记录在二进制日志Binlog中；\n2.主库推送二进制日志文件Binlog中的事件到从库的中继日志Relay Log中，之后从库根据中继日志重做数据变更操作，通过逻辑复制来达到主库和从库的数据一致性；\n3.MySql通过三个线程来完成主从库间的数据复制，其中Binlog Dump线程跑在主库上，I/O线程和SQL线程跑着从库上；\n4.当在从库上启动复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Relay Log中去，之后从库上的SQL线程读取中继日志Relay Log中更新的数据库事件并应用\n### 复制类型\n#### 基于语句的复制\nMySQL中的复制功能最初基于从主设备到从设备的SQl语句传播。这称为基于语句的日志记录。您可以通过启动服务器来使用此格式--binlog_format=STATEMENT\n\n#### 基于行的复制\n在基于行的日志记录中，主服务器将事件写入二进制日志，以指示各个表行的影响方式。因此，重要的是表始终使用主键来确保可以有效地识别行。您可以通过启动它来使服务器使用基于行的日志记录 --binlog_format=ROW\n\n#### 混合类型的复制\n混合日志记录。对于混合日志记录，默认情况下使用基于语句的日志记录，但在某些情况下，日志记录模式会自动切换到基于行的日志，您可以通过使用该选项启动mysqld,使MySQL显式使用混合日志记录--binlog_format=MIXED\n\n#### 基于GTIDS复制\nGTID即全局事务ID (global transaction identifier)，实际上是由UUID+TID (即transactionId)组成的。其中UUID(即server_uuid) 产生于auto.conf文件(cat /data/mysql/data/auto.cnf)，是一个MySQL实例的唯一标识。TID代表了该实例上已经提交的事务数量，并且随着事务提交单调递增，所以GTID能够保证每个MySQL实例事务的执行（不会重复执行同一个事务，并且会补全没有执行的事务）。GTID在一组复制中，全局唯一。\n使用GTID需要注意: 在构建主从复制之前，在一台将成为主的实例上进行一些操作（如数据清理等），通过GTID复制，这些在主从成立之前的操作也会被复制到从服务器上，引起复制失败。也就是说通过GTID复制都是从最先开始的事务日志开始，即使这些操作在复制之前执行。\n\n## 案例\n### 拉取镜像\n```javascript\n[root@jjh ~]# docker pull docker \n[root@jjh ~]# docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/mysql     latest              dd7265748b5d        2 weeks ago         545 MB\n```\n### 创建主从文件夹及修改相关配置\n```javascript\n[root@jjh ~]# mkdir -p /docker/mysql/{master,slave}/data\n```\n#### 添加主库配置文件\n```javascript\n[root@jjh ~]# cat /docker/mysql/master/my.cnf\n[mysqld]\nuser=mysql\nlog-bin=mysql-bin\n## 开启二进制日志功能\nserver-id=1\n## 同一局域网内注意要唯一\ncharacter-set-server=utf8mb4\ndefault_authentication_plugin=mysql_native_password\n## MySQL8.O 更改默认的身份认证插件\ntable_definition_cache=400\n[client]\ndefault-character-set=utf8mb4\n[mysql]\ndefault-character-set=utf8mb4\n```\n#### 添加从库配置文件\n```javascript\n[root@jjh ~]# cat /docker/mysql/slave/my.cnf\n[mysqld]                                                                             \nuser=mysql\nserver-id=2\ncharacter-set-server=utf8mb4\ndefault_authentication_plugin=mysql_native_password\ntable_definition_cache=400\n[client]\ndefault-character-set=utf8mb4\n[mysql]\ndefault-character-set=utf8mb4\n```\n### 创建Mysql桥接网络，用于主从容器直接互联\n```javascript\n[root@jjh ~]# docker network create mysql\n```\n#### 创建Ｍysql主库容器\n```javascript\n[root@jjh ~]# docker run -d --privileged=true -p 3307:3306 -v /docker/mysql/master/my.cnf:/etc/mysql/my.cnf -v /docker/mysql/master/data:/var/lib/mysql -v /docker/mysql/master/mysql-files:/var/lib/mysql-files -e MYSQL_ROOT_PASSWORD=密码 --name mysql-master --network mysql --network-alias mysql-master docker.io/mysql \n```\n#### 创建Ｍysql从库容器\n```javascript\n[root@jjh ~]# docker run -d --privileged=true -p 3308:3306 -v /docker/mysql/slave/my.cnf:/etc/mysql/my.cnf -v /docker/mysql/slave1/data:/var/lib/mysql -v /docker/mysql/slave/mysql-files:/var/lib/mysql-files -e MYSQL_ROOT_PASSWORD=密码 --name mysql-slave --network mysql --network-alias mysql-slave docker.io/mysql \n```\n### 配置Mysql主从复制\n#### 配置主服务器\n```javascript\n[root@jjh ~]# docker exec -it mysql-master bash\nroot@2150cac30563:/# mysql -u root -p\nEnter password: \n密码\nmysql> GRANT REPLICATION SLAVE ON *.* TO 'root'@'%';\nQuery OK, 0 rows affected (0.00 sec)\n# 这里使用root用户进行主从复制, %为允许所有ip进行复制\n\nmysql> flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n# 刷新权限\n\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000003 |      543 |              |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n#需要记录其中的File,  Position字段内容\n```\n#### 配置从服务器\n```javascript\n[root@jjh ~]# docker exec -it mysql-slave bash\nroot@2150cac30563:/# mysql -u root -p\nEnter password: \n密码\n#输入以下内容\nmysql> change master to master_host='mysql-master',master_user='root',master_password='密码',master_log_file='File列的内容',master_log_pos=position的内容(不用加引号),master_port=3306;\nQuery OK, 0 rows affected, 2 warnings (0.02 sec)\n\nmysql> start slave;\nQuery OK, 0 rows affected, 1 warning (0.01 sec)\n# 启动slave\n\nmysql> show slave status\\G;\n# 查看slave状态\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: mysql-master\n                  Master_User: root\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000003\n          Read_Master_Log_Pos: 543\n               Relay_Log_File: 5671fb724964-relay-bin.000002\n                Relay_Log_Pos: 324\n        Relay_Master_Log_File: mysql-bin.000003\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n\n```\n当Slave_IO_Running和Slave SQL Ruing都是Yes时，说明配置成功了，可以在主库创个库，添加下数据，看看能否在从库中查到\n\n","source":"_posts/Docker配置MySQL主从复制.md","raw":"---\ntitle: Docker配置MySQL主从复制\ndate: 2020-12-11\nupdated:\ndescription:\ncover: https://img.imgdb.cn/item/60028b753ffa7d37b3d4b92a.jpg\ntag:\n  - Docker \n  - MySQL\ncategories:\n  - 数据库\n---\n## MySQL主从复制工作原理\n1.MySql主库在事务提交时会把数据变更作为事件记录在二进制日志Binlog中；\n2.主库推送二进制日志文件Binlog中的事件到从库的中继日志Relay Log中，之后从库根据中继日志重做数据变更操作，通过逻辑复制来达到主库和从库的数据一致性；\n3.MySql通过三个线程来完成主从库间的数据复制，其中Binlog Dump线程跑在主库上，I/O线程和SQL线程跑着从库上；\n4.当在从库上启动复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Relay Log中去，之后从库上的SQL线程读取中继日志Relay Log中更新的数据库事件并应用\n### 复制类型\n#### 基于语句的复制\nMySQL中的复制功能最初基于从主设备到从设备的SQl语句传播。这称为基于语句的日志记录。您可以通过启动服务器来使用此格式--binlog_format=STATEMENT\n\n#### 基于行的复制\n在基于行的日志记录中，主服务器将事件写入二进制日志，以指示各个表行的影响方式。因此，重要的是表始终使用主键来确保可以有效地识别行。您可以通过启动它来使服务器使用基于行的日志记录 --binlog_format=ROW\n\n#### 混合类型的复制\n混合日志记录。对于混合日志记录，默认情况下使用基于语句的日志记录，但在某些情况下，日志记录模式会自动切换到基于行的日志，您可以通过使用该选项启动mysqld,使MySQL显式使用混合日志记录--binlog_format=MIXED\n\n#### 基于GTIDS复制\nGTID即全局事务ID (global transaction identifier)，实际上是由UUID+TID (即transactionId)组成的。其中UUID(即server_uuid) 产生于auto.conf文件(cat /data/mysql/data/auto.cnf)，是一个MySQL实例的唯一标识。TID代表了该实例上已经提交的事务数量，并且随着事务提交单调递增，所以GTID能够保证每个MySQL实例事务的执行（不会重复执行同一个事务，并且会补全没有执行的事务）。GTID在一组复制中，全局唯一。\n使用GTID需要注意: 在构建主从复制之前，在一台将成为主的实例上进行一些操作（如数据清理等），通过GTID复制，这些在主从成立之前的操作也会被复制到从服务器上，引起复制失败。也就是说通过GTID复制都是从最先开始的事务日志开始，即使这些操作在复制之前执行。\n\n## 案例\n### 拉取镜像\n```javascript\n[root@jjh ~]# docker pull docker \n[root@jjh ~]# docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\ndocker.io/mysql     latest              dd7265748b5d        2 weeks ago         545 MB\n```\n### 创建主从文件夹及修改相关配置\n```javascript\n[root@jjh ~]# mkdir -p /docker/mysql/{master,slave}/data\n```\n#### 添加主库配置文件\n```javascript\n[root@jjh ~]# cat /docker/mysql/master/my.cnf\n[mysqld]\nuser=mysql\nlog-bin=mysql-bin\n## 开启二进制日志功能\nserver-id=1\n## 同一局域网内注意要唯一\ncharacter-set-server=utf8mb4\ndefault_authentication_plugin=mysql_native_password\n## MySQL8.O 更改默认的身份认证插件\ntable_definition_cache=400\n[client]\ndefault-character-set=utf8mb4\n[mysql]\ndefault-character-set=utf8mb4\n```\n#### 添加从库配置文件\n```javascript\n[root@jjh ~]# cat /docker/mysql/slave/my.cnf\n[mysqld]                                                                             \nuser=mysql\nserver-id=2\ncharacter-set-server=utf8mb4\ndefault_authentication_plugin=mysql_native_password\ntable_definition_cache=400\n[client]\ndefault-character-set=utf8mb4\n[mysql]\ndefault-character-set=utf8mb4\n```\n### 创建Mysql桥接网络，用于主从容器直接互联\n```javascript\n[root@jjh ~]# docker network create mysql\n```\n#### 创建Ｍysql主库容器\n```javascript\n[root@jjh ~]# docker run -d --privileged=true -p 3307:3306 -v /docker/mysql/master/my.cnf:/etc/mysql/my.cnf -v /docker/mysql/master/data:/var/lib/mysql -v /docker/mysql/master/mysql-files:/var/lib/mysql-files -e MYSQL_ROOT_PASSWORD=密码 --name mysql-master --network mysql --network-alias mysql-master docker.io/mysql \n```\n#### 创建Ｍysql从库容器\n```javascript\n[root@jjh ~]# docker run -d --privileged=true -p 3308:3306 -v /docker/mysql/slave/my.cnf:/etc/mysql/my.cnf -v /docker/mysql/slave1/data:/var/lib/mysql -v /docker/mysql/slave/mysql-files:/var/lib/mysql-files -e MYSQL_ROOT_PASSWORD=密码 --name mysql-slave --network mysql --network-alias mysql-slave docker.io/mysql \n```\n### 配置Mysql主从复制\n#### 配置主服务器\n```javascript\n[root@jjh ~]# docker exec -it mysql-master bash\nroot@2150cac30563:/# mysql -u root -p\nEnter password: \n密码\nmysql> GRANT REPLICATION SLAVE ON *.* TO 'root'@'%';\nQuery OK, 0 rows affected (0.00 sec)\n# 这里使用root用户进行主从复制, %为允许所有ip进行复制\n\nmysql> flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n# 刷新权限\n\nmysql> show master status;\n+------------------+----------+--------------+------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+------------------+----------+--------------+------------------+-------------------+\n| mysql-bin.000003 |      543 |              |                  |                   |\n+------------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n#需要记录其中的File,  Position字段内容\n```\n#### 配置从服务器\n```javascript\n[root@jjh ~]# docker exec -it mysql-slave bash\nroot@2150cac30563:/# mysql -u root -p\nEnter password: \n密码\n#输入以下内容\nmysql> change master to master_host='mysql-master',master_user='root',master_password='密码',master_log_file='File列的内容',master_log_pos=position的内容(不用加引号),master_port=3306;\nQuery OK, 0 rows affected, 2 warnings (0.02 sec)\n\nmysql> start slave;\nQuery OK, 0 rows affected, 1 warning (0.01 sec)\n# 启动slave\n\nmysql> show slave status\\G;\n# 查看slave状态\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: mysql-master\n                  Master_User: root\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000003\n          Read_Master_Log_Pos: 543\n               Relay_Log_File: 5671fb724964-relay-bin.000002\n                Relay_Log_Pos: 324\n        Relay_Master_Log_File: mysql-bin.000003\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n\n```\n当Slave_IO_Running和Slave SQL Ruing都是Yes时，说明配置成功了，可以在主库创个库，添加下数据，看看能否在从库中查到\n\n","slug":"Docker配置MySQL主从复制","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avey0007tobv2lpm1f4e","content":"<h2 id=\"MySQL主从复制工作原理\"><a href=\"#MySQL主从复制工作原理\" class=\"headerlink\" title=\"MySQL主从复制工作原理\"></a>MySQL主从复制工作原理</h2><p>1.MySql主库在事务提交时会把数据变更作为事件记录在二进制日志Binlog中；<br>2.主库推送二进制日志文件Binlog中的事件到从库的中继日志Relay Log中，之后从库根据中继日志重做数据变更操作，通过逻辑复制来达到主库和从库的数据一致性；<br>3.MySql通过三个线程来完成主从库间的数据复制，其中Binlog Dump线程跑在主库上，I/O线程和SQL线程跑着从库上；<br>4.当在从库上启动复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Relay Log中去，之后从库上的SQL线程读取中继日志Relay Log中更新的数据库事件并应用</p>\n<h3 id=\"复制类型\"><a href=\"#复制类型\" class=\"headerlink\" title=\"复制类型\"></a>复制类型</h3><h4 id=\"基于语句的复制\"><a href=\"#基于语句的复制\" class=\"headerlink\" title=\"基于语句的复制\"></a>基于语句的复制</h4><p>MySQL中的复制功能最初基于从主设备到从设备的SQl语句传播。这称为基于语句的日志记录。您可以通过启动服务器来使用此格式–binlog_format=STATEMENT</p>\n<h4 id=\"基于行的复制\"><a href=\"#基于行的复制\" class=\"headerlink\" title=\"基于行的复制\"></a>基于行的复制</h4><p>在基于行的日志记录中，主服务器将事件写入二进制日志，以指示各个表行的影响方式。因此，重要的是表始终使用主键来确保可以有效地识别行。您可以通过启动它来使服务器使用基于行的日志记录 –binlog_format=ROW</p>\n<h4 id=\"混合类型的复制\"><a href=\"#混合类型的复制\" class=\"headerlink\" title=\"混合类型的复制\"></a>混合类型的复制</h4><p>混合日志记录。对于混合日志记录，默认情况下使用基于语句的日志记录，但在某些情况下，日志记录模式会自动切换到基于行的日志，您可以通过使用该选项启动mysqld,使MySQL显式使用混合日志记录–binlog_format=MIXED</p>\n<h4 id=\"基于GTIDS复制\"><a href=\"#基于GTIDS复制\" class=\"headerlink\" title=\"基于GTIDS复制\"></a>基于GTIDS复制</h4><p>GTID即全局事务ID (global transaction identifier)，实际上是由UUID+TID (即transactionId)组成的。其中UUID(即server_uuid) 产生于auto.conf文件(cat /data/mysql/data/auto.cnf)，是一个MySQL实例的唯一标识。TID代表了该实例上已经提交的事务数量，并且随着事务提交单调递增，所以GTID能够保证每个MySQL实例事务的执行（不会重复执行同一个事务，并且会补全没有执行的事务）。GTID在一组复制中，全局唯一。<br>使用GTID需要注意: 在构建主从复制之前，在一台将成为主的实例上进行一些操作（如数据清理等），通过GTID复制，这些在主从成立之前的操作也会被复制到从服务器上，引起复制失败。也就是说通过GTID复制都是从最先开始的事务日志开始，即使这些操作在复制之前执行。</p>\n<h2 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h2><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull docker </span><br><span class=\"line\">[root@jjh ~]# docker images</span><br><span class=\"line\"><span class=\"variable constant_\">REPOSITORY</span>          <span class=\"variable constant_\">TAG</span>                 <span class=\"variable constant_\">IMAGE</span> <span class=\"variable constant_\">ID</span>            <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">SIZE</span></span><br><span class=\"line\">docker.<span class=\"property\">io</span>/mysql     latest              dd7265748b5d        <span class=\"number\">2</span> weeks ago         <span class=\"number\">545</span> <span class=\"variable constant_\">MB</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建主从文件夹及修改相关配置\"><a href=\"#创建主从文件夹及修改相关配置\" class=\"headerlink\" title=\"创建主从文件夹及修改相关配置\"></a>创建主从文件夹及修改相关配置</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir -p /docker/mysql/&#123;master,slave&#125;/data</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加主库配置文件\"><a href=\"#添加主库配置文件\" class=\"headerlink\" title=\"添加主库配置文件\"></a>添加主库配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /docker/mysql/master/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\">## 开启二进制日志功能</span><br><span class=\"line\">server-id=<span class=\"number\">1</span></span><br><span class=\"line\">## 同一局域网内注意要唯一</span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\">## <span class=\"title class_\">MySQL8</span>.<span class=\"property\">O</span> 更改默认的身份认证插件</span><br><span class=\"line\">table_definition_cache=<span class=\"number\">400</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加从库配置文件\"><a href=\"#添加从库配置文件\" class=\"headerlink\" title=\"添加从库配置文件\"></a>添加从库配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /docker/mysql/slave/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[mysqld]                                                                             </span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">server-id=<span class=\"number\">2</span></span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\">table_definition_cache=<span class=\"number\">400</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建Mysql桥接网络，用于主从容器直接互联\"><a href=\"#创建Mysql桥接网络，用于主从容器直接互联\" class=\"headerlink\" title=\"创建Mysql桥接网络，用于主从容器直接互联\"></a>创建Mysql桥接网络，用于主从容器直接互联</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker network create mysql</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建Mysql主库容器\"><a href=\"#创建Mysql主库容器\" class=\"headerlink\" title=\"创建Ｍysql主库容器\"></a>创建Ｍysql主库容器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d --privileged=<span class=\"literal\">true</span> -p <span class=\"number\">3307</span>:<span class=\"number\">3306</span> -v /docker/mysql/master/my.<span class=\"property\">cnf</span>:<span class=\"regexp\">/etc/my</span>sql/my.<span class=\"property\">cnf</span> -v /docker/mysql/master/<span class=\"attr\">data</span>:<span class=\"regexp\">/var/</span>lib/mysql -v /docker/mysql/master/mysql-<span class=\"attr\">files</span>:<span class=\"regexp\">/var/</span>lib/mysql-files -e <span class=\"variable constant_\">MYSQL_ROOT_PASSWORD</span>=密码 --name mysql-master --network mysql --network-alias mysql-master docker.<span class=\"property\">io</span>/mysql </span><br></pre></td></tr></table></figure>\n<h4 id=\"创建Mysql从库容器\"><a href=\"#创建Mysql从库容器\" class=\"headerlink\" title=\"创建Ｍysql从库容器\"></a>创建Ｍysql从库容器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d --privileged=<span class=\"literal\">true</span> -p <span class=\"number\">3308</span>:<span class=\"number\">3306</span> -v /docker/mysql/slave/my.<span class=\"property\">cnf</span>:<span class=\"regexp\">/etc/my</span>sql/my.<span class=\"property\">cnf</span> -v /docker/mysql/slave1/<span class=\"attr\">data</span>:<span class=\"regexp\">/var/</span>lib/mysql -v /docker/mysql/slave/mysql-<span class=\"attr\">files</span>:<span class=\"regexp\">/var/</span>lib/mysql-files -e <span class=\"variable constant_\">MYSQL_ROOT_PASSWORD</span>=密码 --name mysql-slave --network mysql --network-alias mysql-slave docker.<span class=\"property\">io</span>/mysql </span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Mysql主从复制\"><a href=\"#配置Mysql主从复制\" class=\"headerlink\" title=\"配置Mysql主从复制\"></a>配置Mysql主从复制</h3><h4 id=\"配置主服务器\"><a href=\"#配置主服务器\" class=\"headerlink\" title=\"配置主服务器\"></a>配置主服务器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker exec -it mysql-master bash</span><br><span class=\"line\">root@2150<span class=\"attr\">cac30563</span>:/# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">密码</span><br><span class=\"line\">mysql&gt; <span class=\"variable constant_\">GRANT</span> <span class=\"variable constant_\">REPLICATION</span> <span class=\"variable constant_\">SLAVE</span> <span class=\"variable constant_\">ON</span> *.* <span class=\"variable constant_\">TO</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"># 这里使用root用户进行主从复制, %为允许所有ip进行复制</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; flush privileges;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"># 刷新权限</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| <span class=\"title class_\">File</span>             | <span class=\"title class_\">Position</span> | <span class=\"title class_\">Binlog</span>_Do_DB | <span class=\"title class_\">Binlog</span>_Ignore_DB | <span class=\"title class_\">Executed</span>_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin<span class=\"number\">.000003</span> |      <span class=\"number\">543</span> |              |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\">#需要记录其中的<span class=\"title class_\">File</span>,  <span class=\"title class_\">Position</span>字段内容</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置从服务器\"><a href=\"#配置从服务器\" class=\"headerlink\" title=\"配置从服务器\"></a>配置从服务器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker exec -it mysql-slave bash</span><br><span class=\"line\">root@2150<span class=\"attr\">cac30563</span>:/# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">密码</span><br><span class=\"line\">#输入以下内容</span><br><span class=\"line\">mysql&gt; change master to master_host=<span class=\"string\">&#x27;mysql-master&#x27;</span>,master_user=<span class=\"string\">&#x27;root&#x27;</span>,master_password=<span class=\"string\">&#x27;密码&#x27;</span>,master_log_file=<span class=\"string\">&#x27;File列的内容&#x27;</span>,master_log_pos=position的内容(不用加引号),master_port=<span class=\"number\">3306</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected, <span class=\"number\">2</span> warnings (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; start slave;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected, <span class=\"number\">1</span> warning (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"># 启动slave</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show slave status\\G;</span><br><span class=\"line\"># 查看slave状态</span><br><span class=\"line\">*************************** <span class=\"number\">1.</span> row ***************************</span><br><span class=\"line\">               <span class=\"title class_\">Slave</span><span class=\"attr\">_IO_State</span>: <span class=\"title class_\">Waiting</span> <span class=\"keyword\">for</span> master to send event</span><br><span class=\"line\">                  <span class=\"title class_\">Master</span><span class=\"attr\">_Host</span>: mysql-master</span><br><span class=\"line\">                  <span class=\"title class_\">Master</span><span class=\"attr\">_User</span>: root</span><br><span class=\"line\">                  <span class=\"title class_\">Master</span><span class=\"attr\">_Port</span>: <span class=\"number\">3306</span></span><br><span class=\"line\">                <span class=\"title class_\">Connect</span><span class=\"attr\">_Retry</span>: <span class=\"number\">60</span></span><br><span class=\"line\">              <span class=\"title class_\">Master</span><span class=\"attr\">_Log_File</span>: mysql-bin<span class=\"number\">.000003</span></span><br><span class=\"line\">          <span class=\"title class_\">Read</span><span class=\"attr\">_Master_Log_Pos</span>: <span class=\"number\">543</span></span><br><span class=\"line\">               <span class=\"title class_\">Relay</span><span class=\"attr\">_Log_File</span>: 5671fb724964-relay-bin<span class=\"number\">.000002</span></span><br><span class=\"line\">                <span class=\"title class_\">Relay</span><span class=\"attr\">_Log_Pos</span>: <span class=\"number\">324</span></span><br><span class=\"line\">        <span class=\"title class_\">Relay</span><span class=\"attr\">_Master_Log_File</span>: mysql-bin<span class=\"number\">.000003</span></span><br><span class=\"line\">             <span class=\"title class_\">Slave</span><span class=\"attr\">_IO_Running</span>: <span class=\"title class_\">Yes</span></span><br><span class=\"line\">            <span class=\"title class_\">Slave</span><span class=\"attr\">_SQL_Running</span>: <span class=\"title class_\">Yes</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>当Slave_IO_Running和Slave SQL Ruing都是Yes时，说明配置成功了，可以在主库创个库，添加下数据，看看能否在从库中查到</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"MySQL主从复制工作原理\"><a href=\"#MySQL主从复制工作原理\" class=\"headerlink\" title=\"MySQL主从复制工作原理\"></a>MySQL主从复制工作原理</h2><p>1.MySql主库在事务提交时会把数据变更作为事件记录在二进制日志Binlog中；<br>2.主库推送二进制日志文件Binlog中的事件到从库的中继日志Relay Log中，之后从库根据中继日志重做数据变更操作，通过逻辑复制来达到主库和从库的数据一致性；<br>3.MySql通过三个线程来完成主从库间的数据复制，其中Binlog Dump线程跑在主库上，I/O线程和SQL线程跑着从库上；<br>4.当在从库上启动复制时，首先创建I/O线程连接主库，主库随后创建Binlog Dump线程读取数据库事件并发送给I/O线程，I/O线程获取到事件数据后更新到从库的中继日志Relay Log中去，之后从库上的SQL线程读取中继日志Relay Log中更新的数据库事件并应用</p>\n<h3 id=\"复制类型\"><a href=\"#复制类型\" class=\"headerlink\" title=\"复制类型\"></a>复制类型</h3><h4 id=\"基于语句的复制\"><a href=\"#基于语句的复制\" class=\"headerlink\" title=\"基于语句的复制\"></a>基于语句的复制</h4><p>MySQL中的复制功能最初基于从主设备到从设备的SQl语句传播。这称为基于语句的日志记录。您可以通过启动服务器来使用此格式–binlog_format=STATEMENT</p>\n<h4 id=\"基于行的复制\"><a href=\"#基于行的复制\" class=\"headerlink\" title=\"基于行的复制\"></a>基于行的复制</h4><p>在基于行的日志记录中，主服务器将事件写入二进制日志，以指示各个表行的影响方式。因此，重要的是表始终使用主键来确保可以有效地识别行。您可以通过启动它来使服务器使用基于行的日志记录 –binlog_format=ROW</p>\n<h4 id=\"混合类型的复制\"><a href=\"#混合类型的复制\" class=\"headerlink\" title=\"混合类型的复制\"></a>混合类型的复制</h4><p>混合日志记录。对于混合日志记录，默认情况下使用基于语句的日志记录，但在某些情况下，日志记录模式会自动切换到基于行的日志，您可以通过使用该选项启动mysqld,使MySQL显式使用混合日志记录–binlog_format=MIXED</p>\n<h4 id=\"基于GTIDS复制\"><a href=\"#基于GTIDS复制\" class=\"headerlink\" title=\"基于GTIDS复制\"></a>基于GTIDS复制</h4><p>GTID即全局事务ID (global transaction identifier)，实际上是由UUID+TID (即transactionId)组成的。其中UUID(即server_uuid) 产生于auto.conf文件(cat /data/mysql/data/auto.cnf)，是一个MySQL实例的唯一标识。TID代表了该实例上已经提交的事务数量，并且随着事务提交单调递增，所以GTID能够保证每个MySQL实例事务的执行（不会重复执行同一个事务，并且会补全没有执行的事务）。GTID在一组复制中，全局唯一。<br>使用GTID需要注意: 在构建主从复制之前，在一台将成为主的实例上进行一些操作（如数据清理等），通过GTID复制，这些在主从成立之前的操作也会被复制到从服务器上，引起复制失败。也就是说通过GTID复制都是从最先开始的事务日志开始，即使这些操作在复制之前执行。</p>\n<h2 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h2><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull docker </span><br><span class=\"line\">[root@jjh ~]# docker images</span><br><span class=\"line\"><span class=\"variable constant_\">REPOSITORY</span>          <span class=\"variable constant_\">TAG</span>                 <span class=\"variable constant_\">IMAGE</span> <span class=\"variable constant_\">ID</span>            <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">SIZE</span></span><br><span class=\"line\">docker.<span class=\"property\">io</span>/mysql     latest              dd7265748b5d        <span class=\"number\">2</span> weeks ago         <span class=\"number\">545</span> <span class=\"variable constant_\">MB</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建主从文件夹及修改相关配置\"><a href=\"#创建主从文件夹及修改相关配置\" class=\"headerlink\" title=\"创建主从文件夹及修改相关配置\"></a>创建主从文件夹及修改相关配置</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir -p /docker/mysql/&#123;master,slave&#125;/data</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加主库配置文件\"><a href=\"#添加主库配置文件\" class=\"headerlink\" title=\"添加主库配置文件\"></a>添加主库配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /docker/mysql/master/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">log-bin=mysql-bin</span><br><span class=\"line\">## 开启二进制日志功能</span><br><span class=\"line\">server-id=<span class=\"number\">1</span></span><br><span class=\"line\">## 同一局域网内注意要唯一</span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\">## <span class=\"title class_\">MySQL8</span>.<span class=\"property\">O</span> 更改默认的身份认证插件</span><br><span class=\"line\">table_definition_cache=<span class=\"number\">400</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加从库配置文件\"><a href=\"#添加从库配置文件\" class=\"headerlink\" title=\"添加从库配置文件\"></a>添加从库配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /docker/mysql/slave/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[mysqld]                                                                             </span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">server-id=<span class=\"number\">2</span></span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\">table_definition_cache=<span class=\"number\">400</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br><span class=\"line\">[mysql]</span><br><span class=\"line\"><span class=\"keyword\">default</span>-character-set=utf8mb4</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建Mysql桥接网络，用于主从容器直接互联\"><a href=\"#创建Mysql桥接网络，用于主从容器直接互联\" class=\"headerlink\" title=\"创建Mysql桥接网络，用于主从容器直接互联\"></a>创建Mysql桥接网络，用于主从容器直接互联</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker network create mysql</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建Mysql主库容器\"><a href=\"#创建Mysql主库容器\" class=\"headerlink\" title=\"创建Ｍysql主库容器\"></a>创建Ｍysql主库容器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d --privileged=<span class=\"literal\">true</span> -p <span class=\"number\">3307</span>:<span class=\"number\">3306</span> -v /docker/mysql/master/my.<span class=\"property\">cnf</span>:<span class=\"regexp\">/etc/my</span>sql/my.<span class=\"property\">cnf</span> -v /docker/mysql/master/<span class=\"attr\">data</span>:<span class=\"regexp\">/var/</span>lib/mysql -v /docker/mysql/master/mysql-<span class=\"attr\">files</span>:<span class=\"regexp\">/var/</span>lib/mysql-files -e <span class=\"variable constant_\">MYSQL_ROOT_PASSWORD</span>=密码 --name mysql-master --network mysql --network-alias mysql-master docker.<span class=\"property\">io</span>/mysql </span><br></pre></td></tr></table></figure>\n<h4 id=\"创建Mysql从库容器\"><a href=\"#创建Mysql从库容器\" class=\"headerlink\" title=\"创建Ｍysql从库容器\"></a>创建Ｍysql从库容器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d --privileged=<span class=\"literal\">true</span> -p <span class=\"number\">3308</span>:<span class=\"number\">3306</span> -v /docker/mysql/slave/my.<span class=\"property\">cnf</span>:<span class=\"regexp\">/etc/my</span>sql/my.<span class=\"property\">cnf</span> -v /docker/mysql/slave1/<span class=\"attr\">data</span>:<span class=\"regexp\">/var/</span>lib/mysql -v /docker/mysql/slave/mysql-<span class=\"attr\">files</span>:<span class=\"regexp\">/var/</span>lib/mysql-files -e <span class=\"variable constant_\">MYSQL_ROOT_PASSWORD</span>=密码 --name mysql-slave --network mysql --network-alias mysql-slave docker.<span class=\"property\">io</span>/mysql </span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Mysql主从复制\"><a href=\"#配置Mysql主从复制\" class=\"headerlink\" title=\"配置Mysql主从复制\"></a>配置Mysql主从复制</h3><h4 id=\"配置主服务器\"><a href=\"#配置主服务器\" class=\"headerlink\" title=\"配置主服务器\"></a>配置主服务器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker exec -it mysql-master bash</span><br><span class=\"line\">root@2150<span class=\"attr\">cac30563</span>:/# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">密码</span><br><span class=\"line\">mysql&gt; <span class=\"variable constant_\">GRANT</span> <span class=\"variable constant_\">REPLICATION</span> <span class=\"variable constant_\">SLAVE</span> <span class=\"variable constant_\">ON</span> *.* <span class=\"variable constant_\">TO</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"># 这里使用root用户进行主从复制, %为允许所有ip进行复制</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; flush privileges;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"># 刷新权限</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show master status;</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| <span class=\"title class_\">File</span>             | <span class=\"title class_\">Position</span> | <span class=\"title class_\">Binlog</span>_Do_DB | <span class=\"title class_\">Binlog</span>_Ignore_DB | <span class=\"title class_\">Executed</span>_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| mysql-bin<span class=\"number\">.000003</span> |      <span class=\"number\">543</span> |              |                  |                   |</span><br><span class=\"line\">+------------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\">#需要记录其中的<span class=\"title class_\">File</span>,  <span class=\"title class_\">Position</span>字段内容</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置从服务器\"><a href=\"#配置从服务器\" class=\"headerlink\" title=\"配置从服务器\"></a>配置从服务器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker exec -it mysql-slave bash</span><br><span class=\"line\">root@2150<span class=\"attr\">cac30563</span>:/# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">密码</span><br><span class=\"line\">#输入以下内容</span><br><span class=\"line\">mysql&gt; change master to master_host=<span class=\"string\">&#x27;mysql-master&#x27;</span>,master_user=<span class=\"string\">&#x27;root&#x27;</span>,master_password=<span class=\"string\">&#x27;密码&#x27;</span>,master_log_file=<span class=\"string\">&#x27;File列的内容&#x27;</span>,master_log_pos=position的内容(不用加引号),master_port=<span class=\"number\">3306</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected, <span class=\"number\">2</span> warnings (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; start slave;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected, <span class=\"number\">1</span> warning (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"># 启动slave</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show slave status\\G;</span><br><span class=\"line\"># 查看slave状态</span><br><span class=\"line\">*************************** <span class=\"number\">1.</span> row ***************************</span><br><span class=\"line\">               <span class=\"title class_\">Slave</span><span class=\"attr\">_IO_State</span>: <span class=\"title class_\">Waiting</span> <span class=\"keyword\">for</span> master to send event</span><br><span class=\"line\">                  <span class=\"title class_\">Master</span><span class=\"attr\">_Host</span>: mysql-master</span><br><span class=\"line\">                  <span class=\"title class_\">Master</span><span class=\"attr\">_User</span>: root</span><br><span class=\"line\">                  <span class=\"title class_\">Master</span><span class=\"attr\">_Port</span>: <span class=\"number\">3306</span></span><br><span class=\"line\">                <span class=\"title class_\">Connect</span><span class=\"attr\">_Retry</span>: <span class=\"number\">60</span></span><br><span class=\"line\">              <span class=\"title class_\">Master</span><span class=\"attr\">_Log_File</span>: mysql-bin<span class=\"number\">.000003</span></span><br><span class=\"line\">          <span class=\"title class_\">Read</span><span class=\"attr\">_Master_Log_Pos</span>: <span class=\"number\">543</span></span><br><span class=\"line\">               <span class=\"title class_\">Relay</span><span class=\"attr\">_Log_File</span>: 5671fb724964-relay-bin<span class=\"number\">.000002</span></span><br><span class=\"line\">                <span class=\"title class_\">Relay</span><span class=\"attr\">_Log_Pos</span>: <span class=\"number\">324</span></span><br><span class=\"line\">        <span class=\"title class_\">Relay</span><span class=\"attr\">_Master_Log_File</span>: mysql-bin<span class=\"number\">.000003</span></span><br><span class=\"line\">             <span class=\"title class_\">Slave</span><span class=\"attr\">_IO_Running</span>: <span class=\"title class_\">Yes</span></span><br><span class=\"line\">            <span class=\"title class_\">Slave</span><span class=\"attr\">_SQL_Running</span>: <span class=\"title class_\">Yes</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>当Slave_IO_Running和Slave SQL Ruing都是Yes时，说明配置成功了，可以在主库创个库，添加下数据，看看能否在从库中查到</p>\n"},{"title":"GitLab+Jenkins持续集成","date":"2020-11-27T16:00:00.000Z","updated":"2022-12-03T07:13:25.254Z","description":null,"cover":"https://pic.imgdb.cn/item/638af5ad16f2c2beb18292f8.jpg","_content":"**预安装Docker环境**\n**记得更改国内镜像源**\n## Docker安装Jenkins\n参考[官方Docker使用说明](https://hub.docker.com/r/jenkins/jenkins/)\n### 拉取 Jenkins镜像\n```javascript\n[root@jjh ~]# docker pull jenkins/jenkins\n```\n### 创建本地Jenkins配置文件目录\n```javascript\n[root@jjh ~]# mkdir /var/jenkins_home\n[root@jjh ~]# chmod 777 /var/jenkins_home  ##注意这里必须配置本地卷的权限，否则启动失败\n```\n### 运行Jenkins镜像\n```javascript\n[root@jjh ~]#  docker run -d -v /var/jenkins_home:/var/jenkins_home -p 8080:8080 --name jenkins docker.io/jenkins/jenkins\n7917d5151c9d1b66c2fcbec4e32bd573565fb4c4ff6ef51a1546f883d7ce3a22\n[root@jjh ~]# docker ps\nCONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                               NAMES\n7917d5151c9d        docker.io/jenkins/jenkins   \"/sbin/tini -- /us...\"   21 seconds ago      Up 20 seconds       0.0.0.0:8080->8080/tcp, 50000/tcp   jenkins\n```\n#-d：后台运行\n#-p：将容器内部端口向外映射\n#--name：命名容器名称\n#-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录\n## Docker安装GitLab\n### 拉取 GitLab镜像\n```javascript\n[root@jjh ~]# docker pull gitlab/gitlab-ce\n```\n### 创建本地GitLab配置文件目录\n通常会将 GitLab 的配置 (etc) 、 日志 (log) 、数据 (data) 放到容器之外， 便于日后升级， 因此请先准备这三个目录。\n```javascript\n[root@jjh ~]# mkdir -p /var/gitlab/etc\n[root@jjh ~]# mkdir -p /var/gitlab/log\n[root@jjh ~]# mkdir -p /var/gitlab/data\n```\n### 运行GitLab镜像并修改配置文件\n```javascript\n[root@jjh ~]# docker run -d -p 443:443 -p 222:22 -p 8090:80  --name gitlab -v /var/gitlab/etc:/etc/gitlab -v /var/gitlab/log:/var/log/gitlab -v /var/gitlab/data:/var/opt/gitlab docker.io/gitlab/gitlab-ce\n```\n在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb\n```javascript\n[root@jjh ~]#  vim /var/gitlab/etc/gitlab.rb\n# 配置http协议所使用的访问地址,不加端口号默认为80\nexternal_url 'http://localhost'\n\n# 配置ssh协议所使用的访问地址和端口\ngitlab_rails['gitlab_ssh_host'] = 'localhost'\ngitlab_rails['gitlab_shell_ssh_port'] = 222 # 此端口是run时22端口映射的222端口\n```\n## 搭建GitLab+Jenkins持续集成环境\n### 创建GitLab项目组\n打开 http://localhost:8090 ，登录进去（详见下面），点击new group创建一个项目组，信息可以自己看着填\n![](https://pic.downk.cc/item/5fc26697d590d4788a82467b.png)\n### 获取GitLab个人访问令牌\n打开GitLab，点击“setting”——“Account”，复制“Private token”备用，如下所示：\n![](https://pic.downk.cc/item/5fc2718cd590d4788a86eadf.png)\n### 创建Jenkins Job\n打开 http://localhost:8080 ,“item name”可以随便起，然后点击“构建一个自由风格的软件项目”\n![](https://pic.downk.cc/item/5fc271c1d590d4788a870281.png)\n### Jenkins安装Git GitLab插件\n切换到“可选插件”，分别搜索“GitLab Plugin”和“Git Plugin”,然后点击“直接安装”。如果在“可选插件”里没有搜到，可能默认你已经安装了，可以在“已安装”里查看\n![](https://pic.downk.cc/item/5fc271f8d590d4788a871adf.png)\n### 配置Jenkins设定系统\n配置GitLab，”Connection Name”随便填，“Git Host URL”填GitLab的访问地址，然后点“Add”——“jenkins”，如下所示：\n![](https://pic.downk.cc/item/5fc2725ad590d4788a874229.png)\n设置完了，要测试一下能否连接成功，点击“test connection”,要看到返回“Success”才行\n### 配置Job\n#### 配置Job的源码管理\n选择“源码管理”，选择“Git”,然后去GitLab中复制项目地址，粘贴到“Repository URL”,然后点击“credentials”后面的“Add”按钮\n![](https://pic.downk.cc/item/5fc272bed590d4788a876d73.png)\n之前连接存储库一直失败，后来发现是端口出错，这个要注意一下\n#### 配置Job的构建触发器\n选择“构建触发器”，勾选“Pull SCM”，这个选项会每隔一段时间检查一下GitLab仓库中代码是否有更新，有的话就执行构建操作。日程表如何设置，在这个输入框下面有说明。\n![](https://pic.downk.cc/item/5fc27310d590d4788a879849.png)\n点击进阶生成秘密令牌\n![](https://pic.downk.cc/item/5fc27352d590d4788a87b838.png)\n![](https://pic.downk.cc/item/5fc27374d590d4788a87c5c8.png)\n返回gitlab界面贴上令牌和job的url\n![](https://pic.downk.cc/item/5fc27391d590d4788a87d318.png)\n#### 配置Job的构建脚本\n在build栏目里，选择“jenkins execute shell”,然后输入你项目的构建命令（这依赖于你的项目，如Maven的maven build，gulp的gulp xxx 等等）\n![](https://pic.downk.cc/item/5fc273f1d590d4788a87fbfe.png)\njenkins支持多种构建脚本，可以自己试一下\n#### 将构建状态推送回git\n点击“进阶”，填写“build name”\n![](https://pic.downk.cc/item/5fc27410d590d4788a8809f2.png)\n点击“应用”，点击“保存”。\n至此，所有工作已经完成，现在你提交代码到GitLab，jenkins会每隔一段时间帮你运行一次构建命令，这样大家的代码自动集成到一起，出了错的话很快就知道了。\n","source":"_posts/GitLab+Jenkins持续集成.md","raw":"---\ntitle: GitLab+Jenkins持续集成\ndate: 2020-11-28\nupdated:\ndescription:  \ncover: https://pic.imgdb.cn/item/638af5ad16f2c2beb18292f8.jpg\ntag:\n  - Jenkins \n  - GitLab\ncategories:\n  - Docker\n---\n**预安装Docker环境**\n**记得更改国内镜像源**\n## Docker安装Jenkins\n参考[官方Docker使用说明](https://hub.docker.com/r/jenkins/jenkins/)\n### 拉取 Jenkins镜像\n```javascript\n[root@jjh ~]# docker pull jenkins/jenkins\n```\n### 创建本地Jenkins配置文件目录\n```javascript\n[root@jjh ~]# mkdir /var/jenkins_home\n[root@jjh ~]# chmod 777 /var/jenkins_home  ##注意这里必须配置本地卷的权限，否则启动失败\n```\n### 运行Jenkins镜像\n```javascript\n[root@jjh ~]#  docker run -d -v /var/jenkins_home:/var/jenkins_home -p 8080:8080 --name jenkins docker.io/jenkins/jenkins\n7917d5151c9d1b66c2fcbec4e32bd573565fb4c4ff6ef51a1546f883d7ce3a22\n[root@jjh ~]# docker ps\nCONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                               NAMES\n7917d5151c9d        docker.io/jenkins/jenkins   \"/sbin/tini -- /us...\"   21 seconds ago      Up 20 seconds       0.0.0.0:8080->8080/tcp, 50000/tcp   jenkins\n```\n#-d：后台运行\n#-p：将容器内部端口向外映射\n#--name：命名容器名称\n#-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录\n## Docker安装GitLab\n### 拉取 GitLab镜像\n```javascript\n[root@jjh ~]# docker pull gitlab/gitlab-ce\n```\n### 创建本地GitLab配置文件目录\n通常会将 GitLab 的配置 (etc) 、 日志 (log) 、数据 (data) 放到容器之外， 便于日后升级， 因此请先准备这三个目录。\n```javascript\n[root@jjh ~]# mkdir -p /var/gitlab/etc\n[root@jjh ~]# mkdir -p /var/gitlab/log\n[root@jjh ~]# mkdir -p /var/gitlab/data\n```\n### 运行GitLab镜像并修改配置文件\n```javascript\n[root@jjh ~]# docker run -d -p 443:443 -p 222:22 -p 8090:80  --name gitlab -v /var/gitlab/etc:/etc/gitlab -v /var/gitlab/log:/var/log/gitlab -v /var/gitlab/data:/var/opt/gitlab docker.io/gitlab/gitlab-ce\n```\n在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb\n```javascript\n[root@jjh ~]#  vim /var/gitlab/etc/gitlab.rb\n# 配置http协议所使用的访问地址,不加端口号默认为80\nexternal_url 'http://localhost'\n\n# 配置ssh协议所使用的访问地址和端口\ngitlab_rails['gitlab_ssh_host'] = 'localhost'\ngitlab_rails['gitlab_shell_ssh_port'] = 222 # 此端口是run时22端口映射的222端口\n```\n## 搭建GitLab+Jenkins持续集成环境\n### 创建GitLab项目组\n打开 http://localhost:8090 ，登录进去（详见下面），点击new group创建一个项目组，信息可以自己看着填\n![](https://pic.downk.cc/item/5fc26697d590d4788a82467b.png)\n### 获取GitLab个人访问令牌\n打开GitLab，点击“setting”——“Account”，复制“Private token”备用，如下所示：\n![](https://pic.downk.cc/item/5fc2718cd590d4788a86eadf.png)\n### 创建Jenkins Job\n打开 http://localhost:8080 ,“item name”可以随便起，然后点击“构建一个自由风格的软件项目”\n![](https://pic.downk.cc/item/5fc271c1d590d4788a870281.png)\n### Jenkins安装Git GitLab插件\n切换到“可选插件”，分别搜索“GitLab Plugin”和“Git Plugin”,然后点击“直接安装”。如果在“可选插件”里没有搜到，可能默认你已经安装了，可以在“已安装”里查看\n![](https://pic.downk.cc/item/5fc271f8d590d4788a871adf.png)\n### 配置Jenkins设定系统\n配置GitLab，”Connection Name”随便填，“Git Host URL”填GitLab的访问地址，然后点“Add”——“jenkins”，如下所示：\n![](https://pic.downk.cc/item/5fc2725ad590d4788a874229.png)\n设置完了，要测试一下能否连接成功，点击“test connection”,要看到返回“Success”才行\n### 配置Job\n#### 配置Job的源码管理\n选择“源码管理”，选择“Git”,然后去GitLab中复制项目地址，粘贴到“Repository URL”,然后点击“credentials”后面的“Add”按钮\n![](https://pic.downk.cc/item/5fc272bed590d4788a876d73.png)\n之前连接存储库一直失败，后来发现是端口出错，这个要注意一下\n#### 配置Job的构建触发器\n选择“构建触发器”，勾选“Pull SCM”，这个选项会每隔一段时间检查一下GitLab仓库中代码是否有更新，有的话就执行构建操作。日程表如何设置，在这个输入框下面有说明。\n![](https://pic.downk.cc/item/5fc27310d590d4788a879849.png)\n点击进阶生成秘密令牌\n![](https://pic.downk.cc/item/5fc27352d590d4788a87b838.png)\n![](https://pic.downk.cc/item/5fc27374d590d4788a87c5c8.png)\n返回gitlab界面贴上令牌和job的url\n![](https://pic.downk.cc/item/5fc27391d590d4788a87d318.png)\n#### 配置Job的构建脚本\n在build栏目里，选择“jenkins execute shell”,然后输入你项目的构建命令（这依赖于你的项目，如Maven的maven build，gulp的gulp xxx 等等）\n![](https://pic.downk.cc/item/5fc273f1d590d4788a87fbfe.png)\njenkins支持多种构建脚本，可以自己试一下\n#### 将构建状态推送回git\n点击“进阶”，填写“build name”\n![](https://pic.downk.cc/item/5fc27410d590d4788a8809f2.png)\n点击“应用”，点击“保存”。\n至此，所有工作已经完成，现在你提交代码到GitLab，jenkins会每隔一段时间帮你运行一次构建命令，这样大家的代码自动集成到一起，出了错的话很快就知道了。\n","slug":"GitLab+Jenkins持续集成","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avez0009tobvg5lkcvix","content":"<p><strong>预安装Docker环境</strong><br><strong>记得更改国内镜像源</strong></p>\n<h2 id=\"Docker安装Jenkins\"><a href=\"#Docker安装Jenkins\" class=\"headerlink\" title=\"Docker安装Jenkins\"></a>Docker安装Jenkins</h2><p>参考<a href=\"https://hub.docker.com/r/jenkins/jenkins/\">官方Docker使用说明</a></p>\n<h3 id=\"拉取-Jenkins镜像\"><a href=\"#拉取-Jenkins镜像\" class=\"headerlink\" title=\"拉取 Jenkins镜像\"></a>拉取 Jenkins镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull jenkins/jenkins</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建本地Jenkins配置文件目录\"><a href=\"#创建本地Jenkins配置文件目录\" class=\"headerlink\" title=\"创建本地Jenkins配置文件目录\"></a>创建本地Jenkins配置文件目录</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir /<span class=\"keyword\">var</span>/jenkins_home</span><br><span class=\"line\">[root@jjh ~]# chmod <span class=\"number\">777</span> /<span class=\"keyword\">var</span>/jenkins_home  ##注意这里必须配置本地卷的权限，否则启动失败</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行Jenkins镜像\"><a href=\"#运行Jenkins镜像\" class=\"headerlink\" title=\"运行Jenkins镜像\"></a>运行Jenkins镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]#  docker run -d -v /<span class=\"keyword\">var</span>/<span class=\"attr\">jenkins_home</span>:<span class=\"regexp\">/var/</span>jenkins_home -p <span class=\"number\">8080</span>:<span class=\"number\">8080</span> --name jenkins docker.<span class=\"property\">io</span>/jenkins/jenkins</span><br><span class=\"line\">7917d5151c9d1b66c2fcbec4e32bd573565fb4c4ff6ef51a1546f883d7ce3a22</span><br><span class=\"line\">[root@jjh ~]# docker ps</span><br><span class=\"line\"><span class=\"variable constant_\">CONTAINER</span> <span class=\"variable constant_\">ID</span>        <span class=\"variable constant_\">IMAGE</span>                       <span class=\"variable constant_\">COMMAND</span>                  <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">STATUS</span>              <span class=\"variable constant_\">PORTS</span>                               <span class=\"variable constant_\">NAMES</span></span><br><span class=\"line\">7917d5151c9d        docker.<span class=\"property\">io</span>/jenkins/jenkins   <span class=\"string\">&quot;/sbin/tini -- /us...&quot;</span>   <span class=\"number\">21</span> seconds ago      <span class=\"title class_\">Up</span> <span class=\"number\">20</span> seconds       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">8080</span>-&gt;<span class=\"number\">8080</span>/tcp, <span class=\"number\">50000</span>/tcp   jenkins</span><br></pre></td></tr></table></figure>\n<p>#-d：后台运行<br>#-p：将容器内部端口向外映射<br>#–name：命名容器名称<br>#-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</p>\n<h2 id=\"Docker安装GitLab\"><a href=\"#Docker安装GitLab\" class=\"headerlink\" title=\"Docker安装GitLab\"></a>Docker安装GitLab</h2><h3 id=\"拉取-GitLab镜像\"><a href=\"#拉取-GitLab镜像\" class=\"headerlink\" title=\"拉取 GitLab镜像\"></a>拉取 GitLab镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建本地GitLab配置文件目录\"><a href=\"#创建本地GitLab配置文件目录\" class=\"headerlink\" title=\"创建本地GitLab配置文件目录\"></a>创建本地GitLab配置文件目录</h3><p>通常会将 GitLab 的配置 (etc) 、 日志 (log) 、数据 (data) 放到容器之外， 便于日后升级， 因此请先准备这三个目录。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir -p /<span class=\"keyword\">var</span>/gitlab/etc</span><br><span class=\"line\">[root@jjh ~]# mkdir -p /<span class=\"keyword\">var</span>/gitlab/log</span><br><span class=\"line\">[root@jjh ~]# mkdir -p /<span class=\"keyword\">var</span>/gitlab/data</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行GitLab镜像并修改配置文件\"><a href=\"#运行GitLab镜像并修改配置文件\" class=\"headerlink\" title=\"运行GitLab镜像并修改配置文件\"></a>运行GitLab镜像并修改配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d -p <span class=\"number\">443</span>:<span class=\"number\">443</span> -p <span class=\"number\">222</span>:<span class=\"number\">22</span> -p <span class=\"number\">8090</span>:<span class=\"number\">80</span>  --name gitlab -v /<span class=\"keyword\">var</span>/gitlab/<span class=\"attr\">etc</span>:<span class=\"regexp\">/etc/gi</span>tlab -v /<span class=\"keyword\">var</span>/gitlab/<span class=\"attr\">log</span>:<span class=\"regexp\">/var/</span>log/gitlab -v /<span class=\"keyword\">var</span>/gitlab/<span class=\"attr\">data</span>:<span class=\"regexp\">/var/</span>opt/gitlab docker.<span class=\"property\">io</span>/gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>\n<p>在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]#  vim /<span class=\"keyword\">var</span>/gitlab/etc/gitlab.<span class=\"property\">rb</span></span><br><span class=\"line\"># 配置http协议所使用的访问地址,不加端口号默认为<span class=\"number\">80</span></span><br><span class=\"line\">external_url <span class=\"string\">&#x27;http://localhost&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 配置ssh协议所使用的访问地址和端口</span><br><span class=\"line\">gitlab_rails[<span class=\"string\">&#x27;gitlab_ssh_host&#x27;</span>] = <span class=\"string\">&#x27;localhost&#x27;</span></span><br><span class=\"line\">gitlab_rails[<span class=\"string\">&#x27;gitlab_shell_ssh_port&#x27;</span>] = <span class=\"number\">222</span> # 此端口是run时<span class=\"number\">22</span>端口映射的<span class=\"number\">222</span>端口</span><br></pre></td></tr></table></figure>\n<h2 id=\"搭建GitLab-Jenkins持续集成环境\"><a href=\"#搭建GitLab-Jenkins持续集成环境\" class=\"headerlink\" title=\"搭建GitLab+Jenkins持续集成环境\"></a>搭建GitLab+Jenkins持续集成环境</h2><h3 id=\"创建GitLab项目组\"><a href=\"#创建GitLab项目组\" class=\"headerlink\" title=\"创建GitLab项目组\"></a>创建GitLab项目组</h3><p>打开 <a href=\"http://localhost:8090/\">http://localhost:8090</a> ，登录进去（详见下面），点击new group创建一个项目组，信息可以自己看着填<br><img src=\"https://pic.downk.cc/item/5fc26697d590d4788a82467b.png\"></p>\n<h3 id=\"获取GitLab个人访问令牌\"><a href=\"#获取GitLab个人访问令牌\" class=\"headerlink\" title=\"获取GitLab个人访问令牌\"></a>获取GitLab个人访问令牌</h3><p>打开GitLab，点击“setting”——“Account”，复制“Private token”备用，如下所示：<br><img src=\"https://pic.downk.cc/item/5fc2718cd590d4788a86eadf.png\"></p>\n<h3 id=\"创建Jenkins-Job\"><a href=\"#创建Jenkins-Job\" class=\"headerlink\" title=\"创建Jenkins Job\"></a>创建Jenkins Job</h3><p>打开 <a href=\"http://localhost:8080/\">http://localhost:8080</a> ,“item name”可以随便起，然后点击“构建一个自由风格的软件项目”<br><img src=\"https://pic.downk.cc/item/5fc271c1d590d4788a870281.png\"></p>\n<h3 id=\"Jenkins安装Git-GitLab插件\"><a href=\"#Jenkins安装Git-GitLab插件\" class=\"headerlink\" title=\"Jenkins安装Git GitLab插件\"></a>Jenkins安装Git GitLab插件</h3><p>切换到“可选插件”，分别搜索“GitLab Plugin”和“Git Plugin”,然后点击“直接安装”。如果在“可选插件”里没有搜到，可能默认你已经安装了，可以在“已安装”里查看<br><img src=\"https://pic.downk.cc/item/5fc271f8d590d4788a871adf.png\"></p>\n<h3 id=\"配置Jenkins设定系统\"><a href=\"#配置Jenkins设定系统\" class=\"headerlink\" title=\"配置Jenkins设定系统\"></a>配置Jenkins设定系统</h3><p>配置GitLab，”Connection Name”随便填，“Git Host URL”填GitLab的访问地址，然后点“Add”——“jenkins”，如下所示：<br><img src=\"https://pic.downk.cc/item/5fc2725ad590d4788a874229.png\"><br>设置完了，要测试一下能否连接成功，点击“test connection”,要看到返回“Success”才行</p>\n<h3 id=\"配置Job\"><a href=\"#配置Job\" class=\"headerlink\" title=\"配置Job\"></a>配置Job</h3><h4 id=\"配置Job的源码管理\"><a href=\"#配置Job的源码管理\" class=\"headerlink\" title=\"配置Job的源码管理\"></a>配置Job的源码管理</h4><p>选择“源码管理”，选择“Git”,然后去GitLab中复制项目地址，粘贴到“Repository URL”,然后点击“credentials”后面的“Add”按钮<br><img src=\"https://pic.downk.cc/item/5fc272bed590d4788a876d73.png\"><br>之前连接存储库一直失败，后来发现是端口出错，这个要注意一下</p>\n<h4 id=\"配置Job的构建触发器\"><a href=\"#配置Job的构建触发器\" class=\"headerlink\" title=\"配置Job的构建触发器\"></a>配置Job的构建触发器</h4><p>选择“构建触发器”，勾选“Pull SCM”，这个选项会每隔一段时间检查一下GitLab仓库中代码是否有更新，有的话就执行构建操作。日程表如何设置，在这个输入框下面有说明。<br><img src=\"https://pic.downk.cc/item/5fc27310d590d4788a879849.png\"><br>点击进阶生成秘密令牌<br><img src=\"https://pic.downk.cc/item/5fc27352d590d4788a87b838.png\"><br><img src=\"https://pic.downk.cc/item/5fc27374d590d4788a87c5c8.png\"><br>返回gitlab界面贴上令牌和job的url<br><img src=\"https://pic.downk.cc/item/5fc27391d590d4788a87d318.png\"></p>\n<h4 id=\"配置Job的构建脚本\"><a href=\"#配置Job的构建脚本\" class=\"headerlink\" title=\"配置Job的构建脚本\"></a>配置Job的构建脚本</h4><p>在build栏目里，选择“jenkins execute shell”,然后输入你项目的构建命令（这依赖于你的项目，如Maven的maven build，gulp的gulp xxx 等等）<br><img src=\"https://pic.downk.cc/item/5fc273f1d590d4788a87fbfe.png\"><br>jenkins支持多种构建脚本，可以自己试一下</p>\n<h4 id=\"将构建状态推送回git\"><a href=\"#将构建状态推送回git\" class=\"headerlink\" title=\"将构建状态推送回git\"></a>将构建状态推送回git</h4><p>点击“进阶”，填写“build name”<br><img src=\"https://pic.downk.cc/item/5fc27410d590d4788a8809f2.png\"><br>点击“应用”，点击“保存”。<br>至此，所有工作已经完成，现在你提交代码到GitLab，jenkins会每隔一段时间帮你运行一次构建命令，这样大家的代码自动集成到一起，出了错的话很快就知道了。</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<p><strong>预安装Docker环境</strong><br><strong>记得更改国内镜像源</strong></p>\n<h2 id=\"Docker安装Jenkins\"><a href=\"#Docker安装Jenkins\" class=\"headerlink\" title=\"Docker安装Jenkins\"></a>Docker安装Jenkins</h2><p>参考<a href=\"https://hub.docker.com/r/jenkins/jenkins/\">官方Docker使用说明</a></p>\n<h3 id=\"拉取-Jenkins镜像\"><a href=\"#拉取-Jenkins镜像\" class=\"headerlink\" title=\"拉取 Jenkins镜像\"></a>拉取 Jenkins镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull jenkins/jenkins</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建本地Jenkins配置文件目录\"><a href=\"#创建本地Jenkins配置文件目录\" class=\"headerlink\" title=\"创建本地Jenkins配置文件目录\"></a>创建本地Jenkins配置文件目录</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir /<span class=\"keyword\">var</span>/jenkins_home</span><br><span class=\"line\">[root@jjh ~]# chmod <span class=\"number\">777</span> /<span class=\"keyword\">var</span>/jenkins_home  ##注意这里必须配置本地卷的权限，否则启动失败</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行Jenkins镜像\"><a href=\"#运行Jenkins镜像\" class=\"headerlink\" title=\"运行Jenkins镜像\"></a>运行Jenkins镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]#  docker run -d -v /<span class=\"keyword\">var</span>/<span class=\"attr\">jenkins_home</span>:<span class=\"regexp\">/var/</span>jenkins_home -p <span class=\"number\">8080</span>:<span class=\"number\">8080</span> --name jenkins docker.<span class=\"property\">io</span>/jenkins/jenkins</span><br><span class=\"line\">7917d5151c9d1b66c2fcbec4e32bd573565fb4c4ff6ef51a1546f883d7ce3a22</span><br><span class=\"line\">[root@jjh ~]# docker ps</span><br><span class=\"line\"><span class=\"variable constant_\">CONTAINER</span> <span class=\"variable constant_\">ID</span>        <span class=\"variable constant_\">IMAGE</span>                       <span class=\"variable constant_\">COMMAND</span>                  <span class=\"variable constant_\">CREATED</span>             <span class=\"variable constant_\">STATUS</span>              <span class=\"variable constant_\">PORTS</span>                               <span class=\"variable constant_\">NAMES</span></span><br><span class=\"line\">7917d5151c9d        docker.<span class=\"property\">io</span>/jenkins/jenkins   <span class=\"string\">&quot;/sbin/tini -- /us...&quot;</span>   <span class=\"number\">21</span> seconds ago      <span class=\"title class_\">Up</span> <span class=\"number\">20</span> seconds       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">8080</span>-&gt;<span class=\"number\">8080</span>/tcp, <span class=\"number\">50000</span>/tcp   jenkins</span><br></pre></td></tr></table></figure>\n<p>#-d：后台运行<br>#-p：将容器内部端口向外映射<br>#–name：命名容器名称<br>#-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</p>\n<h2 id=\"Docker安装GitLab\"><a href=\"#Docker安装GitLab\" class=\"headerlink\" title=\"Docker安装GitLab\"></a>Docker安装GitLab</h2><h3 id=\"拉取-GitLab镜像\"><a href=\"#拉取-GitLab镜像\" class=\"headerlink\" title=\"拉取 GitLab镜像\"></a>拉取 GitLab镜像</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker pull gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建本地GitLab配置文件目录\"><a href=\"#创建本地GitLab配置文件目录\" class=\"headerlink\" title=\"创建本地GitLab配置文件目录\"></a>创建本地GitLab配置文件目录</h3><p>通常会将 GitLab 的配置 (etc) 、 日志 (log) 、数据 (data) 放到容器之外， 便于日后升级， 因此请先准备这三个目录。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir -p /<span class=\"keyword\">var</span>/gitlab/etc</span><br><span class=\"line\">[root@jjh ~]# mkdir -p /<span class=\"keyword\">var</span>/gitlab/log</span><br><span class=\"line\">[root@jjh ~]# mkdir -p /<span class=\"keyword\">var</span>/gitlab/data</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行GitLab镜像并修改配置文件\"><a href=\"#运行GitLab镜像并修改配置文件\" class=\"headerlink\" title=\"运行GitLab镜像并修改配置文件\"></a>运行GitLab镜像并修改配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# docker run -d -p <span class=\"number\">443</span>:<span class=\"number\">443</span> -p <span class=\"number\">222</span>:<span class=\"number\">22</span> -p <span class=\"number\">8090</span>:<span class=\"number\">80</span>  --name gitlab -v /<span class=\"keyword\">var</span>/gitlab/<span class=\"attr\">etc</span>:<span class=\"regexp\">/etc/gi</span>tlab -v /<span class=\"keyword\">var</span>/gitlab/<span class=\"attr\">log</span>:<span class=\"regexp\">/var/</span>log/gitlab -v /<span class=\"keyword\">var</span>/gitlab/<span class=\"attr\">data</span>:<span class=\"regexp\">/var/</span>opt/gitlab docker.<span class=\"property\">io</span>/gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>\n<p>在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]#  vim /<span class=\"keyword\">var</span>/gitlab/etc/gitlab.<span class=\"property\">rb</span></span><br><span class=\"line\"># 配置http协议所使用的访问地址,不加端口号默认为<span class=\"number\">80</span></span><br><span class=\"line\">external_url <span class=\"string\">&#x27;http://localhost&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 配置ssh协议所使用的访问地址和端口</span><br><span class=\"line\">gitlab_rails[<span class=\"string\">&#x27;gitlab_ssh_host&#x27;</span>] = <span class=\"string\">&#x27;localhost&#x27;</span></span><br><span class=\"line\">gitlab_rails[<span class=\"string\">&#x27;gitlab_shell_ssh_port&#x27;</span>] = <span class=\"number\">222</span> # 此端口是run时<span class=\"number\">22</span>端口映射的<span class=\"number\">222</span>端口</span><br></pre></td></tr></table></figure>\n<h2 id=\"搭建GitLab-Jenkins持续集成环境\"><a href=\"#搭建GitLab-Jenkins持续集成环境\" class=\"headerlink\" title=\"搭建GitLab+Jenkins持续集成环境\"></a>搭建GitLab+Jenkins持续集成环境</h2><h3 id=\"创建GitLab项目组\"><a href=\"#创建GitLab项目组\" class=\"headerlink\" title=\"创建GitLab项目组\"></a>创建GitLab项目组</h3><p>打开 <a href=\"http://localhost:8090/\">http://localhost:8090</a> ，登录进去（详见下面），点击new group创建一个项目组，信息可以自己看着填<br><img src=\"https://pic.downk.cc/item/5fc26697d590d4788a82467b.png\"></p>\n<h3 id=\"获取GitLab个人访问令牌\"><a href=\"#获取GitLab个人访问令牌\" class=\"headerlink\" title=\"获取GitLab个人访问令牌\"></a>获取GitLab个人访问令牌</h3><p>打开GitLab，点击“setting”——“Account”，复制“Private token”备用，如下所示：<br><img src=\"https://pic.downk.cc/item/5fc2718cd590d4788a86eadf.png\"></p>\n<h3 id=\"创建Jenkins-Job\"><a href=\"#创建Jenkins-Job\" class=\"headerlink\" title=\"创建Jenkins Job\"></a>创建Jenkins Job</h3><p>打开 <a href=\"http://localhost:8080/\">http://localhost:8080</a> ,“item name”可以随便起，然后点击“构建一个自由风格的软件项目”<br><img src=\"https://pic.downk.cc/item/5fc271c1d590d4788a870281.png\"></p>\n<h3 id=\"Jenkins安装Git-GitLab插件\"><a href=\"#Jenkins安装Git-GitLab插件\" class=\"headerlink\" title=\"Jenkins安装Git GitLab插件\"></a>Jenkins安装Git GitLab插件</h3><p>切换到“可选插件”，分别搜索“GitLab Plugin”和“Git Plugin”,然后点击“直接安装”。如果在“可选插件”里没有搜到，可能默认你已经安装了，可以在“已安装”里查看<br><img src=\"https://pic.downk.cc/item/5fc271f8d590d4788a871adf.png\"></p>\n<h3 id=\"配置Jenkins设定系统\"><a href=\"#配置Jenkins设定系统\" class=\"headerlink\" title=\"配置Jenkins设定系统\"></a>配置Jenkins设定系统</h3><p>配置GitLab，”Connection Name”随便填，“Git Host URL”填GitLab的访问地址，然后点“Add”——“jenkins”，如下所示：<br><img src=\"https://pic.downk.cc/item/5fc2725ad590d4788a874229.png\"><br>设置完了，要测试一下能否连接成功，点击“test connection”,要看到返回“Success”才行</p>\n<h3 id=\"配置Job\"><a href=\"#配置Job\" class=\"headerlink\" title=\"配置Job\"></a>配置Job</h3><h4 id=\"配置Job的源码管理\"><a href=\"#配置Job的源码管理\" class=\"headerlink\" title=\"配置Job的源码管理\"></a>配置Job的源码管理</h4><p>选择“源码管理”，选择“Git”,然后去GitLab中复制项目地址，粘贴到“Repository URL”,然后点击“credentials”后面的“Add”按钮<br><img src=\"https://pic.downk.cc/item/5fc272bed590d4788a876d73.png\"><br>之前连接存储库一直失败，后来发现是端口出错，这个要注意一下</p>\n<h4 id=\"配置Job的构建触发器\"><a href=\"#配置Job的构建触发器\" class=\"headerlink\" title=\"配置Job的构建触发器\"></a>配置Job的构建触发器</h4><p>选择“构建触发器”，勾选“Pull SCM”，这个选项会每隔一段时间检查一下GitLab仓库中代码是否有更新，有的话就执行构建操作。日程表如何设置，在这个输入框下面有说明。<br><img src=\"https://pic.downk.cc/item/5fc27310d590d4788a879849.png\"><br>点击进阶生成秘密令牌<br><img src=\"https://pic.downk.cc/item/5fc27352d590d4788a87b838.png\"><br><img src=\"https://pic.downk.cc/item/5fc27374d590d4788a87c5c8.png\"><br>返回gitlab界面贴上令牌和job的url<br><img src=\"https://pic.downk.cc/item/5fc27391d590d4788a87d318.png\"></p>\n<h4 id=\"配置Job的构建脚本\"><a href=\"#配置Job的构建脚本\" class=\"headerlink\" title=\"配置Job的构建脚本\"></a>配置Job的构建脚本</h4><p>在build栏目里，选择“jenkins execute shell”,然后输入你项目的构建命令（这依赖于你的项目，如Maven的maven build，gulp的gulp xxx 等等）<br><img src=\"https://pic.downk.cc/item/5fc273f1d590d4788a87fbfe.png\"><br>jenkins支持多种构建脚本，可以自己试一下</p>\n<h4 id=\"将构建状态推送回git\"><a href=\"#将构建状态推送回git\" class=\"headerlink\" title=\"将构建状态推送回git\"></a>将构建状态推送回git</h4><p>点击“进阶”，填写“build name”<br><img src=\"https://pic.downk.cc/item/5fc27410d590d4788a8809f2.png\"><br>点击“应用”，点击“保存”。<br>至此，所有工作已经完成，现在你提交代码到GitLab，jenkins会每隔一段时间帮你运行一次构建命令，这样大家的代码自动集成到一起，出了错的话很快就知道了。</p>\n"},{"title":"JumpServer介绍与安装","date":"2021-01-24T16:00:00.000Z","updated":"2022-11-20T14:53:46.563Z","description":null,"cover":"https://pic.imgdb.cn/item/60a91b366ae4f77d350df72d.jpg","_content":"## JumpServer简介\n* JumpServer 是全球首款完全开源的堡垒机, 使用 GNU GPL v2.0 开源协议, 是符合 4A 的专业运维审计系统。\n* JumpServer 使用 Python / Django 进行开发, 遵循 Web 2.0 规范, 配备了业界领先的 Web Terminal 解决方案, 交互界面美观、用户体验好。\n* JumpServer 采纳分布式架构, 支持多机房跨区域部署, 中心节点提供 API, 各机房部署登录节点, 可横向扩展、无并发访问限制。\n* JumpServer 现已支持管理 SSH、 Telnet、 RDP、 VNC 协议资产。\n###  特点\n* 开源：零门槛，线上快速获取和安装\n* 分布式：轻松支持大规模并发访问\n* 无插件：仅需浏览器，极致的 Web Terminal 使用体验\n* 多云支持：一套系统，同时管理不同云上面的资产\n* 云端存储：审计录像云端存储，永不丢失\n* 多租户：一套系统，多个子公司和部门同时使用； 多应用支持: 数据库，Windows远程应用，Kubernetes\n\n参考[JumpServer官网](https://docs.jumpserver.org/zh/master/)\n## JumpServer安装\n推荐使用外置 数据库 和 Redis, 方便日后扩展升级\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|JumpServer | CentOS 7|192.168.0.36|\n|MariaDB|CentOS 7|192.168.0.63|\n|Redis|CentOS 7|192.168.0.64|\n\n* Redis >= 5.0.0\n* MySQL >= 5.7\n* MariaDB >= 10.2\n###  MariaDB安装\n参考[MariaDB官网](https://downloads.mariadb.org/mariadb/repositories/#distro=CentOS&distro_release=centos7-amd64--centos7&mirror=tuna&version=10.5)\n```javascript\n[root@mariadb ~]# vim /etc/yum.repos.d/MariaDB.repo \n[mariadb]\n名称= MariaDB\nbaseurl = http://yum.mariadb.org/10.5/centos7-amd64\ngpgkey = https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\ngpgcheck = 1\n[root@mariadb ~]# yum install MariaDB-server MariaDB-client -y\n[root@mariadb ~]# systemctl start mariadb\n[root@mariadb ~]# mysql -u root -p\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 3\nServer version: 10.5.8-MariaDB MariaDB Server\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]> alter user 'root'@'localhost' identified by 'password';\nQuery OK, 0 rows affected (0.001 sec)\n# 设个密码\nMariaDB [(none)]> create database jumpserver default charset 'utf8';\nQuery OK, 1 row affected (0.000 sec)\n\nMariaDB [(none)]> grant all on jumpserver.* to 'jumpserver'@'%'identified by 'password';\nQuery OK, 0 rows affected (0.001 sec)\n\nMariaDB [(none)]> flush privileges;\nQuery OK, 0 rows affected (0.000 sec)\n```\n###  Redis安装\n参考[Redis官网](https://redis.io/)\n之前的文章有说过Redis的安装，此次略\n```javascript\n[root@redis ~]# vim /usr/local/redis-6.0.9/conf/redis.conf\n···\nrequirepass password\n···\n# 设置密码后无密码可以登陆，但是无法操作\n```\n###  JumpServer安装\n```javascript\n[root@jumpserver ~]# cd /opt\n[root@jumpserver opt]# wget https://github.com/jumpserver/installer/releases/download/v2.7.0/jumpserver-installer-v2.7.0.tar.gz\n[root@jumpserver opt]# tar -xf jumpserver-installer-v2.7.0.tar.gz\n[root@jumpserver opt]# cd jumpserver-installer-v2.7.0\n[root@jumpserver jumpserver-installer-v2.7.0]# export DOCKER_IMAGE_PREFIX=docker.mirrors.ustc.edu.cn\n[root@jumpserver jumpserver-installer-v2.7.0]# cat config-example.txt\n# 说明\n#### 这是项目总的配置文件, 会作为环境变量加载到各个容器中\n#### 格式必须是 KEY=VALUE 不能有空格等\n\n# Compose项目设置\nCOMPOSE_PROJECT_NAME=jms\nCOMPOSE_HTTP_TIMEOUT=3600\nDOCKER_CLIENT_TIMEOUT=3600\nDOCKER_SUBNET=192.168.250.0/24\n\n## IPV6\nDOCKER_SUBNET_IPV6=2001:db8:10::/64\nUSE_IPV6=0\n\n### 持久化目录, 安装启动后不能再修改, 除非移动原来的持久化到新的位置\nVOLUME_DIR=/opt/jumpserver\n\n## 是否使用外部MYSQL和REDIS\nUSE_EXTERNAL_MYSQL=0\nUSE_EXTERNAL_REDIS=0\n\n## Nginx 配置，这个Nginx是用来分发路径到不同的服务\nHTTP_PORT=8080\nHTTPS_PORT=8443\nSSH_PORT=2222\n\n## LB 配置, 这个Nginx是HA时可以启动负载均衡到不同的主机\nUSE_LB=0\nLB_HTTP_PORT=80\nLB_HTTPS_PORT=443\nLB_SSH_PORT=2223\n\n## Task 配置\nUSE_TASK=1\n\n## XPack\nUSE_XPACK=0\n\n# Koko配置\nCORE_HOST=http://core:8080\nENABLE_PROXY_PROTOCOL=true\n\n# Core 配置\n### 启动后不能再修改，否则密码等等信息无法解密\nSECRET_KEY=\nBOOTSTRAP_TOKEN=\nLOG_LEVEL=INFO\n# SESSION_COOKIE_AGE=86400\n# SESSION_EXPIRE_AT_BROWSER_CLOSE=false\n\n## MySQL数据库配置\nDB_ENGINE=mysql\nDB_HOST=mysql\nDB_PORT=3306\nDB_USER=root\nDB_PASSWORD=\nDB_NAME=jumpserver\n\n## Redis配置\nREDIS_HOST=redis\nREDIS_PORT=6379\nREDIS_PASSWORD=\n\n### Keycloak 配置方式\n### AUTH_OPENID=true\n### BASE_SITE_URL=https://jumpserver.company.com/\n### AUTH_OPENID_SERVER_URL=https://keycloak.company.com/auth\n### AUTH_OPENID_REALM_NAME=cmp\n### AUTH_OPENID_CLIENT_ID=jumpserver\n### AUTH_OPENID_CLIENT_SECRET=\n### AUTH_OPENID_SHARE_SESSION=true\n### AUTH_OPENID_IGNORE_SSL_VERIFICATION=true\n\n# Guacamole 配置\nJUMPSERVER_SERVER=http://core:8080\nJUMPSERVER_KEY_DIR=/config/guacamole/data/key/\nJUMPSERVER_RECORD_PATH=/config/guacamole/data/record/\nJUMPSERVER_DRIVE_PATH=/config/guacamole/data/drive/\nJUMPSERVER_ENABLE_DRIVE=true\nJUMPSERVER_CLEAR_DRIVE_SESSION=true\nJUMPSERVER_CLEAR_DRIVE_SCHEDULE=24\n\n# Mysql 容器配置\nMYSQL_ROOT_PASSWORD=\nMYSQL_DATABASE=jumpserver\n\n[root@jumpserver jumpserver-installer-v2.7.0]# ./jmsctl.sh install\n···\n7. 配置 MySQL\n是否使用外部 MySQL? (y/n)  (默认为 n): y\n请输入 mysql 的主机地址 (无默认值): 192.168.0.63\n请输入 mysql 的端口 (默认为 3306): \n请输入 mysql 的数据库 (默认为 jumpserver): jumpserver\n请输入 mysql 的用户名 (无默认值): jumpserver\n请输入 mysql 的密码 (无默认值): password\n完成\n\n8. 配置 Redis\n是否使用外部 Redis? (y/n)  (默认为 n): y\n请输入 Redis 的主机地址 (无默认值): 192.168.0.64\n请输入 Redis 的端口 (默认为 6379): 6379\n请输入 Redis 的密码 (无默认值): password\n完成\n···\n```\n访问 http://localhost:8080/\n![](https://img.imgdb.cn/item/600e60913ffa7d37b3dfc3a6.jpg)\n可以看到基本搭建成功\n默认用户: admin  默认密码: admin\n![](https://img.imgdb.cn/item/600e614f3ffa7d37b3e04288.jpg)\n未完待续。。。\n","source":"_posts/JumpServer介绍与安装.md","raw":"---\ntitle: JumpServer介绍与安装\ndate: 2021-1-25\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/60a91b366ae4f77d350df72d.jpg\ntag:\n  - JumpServer\ncategories:\n  - 堡垒机\n---\n## JumpServer简介\n* JumpServer 是全球首款完全开源的堡垒机, 使用 GNU GPL v2.0 开源协议, 是符合 4A 的专业运维审计系统。\n* JumpServer 使用 Python / Django 进行开发, 遵循 Web 2.0 规范, 配备了业界领先的 Web Terminal 解决方案, 交互界面美观、用户体验好。\n* JumpServer 采纳分布式架构, 支持多机房跨区域部署, 中心节点提供 API, 各机房部署登录节点, 可横向扩展、无并发访问限制。\n* JumpServer 现已支持管理 SSH、 Telnet、 RDP、 VNC 协议资产。\n###  特点\n* 开源：零门槛，线上快速获取和安装\n* 分布式：轻松支持大规模并发访问\n* 无插件：仅需浏览器，极致的 Web Terminal 使用体验\n* 多云支持：一套系统，同时管理不同云上面的资产\n* 云端存储：审计录像云端存储，永不丢失\n* 多租户：一套系统，多个子公司和部门同时使用； 多应用支持: 数据库，Windows远程应用，Kubernetes\n\n参考[JumpServer官网](https://docs.jumpserver.org/zh/master/)\n## JumpServer安装\n推荐使用外置 数据库 和 Redis, 方便日后扩展升级\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|JumpServer | CentOS 7|192.168.0.36|\n|MariaDB|CentOS 7|192.168.0.63|\n|Redis|CentOS 7|192.168.0.64|\n\n* Redis >= 5.0.0\n* MySQL >= 5.7\n* MariaDB >= 10.2\n###  MariaDB安装\n参考[MariaDB官网](https://downloads.mariadb.org/mariadb/repositories/#distro=CentOS&distro_release=centos7-amd64--centos7&mirror=tuna&version=10.5)\n```javascript\n[root@mariadb ~]# vim /etc/yum.repos.d/MariaDB.repo \n[mariadb]\n名称= MariaDB\nbaseurl = http://yum.mariadb.org/10.5/centos7-amd64\ngpgkey = https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\ngpgcheck = 1\n[root@mariadb ~]# yum install MariaDB-server MariaDB-client -y\n[root@mariadb ~]# systemctl start mariadb\n[root@mariadb ~]# mysql -u root -p\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 3\nServer version: 10.5.8-MariaDB MariaDB Server\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]> alter user 'root'@'localhost' identified by 'password';\nQuery OK, 0 rows affected (0.001 sec)\n# 设个密码\nMariaDB [(none)]> create database jumpserver default charset 'utf8';\nQuery OK, 1 row affected (0.000 sec)\n\nMariaDB [(none)]> grant all on jumpserver.* to 'jumpserver'@'%'identified by 'password';\nQuery OK, 0 rows affected (0.001 sec)\n\nMariaDB [(none)]> flush privileges;\nQuery OK, 0 rows affected (0.000 sec)\n```\n###  Redis安装\n参考[Redis官网](https://redis.io/)\n之前的文章有说过Redis的安装，此次略\n```javascript\n[root@redis ~]# vim /usr/local/redis-6.0.9/conf/redis.conf\n···\nrequirepass password\n···\n# 设置密码后无密码可以登陆，但是无法操作\n```\n###  JumpServer安装\n```javascript\n[root@jumpserver ~]# cd /opt\n[root@jumpserver opt]# wget https://github.com/jumpserver/installer/releases/download/v2.7.0/jumpserver-installer-v2.7.0.tar.gz\n[root@jumpserver opt]# tar -xf jumpserver-installer-v2.7.0.tar.gz\n[root@jumpserver opt]# cd jumpserver-installer-v2.7.0\n[root@jumpserver jumpserver-installer-v2.7.0]# export DOCKER_IMAGE_PREFIX=docker.mirrors.ustc.edu.cn\n[root@jumpserver jumpserver-installer-v2.7.0]# cat config-example.txt\n# 说明\n#### 这是项目总的配置文件, 会作为环境变量加载到各个容器中\n#### 格式必须是 KEY=VALUE 不能有空格等\n\n# Compose项目设置\nCOMPOSE_PROJECT_NAME=jms\nCOMPOSE_HTTP_TIMEOUT=3600\nDOCKER_CLIENT_TIMEOUT=3600\nDOCKER_SUBNET=192.168.250.0/24\n\n## IPV6\nDOCKER_SUBNET_IPV6=2001:db8:10::/64\nUSE_IPV6=0\n\n### 持久化目录, 安装启动后不能再修改, 除非移动原来的持久化到新的位置\nVOLUME_DIR=/opt/jumpserver\n\n## 是否使用外部MYSQL和REDIS\nUSE_EXTERNAL_MYSQL=0\nUSE_EXTERNAL_REDIS=0\n\n## Nginx 配置，这个Nginx是用来分发路径到不同的服务\nHTTP_PORT=8080\nHTTPS_PORT=8443\nSSH_PORT=2222\n\n## LB 配置, 这个Nginx是HA时可以启动负载均衡到不同的主机\nUSE_LB=0\nLB_HTTP_PORT=80\nLB_HTTPS_PORT=443\nLB_SSH_PORT=2223\n\n## Task 配置\nUSE_TASK=1\n\n## XPack\nUSE_XPACK=0\n\n# Koko配置\nCORE_HOST=http://core:8080\nENABLE_PROXY_PROTOCOL=true\n\n# Core 配置\n### 启动后不能再修改，否则密码等等信息无法解密\nSECRET_KEY=\nBOOTSTRAP_TOKEN=\nLOG_LEVEL=INFO\n# SESSION_COOKIE_AGE=86400\n# SESSION_EXPIRE_AT_BROWSER_CLOSE=false\n\n## MySQL数据库配置\nDB_ENGINE=mysql\nDB_HOST=mysql\nDB_PORT=3306\nDB_USER=root\nDB_PASSWORD=\nDB_NAME=jumpserver\n\n## Redis配置\nREDIS_HOST=redis\nREDIS_PORT=6379\nREDIS_PASSWORD=\n\n### Keycloak 配置方式\n### AUTH_OPENID=true\n### BASE_SITE_URL=https://jumpserver.company.com/\n### AUTH_OPENID_SERVER_URL=https://keycloak.company.com/auth\n### AUTH_OPENID_REALM_NAME=cmp\n### AUTH_OPENID_CLIENT_ID=jumpserver\n### AUTH_OPENID_CLIENT_SECRET=\n### AUTH_OPENID_SHARE_SESSION=true\n### AUTH_OPENID_IGNORE_SSL_VERIFICATION=true\n\n# Guacamole 配置\nJUMPSERVER_SERVER=http://core:8080\nJUMPSERVER_KEY_DIR=/config/guacamole/data/key/\nJUMPSERVER_RECORD_PATH=/config/guacamole/data/record/\nJUMPSERVER_DRIVE_PATH=/config/guacamole/data/drive/\nJUMPSERVER_ENABLE_DRIVE=true\nJUMPSERVER_CLEAR_DRIVE_SESSION=true\nJUMPSERVER_CLEAR_DRIVE_SCHEDULE=24\n\n# Mysql 容器配置\nMYSQL_ROOT_PASSWORD=\nMYSQL_DATABASE=jumpserver\n\n[root@jumpserver jumpserver-installer-v2.7.0]# ./jmsctl.sh install\n···\n7. 配置 MySQL\n是否使用外部 MySQL? (y/n)  (默认为 n): y\n请输入 mysql 的主机地址 (无默认值): 192.168.0.63\n请输入 mysql 的端口 (默认为 3306): \n请输入 mysql 的数据库 (默认为 jumpserver): jumpserver\n请输入 mysql 的用户名 (无默认值): jumpserver\n请输入 mysql 的密码 (无默认值): password\n完成\n\n8. 配置 Redis\n是否使用外部 Redis? (y/n)  (默认为 n): y\n请输入 Redis 的主机地址 (无默认值): 192.168.0.64\n请输入 Redis 的端口 (默认为 6379): 6379\n请输入 Redis 的密码 (无默认值): password\n完成\n···\n```\n访问 http://localhost:8080/\n![](https://img.imgdb.cn/item/600e60913ffa7d37b3dfc3a6.jpg)\n可以看到基本搭建成功\n默认用户: admin  默认密码: admin\n![](https://img.imgdb.cn/item/600e614f3ffa7d37b3e04288.jpg)\n未完待续。。。\n","slug":"JumpServer介绍与安装","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf0000btobvg7a1alam","content":"<h2 id=\"JumpServer简介\"><a href=\"#JumpServer简介\" class=\"headerlink\" title=\"JumpServer简介\"></a>JumpServer简介</h2><ul>\n<li>JumpServer 是全球首款完全开源的堡垒机, 使用 GNU GPL v2.0 开源协议, 是符合 4A 的专业运维审计系统。</li>\n<li>JumpServer 使用 Python / Django 进行开发, 遵循 Web 2.0 规范, 配备了业界领先的 Web Terminal 解决方案, 交互界面美观、用户体验好。</li>\n<li>JumpServer 采纳分布式架构, 支持多机房跨区域部署, 中心节点提供 API, 各机房部署登录节点, 可横向扩展、无并发访问限制。</li>\n<li>JumpServer 现已支持管理 SSH、 Telnet、 RDP、 VNC 协议资产。<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3></li>\n<li>开源：零门槛，线上快速获取和安装</li>\n<li>分布式：轻松支持大规模并发访问</li>\n<li>无插件：仅需浏览器，极致的 Web Terminal 使用体验</li>\n<li>多云支持：一套系统，同时管理不同云上面的资产</li>\n<li>云端存储：审计录像云端存储，永不丢失</li>\n<li>多租户：一套系统，多个子公司和部门同时使用； 多应用支持: 数据库，Windows远程应用，Kubernetes</li>\n</ul>\n<p>参考<a href=\"https://docs.jumpserver.org/zh/master/\">JumpServer官网</a></p>\n<h2 id=\"JumpServer安装\"><a href=\"#JumpServer安装\" class=\"headerlink\" title=\"JumpServer安装\"></a>JumpServer安装</h2><p>推荐使用外置 数据库 和 Redis, 方便日后扩展升级</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">JumpServer</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">MariaDB</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.63</td>\n</tr>\n<tr>\n<td align=\"center\">Redis</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.64</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Redis &gt;= 5.0.0</li>\n<li>MySQL &gt;= 5.7</li>\n<li>MariaDB &gt;= 10.2<h3 id=\"MariaDB安装\"><a href=\"#MariaDB安装\" class=\"headerlink\" title=\"MariaDB安装\"></a>MariaDB安装</h3>参考<a href=\"https://downloads.mariadb.org/mariadb/repositories/#distro=CentOS&distro_release=centos7-amd64--centos7&mirror=tuna&version=10.5\">MariaDB官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mariadb ~]# vim /etc/yum.<span class=\"property\">repos</span>.<span class=\"property\">d</span>/<span class=\"title class_\">MariaDB</span>.<span class=\"property\">repo</span> </span><br><span class=\"line\">[mariadb]</span><br><span class=\"line\">名称= <span class=\"title class_\">MariaDB</span></span><br><span class=\"line\">baseurl = <span class=\"attr\">http</span>:<span class=\"comment\">//yum.mariadb.org/10.5/centos7-amd64</span></span><br><span class=\"line\">gpgkey = <span class=\"attr\">https</span>:<span class=\"comment\">//yum.mariadb.org/RPM-GPG-KEY-MariaDB</span></span><br><span class=\"line\">gpgcheck = <span class=\"number\">1</span></span><br><span class=\"line\">[root@mariadb ~]# yum install <span class=\"title class_\">MariaDB</span>-server <span class=\"title class_\">MariaDB</span>-client -y</span><br><span class=\"line\">[root@mariadb ~]# systemctl start mariadb</span><br><span class=\"line\">[root@mariadb ~]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MariaDB</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MariaDB</span> connection id is <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">10.5</span><span class=\"number\">.8</span>-<span class=\"title class_\">MariaDB</span> <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2018</span>, <span class=\"title class_\">Oracle</span>, <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Corporation</span> <span class=\"title class_\">Ab</span> and others.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; alter user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.001</span> sec)</span><br><span class=\"line\"># 设个密码</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; create database jumpserver <span class=\"keyword\">default</span> charset <span class=\"string\">&#x27;utf8&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.000</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; grant all on jumpserver.* to <span class=\"string\">&#x27;jumpserver&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>identified by <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.001</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; flush privileges;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.000</span> sec)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Redis安装\"><a href=\"#Redis安装\" class=\"headerlink\" title=\"Redis安装\"></a>Redis安装</h3>参考<a href=\"https://redis.io/\">Redis官网</a><br>之前的文章有说过Redis的安装，此次略<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@redis ~]# vim /usr/local/redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>/conf/redis.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\">requirepass password</span><br><span class=\"line\">···</span><br><span class=\"line\"># 设置密码后无密码可以登陆，但是无法操作</span><br></pre></td></tr></table></figure>\n<h3 id=\"JumpServer安装-1\"><a href=\"#JumpServer安装-1\" class=\"headerlink\" title=\"JumpServer安装\"></a>JumpServer安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jumpserver ~]# cd /opt</span><br><span class=\"line\">[root@jumpserver opt]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/jumpserver/installer/releases/download/v2.7.0/jumpserver-installer-v2.7.0.tar.gz</span></span><br><span class=\"line\">[root@jumpserver opt]# tar -xf jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@jumpserver opt]# cd jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jumpserver jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">DOCKER_IMAGE_PREFIX</span>=docker.<span class=\"property\">mirrors</span>.<span class=\"property\">ustc</span>.<span class=\"property\">edu</span>.<span class=\"property\">cn</span></span><br><span class=\"line\">[root@jumpserver jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>]# cat config-example.<span class=\"property\">txt</span></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">#### 这是项目总的配置文件, 会作为环境变量加载到各个容器中</span><br><span class=\"line\">#### 格式必须是 <span class=\"variable constant_\">KEY</span>=<span class=\"variable constant_\">VALUE</span> 不能有空格等</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Compose</span>项目设置</span><br><span class=\"line\"><span class=\"variable constant_\">COMPOSE_PROJECT_NAME</span>=jms</span><br><span class=\"line\"><span class=\"variable constant_\">COMPOSE_HTTP_TIMEOUT</span>=<span class=\"number\">3600</span></span><br><span class=\"line\"><span class=\"variable constant_\">DOCKER_CLIENT_TIMEOUT</span>=<span class=\"number\">3600</span></span><br><span class=\"line\"><span class=\"variable constant_\">DOCKER_SUBNET</span>=<span class=\"number\">192.168</span><span class=\"number\">.250</span><span class=\"number\">.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">IPV6</span></span><br><span class=\"line\"><span class=\"variable constant_\">DOCKER_SUBNET_IPV6</span>=<span class=\"number\">2001</span>:<span class=\"attr\">db8</span>:<span class=\"number\">10</span>::/<span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_IPV6</span>=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">### 持久化目录, 安装启动后不能再修改, 除非移动原来的持久化到新的位置</span><br><span class=\"line\"><span class=\"variable constant_\">VOLUME_DIR</span>=<span class=\"regexp\">/opt/</span>jumpserver</span><br><span class=\"line\"></span><br><span class=\"line\">## 是否使用外部<span class=\"variable constant_\">MYSQL</span>和<span class=\"variable constant_\">REDIS</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_EXTERNAL_MYSQL</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_EXTERNAL_REDIS</span>=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">Nginx</span> 配置，这个<span class=\"title class_\">Nginx</span>是用来分发路径到不同的服务</span><br><span class=\"line\"><span class=\"variable constant_\">HTTP_PORT</span>=<span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"variable constant_\">HTTPS_PORT</span>=<span class=\"number\">8443</span></span><br><span class=\"line\"><span class=\"variable constant_\">SSH_PORT</span>=<span class=\"number\">2222</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"variable constant_\">LB</span> 配置, 这个<span class=\"title class_\">Nginx</span>是<span class=\"variable constant_\">HA</span>时可以启动负载均衡到不同的主机</span><br><span class=\"line\"><span class=\"variable constant_\">USE_LB</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"variable constant_\">LB_HTTP_PORT</span>=<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"variable constant_\">LB_HTTPS_PORT</span>=<span class=\"number\">443</span></span><br><span class=\"line\"><span class=\"variable constant_\">LB_SSH_PORT</span>=<span class=\"number\">2223</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">Task</span> 配置</span><br><span class=\"line\"><span class=\"variable constant_\">USE_TASK</span>=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">XPack</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_XPACK</span>=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Koko</span>配置</span><br><span class=\"line\"><span class=\"variable constant_\">CORE_HOST</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//core:8080</span></span><br><span class=\"line\"><span class=\"variable constant_\">ENABLE_PROXY_PROTOCOL</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Core</span> 配置</span><br><span class=\"line\">### 启动后不能再修改，否则密码等等信息无法解密</span><br><span class=\"line\"><span class=\"variable constant_\">SECRET_KEY</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">BOOTSTRAP_TOKEN</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">LOG_LEVEL</span>=<span class=\"variable constant_\">INFO</span></span><br><span class=\"line\"># <span class=\"variable constant_\">SESSION_COOKIE_AGE</span>=<span class=\"number\">86400</span></span><br><span class=\"line\"># <span class=\"variable constant_\">SESSION_EXPIRE_AT_BROWSER_CLOSE</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">MySQL</span>数据库配置</span><br><span class=\"line\"><span class=\"variable constant_\">DB_ENGINE</span>=mysql</span><br><span class=\"line\"><span class=\"variable constant_\">DB_HOST</span>=mysql</span><br><span class=\"line\"><span class=\"variable constant_\">DB_PORT</span>=<span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"variable constant_\">DB_USER</span>=root</span><br><span class=\"line\"><span class=\"variable constant_\">DB_PASSWORD</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">DB_NAME</span>=jumpserver</span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">Redis</span>配置</span><br><span class=\"line\"><span class=\"variable constant_\">REDIS_HOST</span>=redis</span><br><span class=\"line\"><span class=\"variable constant_\">REDIS_PORT</span>=<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"variable constant_\">REDIS_PASSWORD</span>=</span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"title class_\">Keycloak</span> 配置方式</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID</span>=<span class=\"literal\">true</span></span><br><span class=\"line\">### <span class=\"variable constant_\">BASE_SITE_URL</span>=<span class=\"attr\">https</span>:<span class=\"comment\">//jumpserver.company.com/</span></span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_SERVER_URL</span>=<span class=\"attr\">https</span>:<span class=\"comment\">//keycloak.company.com/auth</span></span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_REALM_NAME</span>=cmp</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_CLIENT_ID</span>=jumpserver</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_CLIENT_SECRET</span>=</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_SHARE_SESSION</span>=<span class=\"literal\">true</span></span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_IGNORE_SSL_VERIFICATION</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Guacamole</span> 配置</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_SERVER</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//core:8080</span></span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_KEY_DIR</span>=<span class=\"regexp\">/config/gu</span>acamole/data/key/</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_RECORD_PATH</span>=<span class=\"regexp\">/config/gu</span>acamole/data/record/</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_DRIVE_PATH</span>=<span class=\"regexp\">/config/gu</span>acamole/data/drive/</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_ENABLE_DRIVE</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_CLEAR_DRIVE_SESSION</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_CLEAR_DRIVE_SCHEDULE</span>=<span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Mysql</span> 容器配置</span><br><span class=\"line\"><span class=\"variable constant_\">MYSQL_ROOT_PASSWORD</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">MYSQL_DATABASE</span>=jumpserver</span><br><span class=\"line\"></span><br><span class=\"line\">[root@jumpserver jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>]# ./jmsctl.<span class=\"property\">sh</span> install</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">7.</span> 配置 <span class=\"title class_\">MySQL</span></span><br><span class=\"line\">是否使用外部 <span class=\"title class_\">MySQL</span>? (y/n)  (默认为 n): y</span><br><span class=\"line\">请输入 mysql 的主机地址 (无默认值): <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.63</span></span><br><span class=\"line\">请输入 mysql 的端口 (默认为 <span class=\"number\">3306</span>): </span><br><span class=\"line\">请输入 mysql 的数据库 (默认为 jumpserver): jumpserver</span><br><span class=\"line\">请输入 mysql 的用户名 (无默认值): jumpserver</span><br><span class=\"line\">请输入 mysql 的密码 (无默认值): password</span><br><span class=\"line\">完成</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">8.</span> 配置 <span class=\"title class_\">Redis</span></span><br><span class=\"line\">是否使用外部 <span class=\"title class_\">Redis</span>? (y/n)  (默认为 n): y</span><br><span class=\"line\">请输入 <span class=\"title class_\">Redis</span> 的主机地址 (无默认值): <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.64</span></span><br><span class=\"line\">请输入 <span class=\"title class_\">Redis</span> 的端口 (默认为 <span class=\"number\">6379</span>): <span class=\"number\">6379</span></span><br><span class=\"line\">请输入 <span class=\"title class_\">Redis</span> 的密码 (无默认值): password</span><br><span class=\"line\">完成</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n访问 <a href=\"http://localhost:8080/\">http://localhost:8080/</a><br><img src=\"https://img.imgdb.cn/item/600e60913ffa7d37b3dfc3a6.jpg\"><br>可以看到基本搭建成功<br>默认用户: admin  默认密码: admin<br><img src=\"https://img.imgdb.cn/item/600e614f3ffa7d37b3e04288.jpg\"><br>未完待续。。。</li>\n</ul>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"JumpServer简介\"><a href=\"#JumpServer简介\" class=\"headerlink\" title=\"JumpServer简介\"></a>JumpServer简介</h2><ul>\n<li>JumpServer 是全球首款完全开源的堡垒机, 使用 GNU GPL v2.0 开源协议, 是符合 4A 的专业运维审计系统。</li>\n<li>JumpServer 使用 Python / Django 进行开发, 遵循 Web 2.0 规范, 配备了业界领先的 Web Terminal 解决方案, 交互界面美观、用户体验好。</li>\n<li>JumpServer 采纳分布式架构, 支持多机房跨区域部署, 中心节点提供 API, 各机房部署登录节点, 可横向扩展、无并发访问限制。</li>\n<li>JumpServer 现已支持管理 SSH、 Telnet、 RDP、 VNC 协议资产。<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3></li>\n<li>开源：零门槛，线上快速获取和安装</li>\n<li>分布式：轻松支持大规模并发访问</li>\n<li>无插件：仅需浏览器，极致的 Web Terminal 使用体验</li>\n<li>多云支持：一套系统，同时管理不同云上面的资产</li>\n<li>云端存储：审计录像云端存储，永不丢失</li>\n<li>多租户：一套系统，多个子公司和部门同时使用； 多应用支持: 数据库，Windows远程应用，Kubernetes</li>\n</ul>\n<p>参考<a href=\"https://docs.jumpserver.org/zh/master/\">JumpServer官网</a></p>\n<h2 id=\"JumpServer安装\"><a href=\"#JumpServer安装\" class=\"headerlink\" title=\"JumpServer安装\"></a>JumpServer安装</h2><p>推荐使用外置 数据库 和 Redis, 方便日后扩展升级</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">JumpServer</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">MariaDB</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.63</td>\n</tr>\n<tr>\n<td align=\"center\">Redis</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.64</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Redis &gt;= 5.0.0</li>\n<li>MySQL &gt;= 5.7</li>\n<li>MariaDB &gt;= 10.2<h3 id=\"MariaDB安装\"><a href=\"#MariaDB安装\" class=\"headerlink\" title=\"MariaDB安装\"></a>MariaDB安装</h3>参考<a href=\"https://downloads.mariadb.org/mariadb/repositories/#distro=CentOS&distro_release=centos7-amd64--centos7&mirror=tuna&version=10.5\">MariaDB官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mariadb ~]# vim /etc/yum.<span class=\"property\">repos</span>.<span class=\"property\">d</span>/<span class=\"title class_\">MariaDB</span>.<span class=\"property\">repo</span> </span><br><span class=\"line\">[mariadb]</span><br><span class=\"line\">名称= <span class=\"title class_\">MariaDB</span></span><br><span class=\"line\">baseurl = <span class=\"attr\">http</span>:<span class=\"comment\">//yum.mariadb.org/10.5/centos7-amd64</span></span><br><span class=\"line\">gpgkey = <span class=\"attr\">https</span>:<span class=\"comment\">//yum.mariadb.org/RPM-GPG-KEY-MariaDB</span></span><br><span class=\"line\">gpgcheck = <span class=\"number\">1</span></span><br><span class=\"line\">[root@mariadb ~]# yum install <span class=\"title class_\">MariaDB</span>-server <span class=\"title class_\">MariaDB</span>-client -y</span><br><span class=\"line\">[root@mariadb ~]# systemctl start mariadb</span><br><span class=\"line\">[root@mariadb ~]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MariaDB</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MariaDB</span> connection id is <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">10.5</span><span class=\"number\">.8</span>-<span class=\"title class_\">MariaDB</span> <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2018</span>, <span class=\"title class_\">Oracle</span>, <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Corporation</span> <span class=\"title class_\">Ab</span> and others.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; alter user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> identified by <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.001</span> sec)</span><br><span class=\"line\"># 设个密码</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; create database jumpserver <span class=\"keyword\">default</span> charset <span class=\"string\">&#x27;utf8&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.000</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; grant all on jumpserver.* to <span class=\"string\">&#x27;jumpserver&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>identified by <span class=\"string\">&#x27;password&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.001</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; flush privileges;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.000</span> sec)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Redis安装\"><a href=\"#Redis安装\" class=\"headerlink\" title=\"Redis安装\"></a>Redis安装</h3>参考<a href=\"https://redis.io/\">Redis官网</a><br>之前的文章有说过Redis的安装，此次略<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@redis ~]# vim /usr/local/redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>/conf/redis.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\">requirepass password</span><br><span class=\"line\">···</span><br><span class=\"line\"># 设置密码后无密码可以登陆，但是无法操作</span><br></pre></td></tr></table></figure>\n<h3 id=\"JumpServer安装-1\"><a href=\"#JumpServer安装-1\" class=\"headerlink\" title=\"JumpServer安装\"></a>JumpServer安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jumpserver ~]# cd /opt</span><br><span class=\"line\">[root@jumpserver opt]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/jumpserver/installer/releases/download/v2.7.0/jumpserver-installer-v2.7.0.tar.gz</span></span><br><span class=\"line\">[root@jumpserver opt]# tar -xf jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@jumpserver opt]# cd jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jumpserver jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">DOCKER_IMAGE_PREFIX</span>=docker.<span class=\"property\">mirrors</span>.<span class=\"property\">ustc</span>.<span class=\"property\">edu</span>.<span class=\"property\">cn</span></span><br><span class=\"line\">[root@jumpserver jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>]# cat config-example.<span class=\"property\">txt</span></span><br><span class=\"line\"># 说明</span><br><span class=\"line\">#### 这是项目总的配置文件, 会作为环境变量加载到各个容器中</span><br><span class=\"line\">#### 格式必须是 <span class=\"variable constant_\">KEY</span>=<span class=\"variable constant_\">VALUE</span> 不能有空格等</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Compose</span>项目设置</span><br><span class=\"line\"><span class=\"variable constant_\">COMPOSE_PROJECT_NAME</span>=jms</span><br><span class=\"line\"><span class=\"variable constant_\">COMPOSE_HTTP_TIMEOUT</span>=<span class=\"number\">3600</span></span><br><span class=\"line\"><span class=\"variable constant_\">DOCKER_CLIENT_TIMEOUT</span>=<span class=\"number\">3600</span></span><br><span class=\"line\"><span class=\"variable constant_\">DOCKER_SUBNET</span>=<span class=\"number\">192.168</span><span class=\"number\">.250</span><span class=\"number\">.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">IPV6</span></span><br><span class=\"line\"><span class=\"variable constant_\">DOCKER_SUBNET_IPV6</span>=<span class=\"number\">2001</span>:<span class=\"attr\">db8</span>:<span class=\"number\">10</span>::/<span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_IPV6</span>=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">### 持久化目录, 安装启动后不能再修改, 除非移动原来的持久化到新的位置</span><br><span class=\"line\"><span class=\"variable constant_\">VOLUME_DIR</span>=<span class=\"regexp\">/opt/</span>jumpserver</span><br><span class=\"line\"></span><br><span class=\"line\">## 是否使用外部<span class=\"variable constant_\">MYSQL</span>和<span class=\"variable constant_\">REDIS</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_EXTERNAL_MYSQL</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_EXTERNAL_REDIS</span>=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">Nginx</span> 配置，这个<span class=\"title class_\">Nginx</span>是用来分发路径到不同的服务</span><br><span class=\"line\"><span class=\"variable constant_\">HTTP_PORT</span>=<span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"variable constant_\">HTTPS_PORT</span>=<span class=\"number\">8443</span></span><br><span class=\"line\"><span class=\"variable constant_\">SSH_PORT</span>=<span class=\"number\">2222</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"variable constant_\">LB</span> 配置, 这个<span class=\"title class_\">Nginx</span>是<span class=\"variable constant_\">HA</span>时可以启动负载均衡到不同的主机</span><br><span class=\"line\"><span class=\"variable constant_\">USE_LB</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"variable constant_\">LB_HTTP_PORT</span>=<span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"variable constant_\">LB_HTTPS_PORT</span>=<span class=\"number\">443</span></span><br><span class=\"line\"><span class=\"variable constant_\">LB_SSH_PORT</span>=<span class=\"number\">2223</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">Task</span> 配置</span><br><span class=\"line\"><span class=\"variable constant_\">USE_TASK</span>=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">XPack</span></span><br><span class=\"line\"><span class=\"variable constant_\">USE_XPACK</span>=<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Koko</span>配置</span><br><span class=\"line\"><span class=\"variable constant_\">CORE_HOST</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//core:8080</span></span><br><span class=\"line\"><span class=\"variable constant_\">ENABLE_PROXY_PROTOCOL</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Core</span> 配置</span><br><span class=\"line\">### 启动后不能再修改，否则密码等等信息无法解密</span><br><span class=\"line\"><span class=\"variable constant_\">SECRET_KEY</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">BOOTSTRAP_TOKEN</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">LOG_LEVEL</span>=<span class=\"variable constant_\">INFO</span></span><br><span class=\"line\"># <span class=\"variable constant_\">SESSION_COOKIE_AGE</span>=<span class=\"number\">86400</span></span><br><span class=\"line\"># <span class=\"variable constant_\">SESSION_EXPIRE_AT_BROWSER_CLOSE</span>=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">MySQL</span>数据库配置</span><br><span class=\"line\"><span class=\"variable constant_\">DB_ENGINE</span>=mysql</span><br><span class=\"line\"><span class=\"variable constant_\">DB_HOST</span>=mysql</span><br><span class=\"line\"><span class=\"variable constant_\">DB_PORT</span>=<span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"variable constant_\">DB_USER</span>=root</span><br><span class=\"line\"><span class=\"variable constant_\">DB_PASSWORD</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">DB_NAME</span>=jumpserver</span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"title class_\">Redis</span>配置</span><br><span class=\"line\"><span class=\"variable constant_\">REDIS_HOST</span>=redis</span><br><span class=\"line\"><span class=\"variable constant_\">REDIS_PORT</span>=<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"variable constant_\">REDIS_PASSWORD</span>=</span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"title class_\">Keycloak</span> 配置方式</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID</span>=<span class=\"literal\">true</span></span><br><span class=\"line\">### <span class=\"variable constant_\">BASE_SITE_URL</span>=<span class=\"attr\">https</span>:<span class=\"comment\">//jumpserver.company.com/</span></span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_SERVER_URL</span>=<span class=\"attr\">https</span>:<span class=\"comment\">//keycloak.company.com/auth</span></span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_REALM_NAME</span>=cmp</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_CLIENT_ID</span>=jumpserver</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_CLIENT_SECRET</span>=</span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_SHARE_SESSION</span>=<span class=\"literal\">true</span></span><br><span class=\"line\">### <span class=\"variable constant_\">AUTH_OPENID_IGNORE_SSL_VERIFICATION</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Guacamole</span> 配置</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_SERVER</span>=<span class=\"attr\">http</span>:<span class=\"comment\">//core:8080</span></span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_KEY_DIR</span>=<span class=\"regexp\">/config/gu</span>acamole/data/key/</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_RECORD_PATH</span>=<span class=\"regexp\">/config/gu</span>acamole/data/record/</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_DRIVE_PATH</span>=<span class=\"regexp\">/config/gu</span>acamole/data/drive/</span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_ENABLE_DRIVE</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_CLEAR_DRIVE_SESSION</span>=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"variable constant_\">JUMPSERVER_CLEAR_DRIVE_SCHEDULE</span>=<span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">Mysql</span> 容器配置</span><br><span class=\"line\"><span class=\"variable constant_\">MYSQL_ROOT_PASSWORD</span>=</span><br><span class=\"line\"><span class=\"variable constant_\">MYSQL_DATABASE</span>=jumpserver</span><br><span class=\"line\"></span><br><span class=\"line\">[root@jumpserver jumpserver-installer-v2<span class=\"number\">.7</span><span class=\"number\">.0</span>]# ./jmsctl.<span class=\"property\">sh</span> install</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">7.</span> 配置 <span class=\"title class_\">MySQL</span></span><br><span class=\"line\">是否使用外部 <span class=\"title class_\">MySQL</span>? (y/n)  (默认为 n): y</span><br><span class=\"line\">请输入 mysql 的主机地址 (无默认值): <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.63</span></span><br><span class=\"line\">请输入 mysql 的端口 (默认为 <span class=\"number\">3306</span>): </span><br><span class=\"line\">请输入 mysql 的数据库 (默认为 jumpserver): jumpserver</span><br><span class=\"line\">请输入 mysql 的用户名 (无默认值): jumpserver</span><br><span class=\"line\">请输入 mysql 的密码 (无默认值): password</span><br><span class=\"line\">完成</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">8.</span> 配置 <span class=\"title class_\">Redis</span></span><br><span class=\"line\">是否使用外部 <span class=\"title class_\">Redis</span>? (y/n)  (默认为 n): y</span><br><span class=\"line\">请输入 <span class=\"title class_\">Redis</span> 的主机地址 (无默认值): <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.64</span></span><br><span class=\"line\">请输入 <span class=\"title class_\">Redis</span> 的端口 (默认为 <span class=\"number\">6379</span>): <span class=\"number\">6379</span></span><br><span class=\"line\">请输入 <span class=\"title class_\">Redis</span> 的密码 (无默认值): password</span><br><span class=\"line\">完成</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n访问 <a href=\"http://localhost:8080/\">http://localhost:8080/</a><br><img src=\"https://img.imgdb.cn/item/600e60913ffa7d37b3dfc3a6.jpg\"><br>可以看到基本搭建成功<br>默认用户: admin  默认密码: admin<br><img src=\"https://img.imgdb.cn/item/600e614f3ffa7d37b3e04288.jpg\"><br>未完待续。。。</li>\n</ul>\n"},{"title":"HAProxy+Nginx负载均衡介绍与搭建","date":"2020-12-27T16:00:00.000Z","updated":"2022-12-03T07:11:09.151Z","description":null,"cover":"https://pic.imgdb.cn/item/638af5b416f2c2beb182a1ef.jpg","_content":"## HAProxy简介\nHAProxy提供高可用性、负载均衡以及基于TCP和HTTP的应用代理，支持虚拟主机，它是免费、快速并且可靠的一种负载均衡解决方案。适合处理高负载站点的七层数据请求。类似的代理服务可以屏蔽内部真实服务器，防止内部服务器遭受攻击。\n### HAProxy主要优点:\n* HAProxy是支持虚拟主机的，通过frontend指令来实现\n* 能够补充Nginx的一些缺点比如Session的保持，Cookie 的引导等工作\n* 支持url检测后端的服务器出问题的检测会有很好的帮助。\n* 它跟LVS一样，本身仅仅就只是款负载均衡软件;单纯从效率上来讲HAProxy 更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。\n* HAProxy可以对MySQL读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQ slaves数量超过10台时性能不如LVS,所以更推荐LVS+Keepalived。\n* 能对请求的url和header中的信息做匹配，有比Ivs有更好的7层实现\n##  HAProxy+Nginx负载均衡安装\n### HAProxy安装\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|HAProxy|CentOS 7|192.168.0.36|\n|Nginx1|CentOS 7|192.168.0.42|\n|Nginx2|CentOS 7|192.168.0.43|\n\n#### 准备lua环境\n由于CentOS7 之前版本自带的lua版本比较低并不符合HAProxy要求的lua最低版本(5.3)的要求，因此需要编译安装较新版本的lua环境\n参考[lua官方网站](http://www.lua.org/)\n```javascript\n[root@haproxy ~]# lua -v\nLua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio\n[root@haproxy ~]# yum -y install gcc readline-devel \n[root@haproxy ~]# cd /usr/local/src\n[root@haproxy src]# wget http://www.lua.org/ftp/lua-5.4.2.tar.gz\n[root@haproxy src]# tar -zxvf lua-5.4.2.tar.gz \n[root@haproxy src]# cd lua-5.4.2/\n[root@haproxy lua-5.4.2]# make linux test\n[root@haproxy lua-5.4.2]# src/lua -v\nLua 5.4.2  Copyright (C) 1994-2020 Lua.org, PUC-Rio\n```\n####  源码安装HAProxy\n参考[HAProxy官网](https://www.haproxy.com/)\n```javascript\n[root@haproxy ~]# yum -y install gcc openssl-devel pcre-devel systemd-devel\n[root@haproxy ~]# ls\nhaproxy-2.2.6.tar.gz\n[root@haproxy ~]# tar -zxvf haproxy-2.2.6.tar.gz -C /usr/local/\n[root@haproxy ~]# cd /usr/local/haproxy-2.2.6/\n[root@haproxy haproxy-2.2.6]# make  ARCH=x86_64 TARGET=linux-glibc  USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1  USE_SYSTEMD=1  USE_LUA=1 LUA_INC=/usr/local/src/lua-5.4.2/src/  LUA_LIB=/usr/local/src/lua-5.4.2/src/ \n[root@haproxy haproxy-2.2.6]# make install PREFIX=/usr/local/haproxy\n```\n#### 修改配置文件\n[root@haproxy haproxy-2.2.6]# mkdir /etc/haproxy\n[root@haproxy haproxy-2.2.6]# vim /etc/haproxy/haproxy.cfg\n```javascript\nglobal\n     log 127.0.0.1 local2 info\n     chroot /usr/local/haproxy\n     user haproxy\n     group haproxy\n     daemon           ## 守护进程模式    可以使用非守护默认\n     maxconn 4000     ## 最大的连接数\n\ndefaults              ## 默认配置\n     log global       ## 应用全局部分的日志配置\n     mode http        ## 模式为http\n     option httplog\n     option dontlognull\n     timeout connect 5000     ## 连接超时时间\n     timeout client 50000\n     timeout server 50000     ## 客户端和服务器超时时间\n\nfrontend http_front\n     bind *:80\n     stats uri /haproxy-status\n     stats auth    jjh:123456\n     default_backend http_back\n\nbackend http_back\n     balance roundrobin\n     option httpchk GET /index.html\n     option forwardfor header X-Forwarded-For\n     server nginx1 192.168.0.42:80 check inter 2000 rise 3 fall 3 weight 30   ## 服务器节点的地址、名称、端口 、检查间隔时间3000毫秒、健康检查次数2次认为失败\n     server nginx2 192.168.0.43:80 check inter 2000 rise 3 fall 3 weight 30 \n```\n#### 启动 HAProxy\n```javascript\n[root@haproxy1 haproxy-2.2.6]# cp haproxy /usr/sbin/\n[root@haproxy2 haproxy-2.2.6]# useradd -r haproxy\n[root@haproxy2 haproxy-2.2.6]# cp ./examples/haproxy.init /etc/init.d/haproxy\n[root@haproxy2 haproxy-2.2.6]# chmod 755 /etc/init.d/haproxy \n[root@haproxy2 haproxy-2.2.6]# /etc/init.d/haproxy start\nReloading systemd:                                         [  OK  ]\nStarting haproxy (via systemctl):                          [  OK  ]   \n```\n访问 http://localhost/haproxy-status\n用户名/密码（haproxy.cfg配置文件）   jjh/123456\n![](https://pic.downk.cc/item/5fe95d1b3ffa7d37b36af6f5.jpg)\n###  Nginx安装\n参考[Nginx官方网站](https://nginx.com/) \n点击[Nginx下载](https://nginx.org/)\n####  依赖包安装\n```javascript\n[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make\n```\n####  源码安装Nginx\n```javascript\n[root@nginx ~]# ls\nnginx-1.18.0.tar.gz\n[root@nginx ~]# tar -zxvf nginx-1.18.0.tar.gz -C /usr/local/\n[root@nginx ~]# useradd -M -s /sbin/nologin nginx\n[root@nginx1 ~]# cd /usr/local/nginx-1.18.0/\n[root@nginx1 nginx-1.18.0]# ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module && make && make install\n[root@nginx1 nginx-1.18.0]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/\n[root@nginx1 nginx-1.18.0]# echo \"shuaige/liangzai(nginx内容不同以作区分)\" > /usr/local/nginx/html/index.html\n```\n####  Nginx 启动\n```javascript\n[root@nginx1 nginx-1.18.0]# nginx -t\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n```\n####  重启报错及解决方法\n```javascript\n[root@nginx1 nginx-1.18.0]# nginx -s reload\nnginx: [error] invalid PID number \"\" in \"/usr/local/nginx/logs/nginx.pid\"\n[root@nginx1 nginx-1.18.0]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n[root@nginx1 nginx-1.18.0]# nginx -s reload\n```\n###  验证\n```javascript\n[root@jjh ~]# curl 192.168.0.36\nshuaige\n[root@jjh ~]# curl 192.168.0.36\nliangzai\n```\n可以看到初步搭建成功\n\n","source":"_posts/HAProxy+Nginx负载均衡介绍与搭建.md","raw":"---\ntitle: HAProxy+Nginx负载均衡介绍与搭建\ndate: 2020-12-28\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/638af5b416f2c2beb182a1ef.jpg\ntag:\n  - HAProxy\n  - Nginx\ncategories:\n  - 负载均衡\n---\n## HAProxy简介\nHAProxy提供高可用性、负载均衡以及基于TCP和HTTP的应用代理，支持虚拟主机，它是免费、快速并且可靠的一种负载均衡解决方案。适合处理高负载站点的七层数据请求。类似的代理服务可以屏蔽内部真实服务器，防止内部服务器遭受攻击。\n### HAProxy主要优点:\n* HAProxy是支持虚拟主机的，通过frontend指令来实现\n* 能够补充Nginx的一些缺点比如Session的保持，Cookie 的引导等工作\n* 支持url检测后端的服务器出问题的检测会有很好的帮助。\n* 它跟LVS一样，本身仅仅就只是款负载均衡软件;单纯从效率上来讲HAProxy 更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。\n* HAProxy可以对MySQL读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQ slaves数量超过10台时性能不如LVS,所以更推荐LVS+Keepalived。\n* 能对请求的url和header中的信息做匹配，有比Ivs有更好的7层实现\n##  HAProxy+Nginx负载均衡安装\n### HAProxy安装\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|HAProxy|CentOS 7|192.168.0.36|\n|Nginx1|CentOS 7|192.168.0.42|\n|Nginx2|CentOS 7|192.168.0.43|\n\n#### 准备lua环境\n由于CentOS7 之前版本自带的lua版本比较低并不符合HAProxy要求的lua最低版本(5.3)的要求，因此需要编译安装较新版本的lua环境\n参考[lua官方网站](http://www.lua.org/)\n```javascript\n[root@haproxy ~]# lua -v\nLua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio\n[root@haproxy ~]# yum -y install gcc readline-devel \n[root@haproxy ~]# cd /usr/local/src\n[root@haproxy src]# wget http://www.lua.org/ftp/lua-5.4.2.tar.gz\n[root@haproxy src]# tar -zxvf lua-5.4.2.tar.gz \n[root@haproxy src]# cd lua-5.4.2/\n[root@haproxy lua-5.4.2]# make linux test\n[root@haproxy lua-5.4.2]# src/lua -v\nLua 5.4.2  Copyright (C) 1994-2020 Lua.org, PUC-Rio\n```\n####  源码安装HAProxy\n参考[HAProxy官网](https://www.haproxy.com/)\n```javascript\n[root@haproxy ~]# yum -y install gcc openssl-devel pcre-devel systemd-devel\n[root@haproxy ~]# ls\nhaproxy-2.2.6.tar.gz\n[root@haproxy ~]# tar -zxvf haproxy-2.2.6.tar.gz -C /usr/local/\n[root@haproxy ~]# cd /usr/local/haproxy-2.2.6/\n[root@haproxy haproxy-2.2.6]# make  ARCH=x86_64 TARGET=linux-glibc  USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1  USE_SYSTEMD=1  USE_LUA=1 LUA_INC=/usr/local/src/lua-5.4.2/src/  LUA_LIB=/usr/local/src/lua-5.4.2/src/ \n[root@haproxy haproxy-2.2.6]# make install PREFIX=/usr/local/haproxy\n```\n#### 修改配置文件\n[root@haproxy haproxy-2.2.6]# mkdir /etc/haproxy\n[root@haproxy haproxy-2.2.6]# vim /etc/haproxy/haproxy.cfg\n```javascript\nglobal\n     log 127.0.0.1 local2 info\n     chroot /usr/local/haproxy\n     user haproxy\n     group haproxy\n     daemon           ## 守护进程模式    可以使用非守护默认\n     maxconn 4000     ## 最大的连接数\n\ndefaults              ## 默认配置\n     log global       ## 应用全局部分的日志配置\n     mode http        ## 模式为http\n     option httplog\n     option dontlognull\n     timeout connect 5000     ## 连接超时时间\n     timeout client 50000\n     timeout server 50000     ## 客户端和服务器超时时间\n\nfrontend http_front\n     bind *:80\n     stats uri /haproxy-status\n     stats auth    jjh:123456\n     default_backend http_back\n\nbackend http_back\n     balance roundrobin\n     option httpchk GET /index.html\n     option forwardfor header X-Forwarded-For\n     server nginx1 192.168.0.42:80 check inter 2000 rise 3 fall 3 weight 30   ## 服务器节点的地址、名称、端口 、检查间隔时间3000毫秒、健康检查次数2次认为失败\n     server nginx2 192.168.0.43:80 check inter 2000 rise 3 fall 3 weight 30 \n```\n#### 启动 HAProxy\n```javascript\n[root@haproxy1 haproxy-2.2.6]# cp haproxy /usr/sbin/\n[root@haproxy2 haproxy-2.2.6]# useradd -r haproxy\n[root@haproxy2 haproxy-2.2.6]# cp ./examples/haproxy.init /etc/init.d/haproxy\n[root@haproxy2 haproxy-2.2.6]# chmod 755 /etc/init.d/haproxy \n[root@haproxy2 haproxy-2.2.6]# /etc/init.d/haproxy start\nReloading systemd:                                         [  OK  ]\nStarting haproxy (via systemctl):                          [  OK  ]   \n```\n访问 http://localhost/haproxy-status\n用户名/密码（haproxy.cfg配置文件）   jjh/123456\n![](https://pic.downk.cc/item/5fe95d1b3ffa7d37b36af6f5.jpg)\n###  Nginx安装\n参考[Nginx官方网站](https://nginx.com/) \n点击[Nginx下载](https://nginx.org/)\n####  依赖包安装\n```javascript\n[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make\n```\n####  源码安装Nginx\n```javascript\n[root@nginx ~]# ls\nnginx-1.18.0.tar.gz\n[root@nginx ~]# tar -zxvf nginx-1.18.0.tar.gz -C /usr/local/\n[root@nginx ~]# useradd -M -s /sbin/nologin nginx\n[root@nginx1 ~]# cd /usr/local/nginx-1.18.0/\n[root@nginx1 nginx-1.18.0]# ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module && make && make install\n[root@nginx1 nginx-1.18.0]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/\n[root@nginx1 nginx-1.18.0]# echo \"shuaige/liangzai(nginx内容不同以作区分)\" > /usr/local/nginx/html/index.html\n```\n####  Nginx 启动\n```javascript\n[root@nginx1 nginx-1.18.0]# nginx -t\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n```\n####  重启报错及解决方法\n```javascript\n[root@nginx1 nginx-1.18.0]# nginx -s reload\nnginx: [error] invalid PID number \"\" in \"/usr/local/nginx/logs/nginx.pid\"\n[root@nginx1 nginx-1.18.0]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n[root@nginx1 nginx-1.18.0]# nginx -s reload\n```\n###  验证\n```javascript\n[root@jjh ~]# curl 192.168.0.36\nshuaige\n[root@jjh ~]# curl 192.168.0.36\nliangzai\n```\n可以看到初步搭建成功\n\n","slug":"HAProxy+Nginx负载均衡介绍与搭建","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf2000gtobv3d0t62dc","content":"<h2 id=\"HAProxy简介\"><a href=\"#HAProxy简介\" class=\"headerlink\" title=\"HAProxy简介\"></a>HAProxy简介</h2><p>HAProxy提供高可用性、负载均衡以及基于TCP和HTTP的应用代理，支持虚拟主机，它是免费、快速并且可靠的一种负载均衡解决方案。适合处理高负载站点的七层数据请求。类似的代理服务可以屏蔽内部真实服务器，防止内部服务器遭受攻击。</p>\n<h3 id=\"HAProxy主要优点\"><a href=\"#HAProxy主要优点\" class=\"headerlink\" title=\"HAProxy主要优点:\"></a>HAProxy主要优点:</h3><ul>\n<li>HAProxy是支持虚拟主机的，通过frontend指令来实现</li>\n<li>能够补充Nginx的一些缺点比如Session的保持，Cookie 的引导等工作</li>\n<li>支持url检测后端的服务器出问题的检测会有很好的帮助。</li>\n<li>它跟LVS一样，本身仅仅就只是款负载均衡软件;单纯从效率上来讲HAProxy 更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。</li>\n<li>HAProxy可以对MySQL读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQ slaves数量超过10台时性能不如LVS,所以更推荐LVS+Keepalived。</li>\n<li>能对请求的url和header中的信息做匹配，有比Ivs有更好的7层实现<h2 id=\"HAProxy-Nginx负载均衡安装\"><a href=\"#HAProxy-Nginx负载均衡安装\" class=\"headerlink\" title=\"HAProxy+Nginx负载均衡安装\"></a>HAProxy+Nginx负载均衡安装</h2><h3 id=\"HAProxy安装\"><a href=\"#HAProxy安装\" class=\"headerlink\" title=\"HAProxy安装\"></a>HAProxy安装</h3></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">HAProxy</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">Nginx1</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.42</td>\n</tr>\n<tr>\n<td align=\"center\">Nginx2</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.43</td>\n</tr>\n</tbody></table>\n<h4 id=\"准备lua环境\"><a href=\"#准备lua环境\" class=\"headerlink\" title=\"准备lua环境\"></a>准备lua环境</h4><p>由于CentOS7 之前版本自带的lua版本比较低并不符合HAProxy要求的lua最低版本(5.3)的要求，因此需要编译安装较新版本的lua环境<br>参考<a href=\"http://www.lua.org/\">lua官方网站</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@haproxy ~]# lua -v</span><br><span class=\"line\"><span class=\"title class_\">Lua</span> <span class=\"number\">5.1</span><span class=\"number\">.4</span>  <span class=\"title class_\">Copyright</span> (C) <span class=\"number\">1994</span>-<span class=\"number\">2008</span> <span class=\"title class_\">Lua</span>.<span class=\"property\">org</span>, <span class=\"variable constant_\">PUC</span>-<span class=\"title class_\">Rio</span></span><br><span class=\"line\">[root@haproxy ~]# yum -y install gcc readline-devel </span><br><span class=\"line\">[root@haproxy ~]# cd /usr/local/src</span><br><span class=\"line\">[root@haproxy src]# wget <span class=\"attr\">http</span>:<span class=\"comment\">//www.lua.org/ftp/lua-5.4.2.tar.gz</span></span><br><span class=\"line\">[root@haproxy src]# tar -zxvf lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> </span><br><span class=\"line\">[root@haproxy src]# cd lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>/</span><br><span class=\"line\">[root@haproxy lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>]# make linux test</span><br><span class=\"line\">[root@haproxy lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>]# src/lua -v</span><br><span class=\"line\"><span class=\"title class_\">Lua</span> <span class=\"number\">5.4</span><span class=\"number\">.2</span>  <span class=\"title class_\">Copyright</span> (C) <span class=\"number\">1994</span>-<span class=\"number\">2020</span> <span class=\"title class_\">Lua</span>.<span class=\"property\">org</span>, <span class=\"variable constant_\">PUC</span>-<span class=\"title class_\">Rio</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"源码安装HAProxy\"><a href=\"#源码安装HAProxy\" class=\"headerlink\" title=\"源码安装HAProxy\"></a>源码安装HAProxy</h4><p>参考<a href=\"https://www.haproxy.com/\">HAProxy官网</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@haproxy ~]# yum -y install gcc openssl-devel pcre-devel systemd-devel</span><br><span class=\"line\">[root@haproxy ~]# ls</span><br><span class=\"line\">haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@haproxy ~]# tar -zxvf haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@haproxy ~]# cd /usr/local/haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>/</span><br><span class=\"line\">[root@haproxy haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# make  <span class=\"variable constant_\">ARCH</span>=x86_64 <span class=\"variable constant_\">TARGET</span>=linux-glibc  <span class=\"variable constant_\">USE_PCRE</span>=<span class=\"number\">1</span> <span class=\"variable constant_\">USE_OPENSSL</span>=<span class=\"number\">1</span> <span class=\"variable constant_\">USE_ZLIB</span>=<span class=\"number\">1</span>  <span class=\"variable constant_\">USE_SYSTEMD</span>=<span class=\"number\">1</span>  <span class=\"variable constant_\">USE_LUA</span>=<span class=\"number\">1</span> <span class=\"variable constant_\">LUA_INC</span>=<span class=\"regexp\">/usr/</span>local/src/lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>/src/  <span class=\"variable constant_\">LUA_LIB</span>=<span class=\"regexp\">/usr/</span>local/src/lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>/src/ </span><br><span class=\"line\">[root@haproxy haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# make install <span class=\"variable constant_\">PREFIX</span>=<span class=\"regexp\">/usr/</span>local/haproxy</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><p>[root@haproxy haproxy-2.2.6]# mkdir /etc/haproxy<br>[root@haproxy haproxy-2.2.6]# vim /etc/haproxy/haproxy.cfg</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">global</span></span><br><span class=\"line\">     log <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> local2 info</span><br><span class=\"line\">     chroot /usr/local/haproxy</span><br><span class=\"line\">     user haproxy</span><br><span class=\"line\">     group haproxy</span><br><span class=\"line\">     daemon           ## 守护进程模式    可以使用非守护默认</span><br><span class=\"line\">     maxconn <span class=\"number\">4000</span>     ## 最大的连接数</span><br><span class=\"line\"></span><br><span class=\"line\">defaults              ## 默认配置</span><br><span class=\"line\">     log <span class=\"variable language_\">global</span>       ## 应用全局部分的日志配置</span><br><span class=\"line\">     mode http        ## 模式为http</span><br><span class=\"line\">     option httplog</span><br><span class=\"line\">     option dontlognull</span><br><span class=\"line\">     timeout connect <span class=\"number\">5000</span>     ## 连接超时时间</span><br><span class=\"line\">     timeout client <span class=\"number\">50000</span></span><br><span class=\"line\">     timeout server <span class=\"number\">50000</span>     ## 客户端和服务器超时时间</span><br><span class=\"line\"></span><br><span class=\"line\">frontend http_front</span><br><span class=\"line\">     bind *:<span class=\"number\">80</span></span><br><span class=\"line\">     stats uri /haproxy-status</span><br><span class=\"line\">     stats auth    <span class=\"attr\">jjh</span>:<span class=\"number\">123456</span></span><br><span class=\"line\">     default_backend http_back</span><br><span class=\"line\"></span><br><span class=\"line\">backend http_back</span><br><span class=\"line\">     balance roundrobin</span><br><span class=\"line\">     option httpchk <span class=\"variable constant_\">GET</span> /index.<span class=\"property\">html</span></span><br><span class=\"line\">     option forwardfor header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span></span><br><span class=\"line\">     server nginx1 <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span>:<span class=\"number\">80</span> check inter <span class=\"number\">2000</span> rise <span class=\"number\">3</span> fall <span class=\"number\">3</span> weight <span class=\"number\">30</span>   ## 服务器节点的地址、名称、端口 、检查间隔时间<span class=\"number\">3000</span>毫秒、健康检查次数<span class=\"number\">2</span>次认为失败</span><br><span class=\"line\">     server nginx2 <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span>:<span class=\"number\">80</span> check inter <span class=\"number\">2000</span> rise <span class=\"number\">3</span> fall <span class=\"number\">3</span> weight <span class=\"number\">30</span> </span><br></pre></td></tr></table></figure>\n<h4 id=\"启动-HAProxy\"><a href=\"#启动-HAProxy\" class=\"headerlink\" title=\"启动 HAProxy\"></a>启动 HAProxy</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@haproxy1 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# cp haproxy /usr/sbin/</span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# useradd -r haproxy</span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# cp ./examples/haproxy.<span class=\"property\">init</span> /etc/init.<span class=\"property\">d</span>/haproxy</span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# chmod <span class=\"number\">755</span> /etc/init.<span class=\"property\">d</span>/haproxy </span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# /etc/init.<span class=\"property\">d</span>/haproxy start</span><br><span class=\"line\"><span class=\"title class_\">Reloading</span> <span class=\"attr\">systemd</span>:                                         [  <span class=\"variable constant_\">OK</span>  ]</span><br><span class=\"line\"><span class=\"title class_\">Starting</span> haproxy (via systemctl):                          [  <span class=\"variable constant_\">OK</span>  ]   </span><br></pre></td></tr></table></figure>\n<p>访问 <a href=\"http://localhost/haproxy-status\">http://localhost/haproxy-status</a><br>用户名/密码（haproxy.cfg配置文件）   jjh/123456<br><img src=\"https://pic.downk.cc/item/5fe95d1b3ffa7d37b36af6f5.jpg\"></p>\n<h3 id=\"Nginx安装\"><a href=\"#Nginx安装\" class=\"headerlink\" title=\"Nginx安装\"></a>Nginx安装</h3><p>参考<a href=\"https://nginx.com/\">Nginx官方网站</a><br>点击<a href=\"https://nginx.org/\">Nginx下载</a></p>\n<h4 id=\"依赖包安装\"><a href=\"#依赖包安装\" class=\"headerlink\" title=\"依赖包安装\"></a>依赖包安装</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br></pre></td></tr></table></figure>\n<h4 id=\"源码安装Nginx\"><a href=\"#源码安装Nginx\" class=\"headerlink\" title=\"源码安装Nginx\"></a>源码安装Nginx</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx ~]# ls</span><br><span class=\"line\">nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@nginx ~]# tar -zxvf nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@nginx ~]# useradd -M -s /sbin/nologin nginx</span><br><span class=\"line\">[root@nginx1 ~]# cd /usr/local/nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>/</span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ./configure --prefix=<span class=\"regexp\">/usr/</span>local/nginx --user=nginx --group=nginx --<span class=\"keyword\">with</span>-http_stub_status_module &amp;&amp; make &amp;&amp; make install</span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# echo <span class=\"string\">&quot;shuaige/liangzai(nginx内容不同以作区分)&quot;</span> &gt; <span class=\"regexp\">/usr/</span>local/nginx/html/index.<span class=\"property\">html</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Nginx-启动\"><a href=\"#Nginx-启动\" class=\"headerlink\" title=\"Nginx 启动\"></a>Nginx 启动</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# nginx -t</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: the configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> syntax is ok</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> test is successful</span><br></pre></td></tr></table></figure>\n<h4 id=\"重启报错及解决方法\"><a href=\"#重启报错及解决方法\" class=\"headerlink\" title=\"重启报错及解决方法\"></a>重启报错及解决方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# nginx -s reload</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: [error] invalid <span class=\"variable constant_\">PID</span> number <span class=\"string\">&quot;&quot;</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;/usr/local/nginx/logs/nginx.pid&quot;</span></span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span></span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# nginx -s reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# curl <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\">shuaige</span><br><span class=\"line\">[root@jjh ~]# curl <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\">liangzai</span><br></pre></td></tr></table></figure>\n<p>可以看到初步搭建成功</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"HAProxy简介\"><a href=\"#HAProxy简介\" class=\"headerlink\" title=\"HAProxy简介\"></a>HAProxy简介</h2><p>HAProxy提供高可用性、负载均衡以及基于TCP和HTTP的应用代理，支持虚拟主机，它是免费、快速并且可靠的一种负载均衡解决方案。适合处理高负载站点的七层数据请求。类似的代理服务可以屏蔽内部真实服务器，防止内部服务器遭受攻击。</p>\n<h3 id=\"HAProxy主要优点\"><a href=\"#HAProxy主要优点\" class=\"headerlink\" title=\"HAProxy主要优点:\"></a>HAProxy主要优点:</h3><ul>\n<li>HAProxy是支持虚拟主机的，通过frontend指令来实现</li>\n<li>能够补充Nginx的一些缺点比如Session的保持，Cookie 的引导等工作</li>\n<li>支持url检测后端的服务器出问题的检测会有很好的帮助。</li>\n<li>它跟LVS一样，本身仅仅就只是款负载均衡软件;单纯从效率上来讲HAProxy 更会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。</li>\n<li>HAProxy可以对MySQL读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，不过在后端的MySQ slaves数量超过10台时性能不如LVS,所以更推荐LVS+Keepalived。</li>\n<li>能对请求的url和header中的信息做匹配，有比Ivs有更好的7层实现<h2 id=\"HAProxy-Nginx负载均衡安装\"><a href=\"#HAProxy-Nginx负载均衡安装\" class=\"headerlink\" title=\"HAProxy+Nginx负载均衡安装\"></a>HAProxy+Nginx负载均衡安装</h2><h3 id=\"HAProxy安装\"><a href=\"#HAProxy安装\" class=\"headerlink\" title=\"HAProxy安装\"></a>HAProxy安装</h3></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">HAProxy</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">Nginx1</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.42</td>\n</tr>\n<tr>\n<td align=\"center\">Nginx2</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.43</td>\n</tr>\n</tbody></table>\n<h4 id=\"准备lua环境\"><a href=\"#准备lua环境\" class=\"headerlink\" title=\"准备lua环境\"></a>准备lua环境</h4><p>由于CentOS7 之前版本自带的lua版本比较低并不符合HAProxy要求的lua最低版本(5.3)的要求，因此需要编译安装较新版本的lua环境<br>参考<a href=\"http://www.lua.org/\">lua官方网站</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@haproxy ~]# lua -v</span><br><span class=\"line\"><span class=\"title class_\">Lua</span> <span class=\"number\">5.1</span><span class=\"number\">.4</span>  <span class=\"title class_\">Copyright</span> (C) <span class=\"number\">1994</span>-<span class=\"number\">2008</span> <span class=\"title class_\">Lua</span>.<span class=\"property\">org</span>, <span class=\"variable constant_\">PUC</span>-<span class=\"title class_\">Rio</span></span><br><span class=\"line\">[root@haproxy ~]# yum -y install gcc readline-devel </span><br><span class=\"line\">[root@haproxy ~]# cd /usr/local/src</span><br><span class=\"line\">[root@haproxy src]# wget <span class=\"attr\">http</span>:<span class=\"comment\">//www.lua.org/ftp/lua-5.4.2.tar.gz</span></span><br><span class=\"line\">[root@haproxy src]# tar -zxvf lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> </span><br><span class=\"line\">[root@haproxy src]# cd lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>/</span><br><span class=\"line\">[root@haproxy lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>]# make linux test</span><br><span class=\"line\">[root@haproxy lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>]# src/lua -v</span><br><span class=\"line\"><span class=\"title class_\">Lua</span> <span class=\"number\">5.4</span><span class=\"number\">.2</span>  <span class=\"title class_\">Copyright</span> (C) <span class=\"number\">1994</span>-<span class=\"number\">2020</span> <span class=\"title class_\">Lua</span>.<span class=\"property\">org</span>, <span class=\"variable constant_\">PUC</span>-<span class=\"title class_\">Rio</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"源码安装HAProxy\"><a href=\"#源码安装HAProxy\" class=\"headerlink\" title=\"源码安装HAProxy\"></a>源码安装HAProxy</h4><p>参考<a href=\"https://www.haproxy.com/\">HAProxy官网</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@haproxy ~]# yum -y install gcc openssl-devel pcre-devel systemd-devel</span><br><span class=\"line\">[root@haproxy ~]# ls</span><br><span class=\"line\">haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@haproxy ~]# tar -zxvf haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@haproxy ~]# cd /usr/local/haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>/</span><br><span class=\"line\">[root@haproxy haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# make  <span class=\"variable constant_\">ARCH</span>=x86_64 <span class=\"variable constant_\">TARGET</span>=linux-glibc  <span class=\"variable constant_\">USE_PCRE</span>=<span class=\"number\">1</span> <span class=\"variable constant_\">USE_OPENSSL</span>=<span class=\"number\">1</span> <span class=\"variable constant_\">USE_ZLIB</span>=<span class=\"number\">1</span>  <span class=\"variable constant_\">USE_SYSTEMD</span>=<span class=\"number\">1</span>  <span class=\"variable constant_\">USE_LUA</span>=<span class=\"number\">1</span> <span class=\"variable constant_\">LUA_INC</span>=<span class=\"regexp\">/usr/</span>local/src/lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>/src/  <span class=\"variable constant_\">LUA_LIB</span>=<span class=\"regexp\">/usr/</span>local/src/lua-<span class=\"number\">5.4</span><span class=\"number\">.2</span>/src/ </span><br><span class=\"line\">[root@haproxy haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# make install <span class=\"variable constant_\">PREFIX</span>=<span class=\"regexp\">/usr/</span>local/haproxy</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><p>[root@haproxy haproxy-2.2.6]# mkdir /etc/haproxy<br>[root@haproxy haproxy-2.2.6]# vim /etc/haproxy/haproxy.cfg</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">global</span></span><br><span class=\"line\">     log <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> local2 info</span><br><span class=\"line\">     chroot /usr/local/haproxy</span><br><span class=\"line\">     user haproxy</span><br><span class=\"line\">     group haproxy</span><br><span class=\"line\">     daemon           ## 守护进程模式    可以使用非守护默认</span><br><span class=\"line\">     maxconn <span class=\"number\">4000</span>     ## 最大的连接数</span><br><span class=\"line\"></span><br><span class=\"line\">defaults              ## 默认配置</span><br><span class=\"line\">     log <span class=\"variable language_\">global</span>       ## 应用全局部分的日志配置</span><br><span class=\"line\">     mode http        ## 模式为http</span><br><span class=\"line\">     option httplog</span><br><span class=\"line\">     option dontlognull</span><br><span class=\"line\">     timeout connect <span class=\"number\">5000</span>     ## 连接超时时间</span><br><span class=\"line\">     timeout client <span class=\"number\">50000</span></span><br><span class=\"line\">     timeout server <span class=\"number\">50000</span>     ## 客户端和服务器超时时间</span><br><span class=\"line\"></span><br><span class=\"line\">frontend http_front</span><br><span class=\"line\">     bind *:<span class=\"number\">80</span></span><br><span class=\"line\">     stats uri /haproxy-status</span><br><span class=\"line\">     stats auth    <span class=\"attr\">jjh</span>:<span class=\"number\">123456</span></span><br><span class=\"line\">     default_backend http_back</span><br><span class=\"line\"></span><br><span class=\"line\">backend http_back</span><br><span class=\"line\">     balance roundrobin</span><br><span class=\"line\">     option httpchk <span class=\"variable constant_\">GET</span> /index.<span class=\"property\">html</span></span><br><span class=\"line\">     option forwardfor header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span></span><br><span class=\"line\">     server nginx1 <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span>:<span class=\"number\">80</span> check inter <span class=\"number\">2000</span> rise <span class=\"number\">3</span> fall <span class=\"number\">3</span> weight <span class=\"number\">30</span>   ## 服务器节点的地址、名称、端口 、检查间隔时间<span class=\"number\">3000</span>毫秒、健康检查次数<span class=\"number\">2</span>次认为失败</span><br><span class=\"line\">     server nginx2 <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span>:<span class=\"number\">80</span> check inter <span class=\"number\">2000</span> rise <span class=\"number\">3</span> fall <span class=\"number\">3</span> weight <span class=\"number\">30</span> </span><br></pre></td></tr></table></figure>\n<h4 id=\"启动-HAProxy\"><a href=\"#启动-HAProxy\" class=\"headerlink\" title=\"启动 HAProxy\"></a>启动 HAProxy</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@haproxy1 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# cp haproxy /usr/sbin/</span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# useradd -r haproxy</span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# cp ./examples/haproxy.<span class=\"property\">init</span> /etc/init.<span class=\"property\">d</span>/haproxy</span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# chmod <span class=\"number\">755</span> /etc/init.<span class=\"property\">d</span>/haproxy </span><br><span class=\"line\">[root@haproxy2 haproxy-<span class=\"number\">2.2</span><span class=\"number\">.6</span>]# /etc/init.<span class=\"property\">d</span>/haproxy start</span><br><span class=\"line\"><span class=\"title class_\">Reloading</span> <span class=\"attr\">systemd</span>:                                         [  <span class=\"variable constant_\">OK</span>  ]</span><br><span class=\"line\"><span class=\"title class_\">Starting</span> haproxy (via systemctl):                          [  <span class=\"variable constant_\">OK</span>  ]   </span><br></pre></td></tr></table></figure>\n<p>访问 <a href=\"http://localhost/haproxy-status\">http://localhost/haproxy-status</a><br>用户名/密码（haproxy.cfg配置文件）   jjh/123456<br><img src=\"https://pic.downk.cc/item/5fe95d1b3ffa7d37b36af6f5.jpg\"></p>\n<h3 id=\"Nginx安装\"><a href=\"#Nginx安装\" class=\"headerlink\" title=\"Nginx安装\"></a>Nginx安装</h3><p>参考<a href=\"https://nginx.com/\">Nginx官方网站</a><br>点击<a href=\"https://nginx.org/\">Nginx下载</a></p>\n<h4 id=\"依赖包安装\"><a href=\"#依赖包安装\" class=\"headerlink\" title=\"依赖包安装\"></a>依赖包安装</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br></pre></td></tr></table></figure>\n<h4 id=\"源码安装Nginx\"><a href=\"#源码安装Nginx\" class=\"headerlink\" title=\"源码安装Nginx\"></a>源码安装Nginx</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx ~]# ls</span><br><span class=\"line\">nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@nginx ~]# tar -zxvf nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@nginx ~]# useradd -M -s /sbin/nologin nginx</span><br><span class=\"line\">[root@nginx1 ~]# cd /usr/local/nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>/</span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ./configure --prefix=<span class=\"regexp\">/usr/</span>local/nginx --user=nginx --group=nginx --<span class=\"keyword\">with</span>-http_stub_status_module &amp;&amp; make &amp;&amp; make install</span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# echo <span class=\"string\">&quot;shuaige/liangzai(nginx内容不同以作区分)&quot;</span> &gt; <span class=\"regexp\">/usr/</span>local/nginx/html/index.<span class=\"property\">html</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Nginx-启动\"><a href=\"#Nginx-启动\" class=\"headerlink\" title=\"Nginx 启动\"></a>Nginx 启动</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# nginx -t</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: the configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> syntax is ok</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> test is successful</span><br></pre></td></tr></table></figure>\n<h4 id=\"重启报错及解决方法\"><a href=\"#重启报错及解决方法\" class=\"headerlink\" title=\"重启报错及解决方法\"></a>重启报错及解决方法</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# nginx -s reload</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: [error] invalid <span class=\"variable constant_\">PID</span> number <span class=\"string\">&quot;&quot;</span> <span class=\"keyword\">in</span> <span class=\"string\">&quot;/usr/local/nginx/logs/nginx.pid&quot;</span></span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span></span><br><span class=\"line\">[root@nginx1 nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# nginx -s reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# curl <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\">shuaige</span><br><span class=\"line\">[root@jjh ~]# curl <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\">liangzai</span><br></pre></td></tr></table></figure>\n<p>可以看到初步搭建成功</p>\n"},{"title":"MySQL增量备份与恢复","date":"2021-01-16T16:00:00.000Z","updated":"2022-11-21T15:11:23.394Z","description":null,"cover":"https://pic.imgdb.cn/item/61b5b6892ab3f51d91841eef.jpg","_content":"##  MySQL增量备份概念\n使用mysqldump进行完全备份，备份的数据中有重复数据，备份时间与恢复时间长。而增量备份就是备份自上一次备份之后增加或改变的文件或内容。\n###  增量备份的特点\n* 没有重复数据，备份量不大，时间短\n* 恢复麻烦\n需要上次完全备份及完全备份之后所有的增量备份才能恢复，而且要对所有增量备份进行逐个反推恢复\n\nMySQL没有提供直接的增量备份办法，可以通过MySQL提供的二进制日志(binary logs)间接实现增量备份。\n###  MySQL二进制日志对备份的意义\n* 二进制日志保存了所有更新或者可能更新数据库的操作\n* 二进制日志在启动 MySQL服务器后开始记录，并在文件达到max_binlog_size 所设置的大小或者接收到 flush logs 命令后重新创建新的日志文件\n* 只需定时执行 flush logs 方法重新创建新的日志，生成二进制文件序列，并及时把这些日志保存到安全的地方就完成了一个时间段的增量备份\n\n要进行MySQL的增量备份，首先要开启二进制日志功能，开启MySQl的二进制日志功能。 \n方法一：MySQL的配置文件的 [mysqld] 项中加入log-bin=文件存放路径/文件前缀，如 log-bin=mysql-bin 然后重启 mysqld 服务。默认此配置存在。\n方法二：使用 mysqld--log-bin=文件存放路径/文件前缀，重启 mysqld 服务\n###  增量恢复的方法\n* 一般的恢复：备份的二进制日志内容全部恢复\n格式：mysqlbinlog [--no-defaults] 增量备份文件 | mysql -u 用户名 -p 密码\n* 基于时间点的恢复：便于跳过某个发生错误的时间点实现数据恢复\n格式：\n从日志开头截止到某个时间点的恢复：\nmysqlbinlog [--no-defaults] --stop-datetime='年-月-日 小时:分钟:秒' 二进制日志 | mysq -u 用户名 -p 密码\n从某个时间点到日志结尾的恢复：\nmysqlbinlog [--no-defaults] --start-datetime='年-月-日 小时:分钟:秒' 二进制日志 | mysql -u 用户名 -p 密码\n从某个时间点到某个时间点的恢复：\nmysqlbinlog [--no-defaults] --start-datetime='年-月-日 小时:分钟:秒' --stop-datetime='年-月-日 小时:分钟:秒' 二进制日志 | mysql -u 用户名 -p 密码\n* 基于位置的恢复：可能在同一时间点既有错误的操作也有正确的操作，基于位置进行恢复更加精准\n格式：\n mysqlbinlog-stop-position='操作id' 二进制日志 | mysql -u 用户名 -p 密码\n mysqlbinlog-start-position='操作id' 二进制日志 | mysql -u 用户名 -p 密码\n###  举个栗子\n```javascript\n[root@mysql ~]# /etc/init.d/mysqld start\nStarting MySQL. SUCCESS! \n[root@mysql ~]# mysql -u root -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 8\nServer version: 8.0.22 Source distribution\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> \n```\n####  中文无法输入问题\n这里死活打不出中文，但是命令行是可以的，问题定位：\n```javascript\n[root@mysql bin]# vim /etc/my.cnf\n[client]\n···\n#default-character-set=utf8\n...\n[mysqld]\n...\n#character-set-server=utf8\n···\n```\n这俩要注释掉，重启后可以输入中文，尚不清楚原因是啥。。。\n```javascript\nmysql> mysql> create database client;\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> mysql> use client;\nDatabase changed\nmysql> create table user_info(身份证 char(20)not null,姓名 char(20)not null,性别 char(4),用户ID char(10) not null);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> insert into user_info values('001','靓仔','男','01');\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> insert into user_info values('002','帅哥','男','02');\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> insert into user_info values('003','妹子','女','03');\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> select * from user_info;\n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n3 rows in set (0.00 sec)\n```\n#### 先进行一次完全备份\n```javascript\n[root@mysql ~]# mkdir back\n[root@mysql ~]# mysqldump -uroot -p client user_info > back/client_user_info-$(date +%F).sql\nEnter password: \n[root@mysql ~]# mysqldump -uroot -p client > back/client-$(date +%F).sql\nEnter password: \n[root@mysql ~]# ls back/\nclient-2021-01-17.sql  client_user_info-2021-01-17.sql\n```\n#### 进行一次日志回滚，生成新的二进制日志\n```javascript\nmysql> show master logs;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000001 |       156 | No        |\n| binlog.000002 |       847 | No        |\n| binlog.000003 |       360 | No        |\n| binlog.000004 |       179 | No        |\n| binlog.000005 |       767 | No        |\n| binlog.000006 |       156 | No        |\n| binlog.000007 |      1370 | No        |\n+---------------+-----------+-----------+\n7 rows in set (0.00 sec)\n\nmysql> flush logs;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> show master logs;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000001 |       156 | No        |\n| binlog.000002 |       847 | No        |\n| binlog.000003 |       360 | No        |\n| binlog.000004 |       179 | No        |\n| binlog.000005 |       767 | No        |\n| binlog.000006 |       156 | No        |\n| binlog.000007 |      1414 | No        |\n| binlog.000008 |       156 | No        |\n+---------------+-----------+-----------+\n8 rows in set (0.00 sec)\n```\n#### 继续录入新的数据\n```javascript\nmysql> use client;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> insert into user_info values('004','男票','女','04');\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> insert into user_info values('005','女票','男','05');\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> select * from user_info;\n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n5 rows in set (0.00 sec)\n```\n#### 进行增量备份\n```javascript\nmysql> flush logs;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> show master logs;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000001 |       156 | No        |\n| binlog.000002 |       847 | No        |\n| binlog.000003 |       360 | No        |\n| binlog.000004 |       179 | No        |\n| binlog.000005 |       767 | No        |\n| binlog.000006 |       156 | No        |\n| binlog.000007 |      1414 | No        |\n| binlog.000008 |       818 | No        |\n| binlog.000009 |       156 | No        |\n+---------------+-----------+-----------+\n9 rows in set (0.00 sec)\n\nmysql> mysql> show binlog events in 'binlog.000009';\n# 查看新操作的日志记录\n```\n#### 模拟删除误操作\n```javascript\n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\nmysql> drop table client.user_info;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> select * from user_info;\nERROR 1146 (42S02): Table 'client.user_info' doesn't exist\n```\n####  恢复完全备份\n```javascript\n[root@mysql ~]# mysql -uroot -p client < back/client_user_info-2021-01-17.sql \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n```\n####  恢复增量备份\n```javascript\n[root@mysql ~]# mysqlbinlog /data/mysql/binlog.000008 | mysql -uroot -p \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n```\n9是备份后的，8才是真正备份的操作，我说咋没恢复过来。。。\n#####  基于时间点的增量备份操作\n```javascript\n[root@mysql ~]# mysql -uroot -p -e 'drop table client.user_info;'\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \nERROR 1146 (42S02) at line 1: Table 'client.user_info' doesn't exist\n[root@mysql ~]# mysql -uroot -p client < back/client_user_info-2021-01-17.sql \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n[root@mysql ~]# mysqlbinlog --no-defaults /data/mysql/binlog.000008 \n# 查看日志操作记录\n```\n######  仅恢复男票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --stop-datetime='2021-01-17 15:59:43' /data/mysql/binlog.000008|mysql -uroot -p\n\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n+-----------+--------+--------+----------+\n```\n######  仅恢复女票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --start-datetime='2021-01-17 15:59:43 ' /data/mysql/binlog.000008|mysql -uroot -p\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n```\n#####  基于位置的增量备份操作\n```javascript\n[root@mysql ~]# mysql -uroot -p -e 'drop table client.user_info;'\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \nERROR 1146 (42S02) at line 1: Table 'client.user_info' doesn't exist\n[root@mysql ~]# mysql -uroot -p client < back/client_user_info-2021-01-17.sql \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n```\n######  仅恢复男票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --stop-position='465' /data/mysql/binlog.000008|mysql -uroot -p\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n+-----------+--------+--------+----------+\n```\n######  仅恢复女票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --start-position='434' /data/mysql/binlog.000008|mysql -uroot -p\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n```\n未完待续。。。\n","source":"_posts/MySQL增量备份与恢复.md","raw":"---\ntitle: MySQL增量备份与恢复\ndate: 2021-1-17\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/61b5b6892ab3f51d91841eef.jpg\ntag:\n  - MySQL\ncategories:\n  - 数据库\n---\n##  MySQL增量备份概念\n使用mysqldump进行完全备份，备份的数据中有重复数据，备份时间与恢复时间长。而增量备份就是备份自上一次备份之后增加或改变的文件或内容。\n###  增量备份的特点\n* 没有重复数据，备份量不大，时间短\n* 恢复麻烦\n需要上次完全备份及完全备份之后所有的增量备份才能恢复，而且要对所有增量备份进行逐个反推恢复\n\nMySQL没有提供直接的增量备份办法，可以通过MySQL提供的二进制日志(binary logs)间接实现增量备份。\n###  MySQL二进制日志对备份的意义\n* 二进制日志保存了所有更新或者可能更新数据库的操作\n* 二进制日志在启动 MySQL服务器后开始记录，并在文件达到max_binlog_size 所设置的大小或者接收到 flush logs 命令后重新创建新的日志文件\n* 只需定时执行 flush logs 方法重新创建新的日志，生成二进制文件序列，并及时把这些日志保存到安全的地方就完成了一个时间段的增量备份\n\n要进行MySQL的增量备份，首先要开启二进制日志功能，开启MySQl的二进制日志功能。 \n方法一：MySQL的配置文件的 [mysqld] 项中加入log-bin=文件存放路径/文件前缀，如 log-bin=mysql-bin 然后重启 mysqld 服务。默认此配置存在。\n方法二：使用 mysqld--log-bin=文件存放路径/文件前缀，重启 mysqld 服务\n###  增量恢复的方法\n* 一般的恢复：备份的二进制日志内容全部恢复\n格式：mysqlbinlog [--no-defaults] 增量备份文件 | mysql -u 用户名 -p 密码\n* 基于时间点的恢复：便于跳过某个发生错误的时间点实现数据恢复\n格式：\n从日志开头截止到某个时间点的恢复：\nmysqlbinlog [--no-defaults] --stop-datetime='年-月-日 小时:分钟:秒' 二进制日志 | mysq -u 用户名 -p 密码\n从某个时间点到日志结尾的恢复：\nmysqlbinlog [--no-defaults] --start-datetime='年-月-日 小时:分钟:秒' 二进制日志 | mysql -u 用户名 -p 密码\n从某个时间点到某个时间点的恢复：\nmysqlbinlog [--no-defaults] --start-datetime='年-月-日 小时:分钟:秒' --stop-datetime='年-月-日 小时:分钟:秒' 二进制日志 | mysql -u 用户名 -p 密码\n* 基于位置的恢复：可能在同一时间点既有错误的操作也有正确的操作，基于位置进行恢复更加精准\n格式：\n mysqlbinlog-stop-position='操作id' 二进制日志 | mysql -u 用户名 -p 密码\n mysqlbinlog-start-position='操作id' 二进制日志 | mysql -u 用户名 -p 密码\n###  举个栗子\n```javascript\n[root@mysql ~]# /etc/init.d/mysqld start\nStarting MySQL. SUCCESS! \n[root@mysql ~]# mysql -u root -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 8\nServer version: 8.0.22 Source distribution\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> \n```\n####  中文无法输入问题\n这里死活打不出中文，但是命令行是可以的，问题定位：\n```javascript\n[root@mysql bin]# vim /etc/my.cnf\n[client]\n···\n#default-character-set=utf8\n...\n[mysqld]\n...\n#character-set-server=utf8\n···\n```\n这俩要注释掉，重启后可以输入中文，尚不清楚原因是啥。。。\n```javascript\nmysql> mysql> create database client;\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> mysql> use client;\nDatabase changed\nmysql> create table user_info(身份证 char(20)not null,姓名 char(20)not null,性别 char(4),用户ID char(10) not null);\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> insert into user_info values('001','靓仔','男','01');\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> insert into user_info values('002','帅哥','男','02');\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> insert into user_info values('003','妹子','女','03');\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> select * from user_info;\n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n3 rows in set (0.00 sec)\n```\n#### 先进行一次完全备份\n```javascript\n[root@mysql ~]# mkdir back\n[root@mysql ~]# mysqldump -uroot -p client user_info > back/client_user_info-$(date +%F).sql\nEnter password: \n[root@mysql ~]# mysqldump -uroot -p client > back/client-$(date +%F).sql\nEnter password: \n[root@mysql ~]# ls back/\nclient-2021-01-17.sql  client_user_info-2021-01-17.sql\n```\n#### 进行一次日志回滚，生成新的二进制日志\n```javascript\nmysql> show master logs;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000001 |       156 | No        |\n| binlog.000002 |       847 | No        |\n| binlog.000003 |       360 | No        |\n| binlog.000004 |       179 | No        |\n| binlog.000005 |       767 | No        |\n| binlog.000006 |       156 | No        |\n| binlog.000007 |      1370 | No        |\n+---------------+-----------+-----------+\n7 rows in set (0.00 sec)\n\nmysql> flush logs;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> show master logs;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000001 |       156 | No        |\n| binlog.000002 |       847 | No        |\n| binlog.000003 |       360 | No        |\n| binlog.000004 |       179 | No        |\n| binlog.000005 |       767 | No        |\n| binlog.000006 |       156 | No        |\n| binlog.000007 |      1414 | No        |\n| binlog.000008 |       156 | No        |\n+---------------+-----------+-----------+\n8 rows in set (0.00 sec)\n```\n#### 继续录入新的数据\n```javascript\nmysql> use client;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> insert into user_info values('004','男票','女','04');\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> insert into user_info values('005','女票','男','05');\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> select * from user_info;\n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n5 rows in set (0.00 sec)\n```\n#### 进行增量备份\n```javascript\nmysql> flush logs;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> show master logs;\n+---------------+-----------+-----------+\n| Log_name      | File_size | Encrypted |\n+---------------+-----------+-----------+\n| binlog.000001 |       156 | No        |\n| binlog.000002 |       847 | No        |\n| binlog.000003 |       360 | No        |\n| binlog.000004 |       179 | No        |\n| binlog.000005 |       767 | No        |\n| binlog.000006 |       156 | No        |\n| binlog.000007 |      1414 | No        |\n| binlog.000008 |       818 | No        |\n| binlog.000009 |       156 | No        |\n+---------------+-----------+-----------+\n9 rows in set (0.00 sec)\n\nmysql> mysql> show binlog events in 'binlog.000009';\n# 查看新操作的日志记录\n```\n#### 模拟删除误操作\n```javascript\n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\nmysql> drop table client.user_info;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> select * from user_info;\nERROR 1146 (42S02): Table 'client.user_info' doesn't exist\n```\n####  恢复完全备份\n```javascript\n[root@mysql ~]# mysql -uroot -p client < back/client_user_info-2021-01-17.sql \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n```\n####  恢复增量备份\n```javascript\n[root@mysql ~]# mysqlbinlog /data/mysql/binlog.000008 | mysql -uroot -p \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n```\n9是备份后的，8才是真正备份的操作，我说咋没恢复过来。。。\n#####  基于时间点的增量备份操作\n```javascript\n[root@mysql ~]# mysql -uroot -p -e 'drop table client.user_info;'\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \nERROR 1146 (42S02) at line 1: Table 'client.user_info' doesn't exist\n[root@mysql ~]# mysql -uroot -p client < back/client_user_info-2021-01-17.sql \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n[root@mysql ~]# mysqlbinlog --no-defaults /data/mysql/binlog.000008 \n# 查看日志操作记录\n```\n######  仅恢复男票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --stop-datetime='2021-01-17 15:59:43' /data/mysql/binlog.000008|mysql -uroot -p\n\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n+-----------+--------+--------+----------+\n```\n######  仅恢复女票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --start-datetime='2021-01-17 15:59:43 ' /data/mysql/binlog.000008|mysql -uroot -p\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n```\n#####  基于位置的增量备份操作\n```javascript\n[root@mysql ~]# mysql -uroot -p -e 'drop table client.user_info;'\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \nERROR 1146 (42S02) at line 1: Table 'client.user_info' doesn't exist\n[root@mysql ~]# mysql -uroot -p client < back/client_user_info-2021-01-17.sql \nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n+-----------+--------+--------+----------+\n```\n######  仅恢复男票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --stop-position='465' /data/mysql/binlog.000008|mysql -uroot -p\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 004       | 男票   | 女     | 04       |\n+-----------+--------+--------+----------+\n```\n######  仅恢复女票的数据\n```javascript\n[root@mysql ~]# mysqlbinlog --no-defaults --start-position='434' /data/mysql/binlog.000008|mysql -uroot -p\nEnter password: \n[root@mysql ~]# mysql -uroot -p -e 'select * from client.user_info;'\nEnter password: \n+-----------+--------+--------+----------+\n| 身份证    | 姓名   | 性别   | 用户ID   |\n+-----------+--------+--------+----------+\n| 001       | 靓仔   | 男     | 01       |\n| 002       | 帅哥   | 男     | 02       |\n| 003       | 妹子   | 女     | 03       |\n| 005       | 女票   | 男     | 05       |\n+-----------+--------+--------+----------+\n```\n未完待续。。。\n","slug":"MySQL增量备份与恢复","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf3000htobvcf083gm3","content":"<h2 id=\"MySQL增量备份概念\"><a href=\"#MySQL增量备份概念\" class=\"headerlink\" title=\"MySQL增量备份概念\"></a>MySQL增量备份概念</h2><p>使用mysqldump进行完全备份，备份的数据中有重复数据，备份时间与恢复时间长。而增量备份就是备份自上一次备份之后增加或改变的文件或内容。</p>\n<h3 id=\"增量备份的特点\"><a href=\"#增量备份的特点\" class=\"headerlink\" title=\"增量备份的特点\"></a>增量备份的特点</h3><ul>\n<li>没有重复数据，备份量不大，时间短</li>\n<li>恢复麻烦<br>需要上次完全备份及完全备份之后所有的增量备份才能恢复，而且要对所有增量备份进行逐个反推恢复</li>\n</ul>\n<p>MySQL没有提供直接的增量备份办法，可以通过MySQL提供的二进制日志(binary logs)间接实现增量备份。</p>\n<h3 id=\"MySQL二进制日志对备份的意义\"><a href=\"#MySQL二进制日志对备份的意义\" class=\"headerlink\" title=\"MySQL二进制日志对备份的意义\"></a>MySQL二进制日志对备份的意义</h3><ul>\n<li>二进制日志保存了所有更新或者可能更新数据库的操作</li>\n<li>二进制日志在启动 MySQL服务器后开始记录，并在文件达到max_binlog_size 所设置的大小或者接收到 flush logs 命令后重新创建新的日志文件</li>\n<li>只需定时执行 flush logs 方法重新创建新的日志，生成二进制文件序列，并及时把这些日志保存到安全的地方就完成了一个时间段的增量备份</li>\n</ul>\n<p>要进行MySQL的增量备份，首先要开启二进制日志功能，开启MySQl的二进制日志功能。<br>方法一：MySQL的配置文件的 [mysqld] 项中加入log-bin=文件存放路径/文件前缀，如 log-bin=mysql-bin 然后重启 mysqld 服务。默认此配置存在。<br>方法二：使用 mysqld–log-bin=文件存放路径/文件前缀，重启 mysqld 服务</p>\n<h3 id=\"增量恢复的方法\"><a href=\"#增量恢复的方法\" class=\"headerlink\" title=\"增量恢复的方法\"></a>增量恢复的方法</h3><ul>\n<li>一般的恢复：备份的二进制日志内容全部恢复<br>格式：mysqlbinlog [–no-defaults] 增量备份文件 | mysql -u 用户名 -p 密码</li>\n<li>基于时间点的恢复：便于跳过某个发生错误的时间点实现数据恢复<br>格式：<br>从日志开头截止到某个时间点的恢复：<br>mysqlbinlog [–no-defaults] –stop-datetime=’年-月-日 小时:分钟:秒’ 二进制日志 | mysq -u 用户名 -p 密码<br>从某个时间点到日志结尾的恢复：<br>mysqlbinlog [–no-defaults] –start-datetime=’年-月-日 小时:分钟:秒’ 二进制日志 | mysql -u 用户名 -p 密码<br>从某个时间点到某个时间点的恢复：<br>mysqlbinlog [–no-defaults] –start-datetime=’年-月-日 小时:分钟:秒’ –stop-datetime=’年-月-日 小时:分钟:秒’ 二进制日志 | mysql -u 用户名 -p 密码</li>\n<li>基于位置的恢复：可能在同一时间点既有错误的操作也有正确的操作，基于位置进行恢复更加精准<br>格式：<br>mysqlbinlog-stop-position=’操作id’ 二进制日志 | mysql -u 用户名 -p 密码<br>mysqlbinlog-start-position=’操作id’ 二进制日志 | mysql -u 用户名 -p 密码<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# /etc/init.<span class=\"property\">d</span>/mysqld start</span><br><span class=\"line\"><span class=\"title class_\">Starting</span> <span class=\"title class_\">MySQL</span>. <span class=\"variable constant_\">SUCCESS</span>! </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MySQL</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MySQL</span> connection id is <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">8.0</span><span class=\"number\">.22</span> <span class=\"title class_\">Source</span> distribution</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2020</span>, <span class=\"title class_\">Oracle</span> and/or its affiliates. <span class=\"title class_\">All</span> rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Oracle</span> is a registered trademark <span class=\"keyword\">of</span> <span class=\"title class_\">Oracle</span> <span class=\"title class_\">Corporation</span> and/or its</span><br><span class=\"line\">affiliates. <span class=\"title class_\">Other</span> names may be trademarks <span class=\"keyword\">of</span> their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; </span><br></pre></td></tr></table></figure>\n<h4 id=\"中文无法输入问题\"><a href=\"#中文无法输入问题\" class=\"headerlink\" title=\"中文无法输入问题\"></a>中文无法输入问题</h4>这里死活打不出中文，但是命令行是可以的，问题定位：<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql bin]# vim /etc/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">···</span><br><span class=\"line\">#<span class=\"keyword\">default</span>-character-set=utf8</span><br><span class=\"line\">...</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">...</span><br><span class=\"line\">#character-set-server=utf8</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n这俩要注释掉，重启后可以输入中文，尚不清楚原因是啥。。。<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; mysql&gt; create database client;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; mysql&gt; use client;</span><br><span class=\"line\"><span class=\"title class_\">Database</span> changed</span><br><span class=\"line\">mysql&gt; create table <span class=\"title function_\">user_info</span>(身份证 <span class=\"title function_\">char</span>(<span class=\"number\">20</span>)not <span class=\"literal\">null</span>,姓名 <span class=\"title function_\">char</span>(<span class=\"number\">20</span>)not <span class=\"literal\">null</span>,性别 <span class=\"title function_\">char</span>(<span class=\"number\">4</span>),用户<span class=\"variable constant_\">ID</span> <span class=\"title function_\">char</span>(<span class=\"number\">10</span>) not <span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;001&#x27;</span>,<span class=\"string\">&#x27;靓仔&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"string\">&#x27;01&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;002&#x27;</span>,<span class=\"string\">&#x27;帅哥&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"string\">&#x27;02&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;003&#x27;</span>,<span class=\"string\">&#x27;妹子&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"string\">&#x27;03&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user_info;</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\"><span class=\"number\">3</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"先进行一次完全备份\"><a href=\"#先进行一次完全备份\" class=\"headerlink\" title=\"先进行一次完全备份\"></a>先进行一次完全备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mkdir back</span><br><span class=\"line\">[root@mysql ~]# mysqldump -uroot -p client user_info &gt; back/client_user_info-$(date +%F).<span class=\"property\">sql</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysqldump -uroot -p client &gt; back/client-$(date +%F).<span class=\"property\">sql</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# ls back/</span><br><span class=\"line\">client-<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">17.</span>sql  client_user_info-<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">17.</span>sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"进行一次日志回滚，生成新的二进制日志\"><a href=\"#进行一次日志回滚，生成新的二进制日志\" class=\"headerlink\" title=\"进行一次日志回滚，生成新的二进制日志\"></a>进行一次日志回滚，生成新的二进制日志</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master logs;</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"title class_\">Log</span>_name      | <span class=\"title class_\">File</span>_size | <span class=\"title class_\">Encrypted</span> |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| binlog<span class=\"number\">.000001</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000002</span> |       <span class=\"number\">847</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000003</span> |       <span class=\"number\">360</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000004</span> |       <span class=\"number\">179</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000005</span> |       <span class=\"number\">767</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000006</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000007</span> |      <span class=\"number\">1370</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">7</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; flush logs;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show master logs;</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"title class_\">Log</span>_name      | <span class=\"title class_\">File</span>_size | <span class=\"title class_\">Encrypted</span> |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| binlog<span class=\"number\">.000001</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000002</span> |       <span class=\"number\">847</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000003</span> |       <span class=\"number\">360</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000004</span> |       <span class=\"number\">179</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000005</span> |       <span class=\"number\">767</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000006</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000007</span> |      <span class=\"number\">1414</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000008</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">8</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"继续录入新的数据\"><a href=\"#继续录入新的数据\" class=\"headerlink\" title=\"继续录入新的数据\"></a>继续录入新的数据</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; use client;</span><br><span class=\"line\"><span class=\"title class_\">Reading</span> table information <span class=\"keyword\">for</span> completion <span class=\"keyword\">of</span> table and column names</span><br><span class=\"line\"><span class=\"title class_\">You</span> can turn off <span class=\"variable language_\">this</span> feature to get a quicker startup <span class=\"keyword\">with</span> -A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Database</span> changed</span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;004&#x27;</span>,<span class=\"string\">&#x27;男票&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"string\">&#x27;04&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;005&#x27;</span>,<span class=\"string\">&#x27;女票&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"string\">&#x27;05&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user_info;</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\"><span class=\"number\">5</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"进行增量备份\"><a href=\"#进行增量备份\" class=\"headerlink\" title=\"进行增量备份\"></a>进行增量备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; flush logs;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show master logs;</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"title class_\">Log</span>_name      | <span class=\"title class_\">File</span>_size | <span class=\"title class_\">Encrypted</span> |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| binlog<span class=\"number\">.000001</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000002</span> |       <span class=\"number\">847</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000003</span> |       <span class=\"number\">360</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000004</span> |       <span class=\"number\">179</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000005</span> |       <span class=\"number\">767</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000006</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000007</span> |      <span class=\"number\">1414</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000008</span> |       <span class=\"number\">818</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000009</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">9</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; mysql&gt; show binlog events <span class=\"keyword\">in</span> <span class=\"string\">&#x27;binlog.000009&#x27;</span>;</span><br><span class=\"line\"># 查看新操作的日志记录</span><br></pre></td></tr></table></figure>\n<h4 id=\"模拟删除误操作\"><a href=\"#模拟删除误操作\" class=\"headerlink\" title=\"模拟删除误操作\"></a>模拟删除误操作</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">mysql&gt; drop table client.<span class=\"property\">user_info</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user_info;</span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02): <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;client.user_info&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"恢复完全备份\"><a href=\"#恢复完全备份\" class=\"headerlink\" title=\"恢复完全备份\"></a>恢复完全备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p client &lt; back/client_user_info-<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">17.</span>sql </span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h4 id=\"恢复增量备份\"><a href=\"#恢复增量备份\" class=\"headerlink\" title=\"恢复增量备份\"></a>恢复增量备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog /data/mysql/binlog<span class=\"number\">.000008</span> | mysql -uroot -p </span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n9是备份后的，8才是真正备份的操作，我说咋没恢复过来。。。<h5 id=\"基于时间点的增量备份操作\"><a href=\"#基于时间点的增量备份操作\" class=\"headerlink\" title=\"基于时间点的增量备份操作\"></a>基于时间点的增量备份操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;drop table client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02) at line <span class=\"number\">1</span>: <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;client.user_info&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p client &lt; back/client_user_info-2021-01-17.sql </span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p -e &#x27;</span>select * <span class=\"keyword\">from</span> client.<span class=\"property\">user_info</span>;<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 身份证    | 姓名   | 性别   | 用户ID   |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 001       | 靓仔   | 男     | 01       |</span></span><br><span class=\"line\"><span class=\"string\">| 002       | 帅哥   | 男     | 02       |</span></span><br><span class=\"line\"><span class=\"string\">| 003       | 妹子   | 女     | 03       |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysqlbinlog --no-defaults /data/mysql/binlog.000008 </span></span><br><span class=\"line\"><span class=\"string\"># 查看日志操作记录</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复男票的数据\"><a href=\"#仅恢复男票的数据\" class=\"headerlink\" title=\"仅恢复男票的数据\"></a>仅恢复男票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --stop-datetime=<span class=\"string\">&#x27;2021-01-17 15:59:43&#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复女票的数据\"><a href=\"#仅恢复女票的数据\" class=\"headerlink\" title=\"仅恢复女票的数据\"></a>仅恢复女票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --start-datetime=<span class=\"string\">&#x27;2021-01-17 15:59:43 &#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h5 id=\"基于位置的增量备份操作\"><a href=\"#基于位置的增量备份操作\" class=\"headerlink\" title=\"基于位置的增量备份操作\"></a>基于位置的增量备份操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;drop table client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02) at line <span class=\"number\">1</span>: <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;client.user_info&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p client &lt; back/client_user_info-2021-01-17.sql </span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p -e &#x27;</span>select * <span class=\"keyword\">from</span> client.<span class=\"property\">user_info</span>;<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 身份证    | 姓名   | 性别   | 用户ID   |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 001       | 靓仔   | 男     | 01       |</span></span><br><span class=\"line\"><span class=\"string\">| 002       | 帅哥   | 男     | 02       |</span></span><br><span class=\"line\"><span class=\"string\">| 003       | 妹子   | 女     | 03       |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复男票的数据-1\"><a href=\"#仅恢复男票的数据-1\" class=\"headerlink\" title=\"仅恢复男票的数据\"></a>仅恢复男票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --stop-position=<span class=\"string\">&#x27;465&#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复女票的数据-1\"><a href=\"#仅恢复女票的数据-1\" class=\"headerlink\" title=\"仅恢复女票的数据\"></a>仅恢复女票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --start-position=<span class=\"string\">&#x27;434&#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n未完待续。。。</li>\n</ul>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"MySQL增量备份概念\"><a href=\"#MySQL增量备份概念\" class=\"headerlink\" title=\"MySQL增量备份概念\"></a>MySQL增量备份概念</h2><p>使用mysqldump进行完全备份，备份的数据中有重复数据，备份时间与恢复时间长。而增量备份就是备份自上一次备份之后增加或改变的文件或内容。</p>\n<h3 id=\"增量备份的特点\"><a href=\"#增量备份的特点\" class=\"headerlink\" title=\"增量备份的特点\"></a>增量备份的特点</h3><ul>\n<li>没有重复数据，备份量不大，时间短</li>\n<li>恢复麻烦<br>需要上次完全备份及完全备份之后所有的增量备份才能恢复，而且要对所有增量备份进行逐个反推恢复</li>\n</ul>\n<p>MySQL没有提供直接的增量备份办法，可以通过MySQL提供的二进制日志(binary logs)间接实现增量备份。</p>\n<h3 id=\"MySQL二进制日志对备份的意义\"><a href=\"#MySQL二进制日志对备份的意义\" class=\"headerlink\" title=\"MySQL二进制日志对备份的意义\"></a>MySQL二进制日志对备份的意义</h3><ul>\n<li>二进制日志保存了所有更新或者可能更新数据库的操作</li>\n<li>二进制日志在启动 MySQL服务器后开始记录，并在文件达到max_binlog_size 所设置的大小或者接收到 flush logs 命令后重新创建新的日志文件</li>\n<li>只需定时执行 flush logs 方法重新创建新的日志，生成二进制文件序列，并及时把这些日志保存到安全的地方就完成了一个时间段的增量备份</li>\n</ul>\n<p>要进行MySQL的增量备份，首先要开启二进制日志功能，开启MySQl的二进制日志功能。<br>方法一：MySQL的配置文件的 [mysqld] 项中加入log-bin=文件存放路径/文件前缀，如 log-bin=mysql-bin 然后重启 mysqld 服务。默认此配置存在。<br>方法二：使用 mysqld–log-bin=文件存放路径/文件前缀，重启 mysqld 服务</p>\n<h3 id=\"增量恢复的方法\"><a href=\"#增量恢复的方法\" class=\"headerlink\" title=\"增量恢复的方法\"></a>增量恢复的方法</h3><ul>\n<li>一般的恢复：备份的二进制日志内容全部恢复<br>格式：mysqlbinlog [–no-defaults] 增量备份文件 | mysql -u 用户名 -p 密码</li>\n<li>基于时间点的恢复：便于跳过某个发生错误的时间点实现数据恢复<br>格式：<br>从日志开头截止到某个时间点的恢复：<br>mysqlbinlog [–no-defaults] –stop-datetime=’年-月-日 小时:分钟:秒’ 二进制日志 | mysq -u 用户名 -p 密码<br>从某个时间点到日志结尾的恢复：<br>mysqlbinlog [–no-defaults] –start-datetime=’年-月-日 小时:分钟:秒’ 二进制日志 | mysql -u 用户名 -p 密码<br>从某个时间点到某个时间点的恢复：<br>mysqlbinlog [–no-defaults] –start-datetime=’年-月-日 小时:分钟:秒’ –stop-datetime=’年-月-日 小时:分钟:秒’ 二进制日志 | mysql -u 用户名 -p 密码</li>\n<li>基于位置的恢复：可能在同一时间点既有错误的操作也有正确的操作，基于位置进行恢复更加精准<br>格式：<br>mysqlbinlog-stop-position=’操作id’ 二进制日志 | mysql -u 用户名 -p 密码<br>mysqlbinlog-start-position=’操作id’ 二进制日志 | mysql -u 用户名 -p 密码<h3 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# /etc/init.<span class=\"property\">d</span>/mysqld start</span><br><span class=\"line\"><span class=\"title class_\">Starting</span> <span class=\"title class_\">MySQL</span>. <span class=\"variable constant_\">SUCCESS</span>! </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MySQL</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MySQL</span> connection id is <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">8.0</span><span class=\"number\">.22</span> <span class=\"title class_\">Source</span> distribution</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2020</span>, <span class=\"title class_\">Oracle</span> and/or its affiliates. <span class=\"title class_\">All</span> rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Oracle</span> is a registered trademark <span class=\"keyword\">of</span> <span class=\"title class_\">Oracle</span> <span class=\"title class_\">Corporation</span> and/or its</span><br><span class=\"line\">affiliates. <span class=\"title class_\">Other</span> names may be trademarks <span class=\"keyword\">of</span> their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; </span><br></pre></td></tr></table></figure>\n<h4 id=\"中文无法输入问题\"><a href=\"#中文无法输入问题\" class=\"headerlink\" title=\"中文无法输入问题\"></a>中文无法输入问题</h4>这里死活打不出中文，但是命令行是可以的，问题定位：<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql bin]# vim /etc/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">···</span><br><span class=\"line\">#<span class=\"keyword\">default</span>-character-set=utf8</span><br><span class=\"line\">...</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">...</span><br><span class=\"line\">#character-set-server=utf8</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n这俩要注释掉，重启后可以输入中文，尚不清楚原因是啥。。。<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; mysql&gt; create database client;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; mysql&gt; use client;</span><br><span class=\"line\"><span class=\"title class_\">Database</span> changed</span><br><span class=\"line\">mysql&gt; create table <span class=\"title function_\">user_info</span>(身份证 <span class=\"title function_\">char</span>(<span class=\"number\">20</span>)not <span class=\"literal\">null</span>,姓名 <span class=\"title function_\">char</span>(<span class=\"number\">20</span>)not <span class=\"literal\">null</span>,性别 <span class=\"title function_\">char</span>(<span class=\"number\">4</span>),用户<span class=\"variable constant_\">ID</span> <span class=\"title function_\">char</span>(<span class=\"number\">10</span>) not <span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;001&#x27;</span>,<span class=\"string\">&#x27;靓仔&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"string\">&#x27;01&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;002&#x27;</span>,<span class=\"string\">&#x27;帅哥&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"string\">&#x27;02&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;003&#x27;</span>,<span class=\"string\">&#x27;妹子&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"string\">&#x27;03&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user_info;</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\"><span class=\"number\">3</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"先进行一次完全备份\"><a href=\"#先进行一次完全备份\" class=\"headerlink\" title=\"先进行一次完全备份\"></a>先进行一次完全备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mkdir back</span><br><span class=\"line\">[root@mysql ~]# mysqldump -uroot -p client user_info &gt; back/client_user_info-$(date +%F).<span class=\"property\">sql</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysqldump -uroot -p client &gt; back/client-$(date +%F).<span class=\"property\">sql</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# ls back/</span><br><span class=\"line\">client-<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">17.</span>sql  client_user_info-<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">17.</span>sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"进行一次日志回滚，生成新的二进制日志\"><a href=\"#进行一次日志回滚，生成新的二进制日志\" class=\"headerlink\" title=\"进行一次日志回滚，生成新的二进制日志\"></a>进行一次日志回滚，生成新的二进制日志</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; show master logs;</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"title class_\">Log</span>_name      | <span class=\"title class_\">File</span>_size | <span class=\"title class_\">Encrypted</span> |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| binlog<span class=\"number\">.000001</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000002</span> |       <span class=\"number\">847</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000003</span> |       <span class=\"number\">360</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000004</span> |       <span class=\"number\">179</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000005</span> |       <span class=\"number\">767</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000006</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000007</span> |      <span class=\"number\">1370</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">7</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; flush logs;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show master logs;</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"title class_\">Log</span>_name      | <span class=\"title class_\">File</span>_size | <span class=\"title class_\">Encrypted</span> |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| binlog<span class=\"number\">.000001</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000002</span> |       <span class=\"number\">847</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000003</span> |       <span class=\"number\">360</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000004</span> |       <span class=\"number\">179</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000005</span> |       <span class=\"number\">767</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000006</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000007</span> |      <span class=\"number\">1414</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000008</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">8</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"继续录入新的数据\"><a href=\"#继续录入新的数据\" class=\"headerlink\" title=\"继续录入新的数据\"></a>继续录入新的数据</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; use client;</span><br><span class=\"line\"><span class=\"title class_\">Reading</span> table information <span class=\"keyword\">for</span> completion <span class=\"keyword\">of</span> table and column names</span><br><span class=\"line\"><span class=\"title class_\">You</span> can turn off <span class=\"variable language_\">this</span> feature to get a quicker startup <span class=\"keyword\">with</span> -A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Database</span> changed</span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;004&#x27;</span>,<span class=\"string\">&#x27;男票&#x27;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"string\">&#x27;04&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user_info <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;005&#x27;</span>,<span class=\"string\">&#x27;女票&#x27;</span>,<span class=\"string\">&#x27;男&#x27;</span>,<span class=\"string\">&#x27;05&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user_info;</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\"><span class=\"number\">5</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"进行增量备份\"><a href=\"#进行增量备份\" class=\"headerlink\" title=\"进行增量备份\"></a>进行增量备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; flush logs;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show master logs;</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| <span class=\"title class_\">Log</span>_name      | <span class=\"title class_\">File</span>_size | <span class=\"title class_\">Encrypted</span> |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\">| binlog<span class=\"number\">.000001</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000002</span> |       <span class=\"number\">847</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000003</span> |       <span class=\"number\">360</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000004</span> |       <span class=\"number\">179</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000005</span> |       <span class=\"number\">767</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000006</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000007</span> |      <span class=\"number\">1414</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000008</span> |       <span class=\"number\">818</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">| binlog<span class=\"number\">.000009</span> |       <span class=\"number\">156</span> | <span class=\"title class_\">No</span>        |</span><br><span class=\"line\">+---------------+-----------+-----------+</span><br><span class=\"line\"><span class=\"number\">9</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; mysql&gt; show binlog events <span class=\"keyword\">in</span> <span class=\"string\">&#x27;binlog.000009&#x27;</span>;</span><br><span class=\"line\"># 查看新操作的日志记录</span><br></pre></td></tr></table></figure>\n<h4 id=\"模拟删除误操作\"><a href=\"#模拟删除误操作\" class=\"headerlink\" title=\"模拟删除误操作\"></a>模拟删除误操作</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">mysql&gt; drop table client.<span class=\"property\">user_info</span>;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user_info;</span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02): <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;client.user_info&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"恢复完全备份\"><a href=\"#恢复完全备份\" class=\"headerlink\" title=\"恢复完全备份\"></a>恢复完全备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p client &lt; back/client_user_info-<span class=\"number\">2021</span>-<span class=\"number\">01</span>-<span class=\"number\">17.</span>sql </span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h4 id=\"恢复增量备份\"><a href=\"#恢复增量备份\" class=\"headerlink\" title=\"恢复增量备份\"></a>恢复增量备份</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog /data/mysql/binlog<span class=\"number\">.000008</span> | mysql -uroot -p </span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n9是备份后的，8才是真正备份的操作，我说咋没恢复过来。。。<h5 id=\"基于时间点的增量备份操作\"><a href=\"#基于时间点的增量备份操作\" class=\"headerlink\" title=\"基于时间点的增量备份操作\"></a>基于时间点的增量备份操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;drop table client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02) at line <span class=\"number\">1</span>: <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;client.user_info&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p client &lt; back/client_user_info-2021-01-17.sql </span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p -e &#x27;</span>select * <span class=\"keyword\">from</span> client.<span class=\"property\">user_info</span>;<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 身份证    | 姓名   | 性别   | 用户ID   |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 001       | 靓仔   | 男     | 01       |</span></span><br><span class=\"line\"><span class=\"string\">| 002       | 帅哥   | 男     | 02       |</span></span><br><span class=\"line\"><span class=\"string\">| 003       | 妹子   | 女     | 03       |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysqlbinlog --no-defaults /data/mysql/binlog.000008 </span></span><br><span class=\"line\"><span class=\"string\"># 查看日志操作记录</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复男票的数据\"><a href=\"#仅恢复男票的数据\" class=\"headerlink\" title=\"仅恢复男票的数据\"></a>仅恢复男票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --stop-datetime=<span class=\"string\">&#x27;2021-01-17 15:59:43&#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复女票的数据\"><a href=\"#仅恢复女票的数据\" class=\"headerlink\" title=\"仅恢复女票的数据\"></a>仅恢复女票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --start-datetime=<span class=\"string\">&#x27;2021-01-17 15:59:43 &#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h5 id=\"基于位置的增量备份操作\"><a href=\"#基于位置的增量备份操作\" class=\"headerlink\" title=\"基于位置的增量备份操作\"></a>基于位置的增量备份操作</h5><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;drop table client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02) at line <span class=\"number\">1</span>: <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;client.user_info&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p client &lt; back/client_user_info-2021-01-17.sql </span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -uroot -p -e &#x27;</span>select * <span class=\"keyword\">from</span> client.<span class=\"property\">user_info</span>;<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 身份证    | 姓名   | 性别   | 用户ID   |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br><span class=\"line\"><span class=\"string\">| 001       | 靓仔   | 男     | 01       |</span></span><br><span class=\"line\"><span class=\"string\">| 002       | 帅哥   | 男     | 02       |</span></span><br><span class=\"line\"><span class=\"string\">| 003       | 妹子   | 女     | 03       |</span></span><br><span class=\"line\"><span class=\"string\">+-----------+--------+--------+----------+</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复男票的数据-1\"><a href=\"#仅恢复男票的数据-1\" class=\"headerlink\" title=\"仅恢复男票的数据\"></a>仅恢复男票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --stop-position=<span class=\"string\">&#x27;465&#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">004</span>       | 男票   | 女     | <span class=\"number\">04</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n<h6 id=\"仅恢复女票的数据-1\"><a href=\"#仅恢复女票的数据-1\" class=\"headerlink\" title=\"仅恢复女票的数据\"></a>仅恢复女票的数据</h6><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqlbinlog --no-defaults --start-position=<span class=\"string\">&#x27;434&#x27;</span> /data/mysql/binlog<span class=\"number\">.000008</span>|mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -uroot -p -e <span class=\"string\">&#x27;select * from client.user_info;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| 身份证    | 姓名   | 性别   | 用户<span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br><span class=\"line\">| <span class=\"number\">001</span>       | 靓仔   | 男     | <span class=\"number\">01</span>       |</span><br><span class=\"line\">| <span class=\"number\">002</span>       | 帅哥   | 男     | <span class=\"number\">02</span>       |</span><br><span class=\"line\">| <span class=\"number\">003</span>       | 妹子   | 女     | <span class=\"number\">03</span>       |</span><br><span class=\"line\">| <span class=\"number\">005</span>       | 女票   | 男     | <span class=\"number\">05</span>       |</span><br><span class=\"line\">+-----------+--------+--------+----------+</span><br></pre></td></tr></table></figure>\n未完待续。。。</li>\n</ul>\n"},{"title":"MySQL完全备份与恢复","date":"2021-01-11T16:00:00.000Z","updated":"2022-11-20T14:53:46.563Z","description":null,"cover":"https://img.imgdb.cn/item/5ffd6c773ffa7d37b3f157d8.jpg","_content":"## 数据库备份的分类\n* 从物理与逻辑的角度，备份可以分为物理备份和逻辑备份。\n（1）物理备份:对数据库操作系统的物理文件（如数据文件、日志文件等）的备份。\n物理备份又可分为脱机备份（冷备份）和联机备份（热备份）。\n1、冷备份:是在关闭数据库的时候进行的\n2、热备份:数据库处于运行状态，这种备份方法依赖于数据库的日志文件\n3、温备份:数据库锁定表格（不可写入但可读）的状态下进行的\n（2）逻辑备份:对数据库逻辑组件（如表等数据库对象）的备份\n* 从数据库的备份策略角度，备份可分为完全备份、差异备份和增量备份\n（1）完全备份:每次对数据进行完整的备份\n对整个数据库的备份、数据库结构和文件结构的备份，保存的是备份完成时刻的数据月异备份与增量备份的基础。\n优点:备份与恢复操作简单方便\n缺点:数据存在大量的重复；占用大量的空间；备份与恢复时间长\n（2）差异备份:备份那些自从上次完全备份之后被修改过的所有文件\n备份的时间节点是从上次完整备份起，备份数据量会越来越大。恢复数据时，只需恢复上次的完全备份与最近的一次差异备份。\n（3）增量备份:只有那些在上次完全备份或者增量备份后被修改的文件才会被备份\n以上次完整备份或上次的增量备份的时间为时间点，仅备份这之间的数据变化，因而备份的数据量小，占用空间小，备份速度快。但恢复时，需要从上一次的完整备份起到最后一次增量备份依次恢复，如中间某次的备份数据损坏，将导致数据的丢失。\n##  举个栗子\n### 安装环境\n#### 查看linux的版本\n```javascript\n[root@mysql ~]# cat /etc/redhat-release\nCentOS Linux release 7.8.2003 (Core)\n```\n#### CMake源码安装\n```javascript\n[root@mysql ~]# yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel mlocate bzip2 lrzsz ncurses-devel\n[root@mysql ~]# wget https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2.tar.gz\n[root@mysql ~]# tar -zxvf cmake-3.19.2.tar.gz -C /usr/local/\n[root@mysql ~]# cd /usr/local/cmake-3.19.2/\n[root@mysql cmake-3.19.2]# ./configure\n[root@mysql cmake-3.19.2]# gmake && make install\n[root@mysql cmake-3.19.2]# cmake --version\ncmake version 3.19.2\n\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\n```\n#### gcc升级\n```javascript\n[root@mysql ~]# yum -y install centos-release-scl devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n[root@mysql ~]# scl enable devtoolset-9 bash\n[root@mysql ~]# echo \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile\n[root@mysql ~]# source /etc/profile\n```\n#### MySQL源码安装\n```javascript\n[root@mysql ~]# yum -y remove mari*\n[root@mysql ~]# wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.22.tar.gz\n[root@mysql ~]# tar -zxvf mysql-boost-8.0.22.tar.gz -C /usr/local/\n[root@mysql ~]# cd /usr/local/mysql-8.0.22/\n[root@mysql mysql-8.0.22]# groupadd mysql\n[root@mysql mysql-8.0.22]# useradd -r -g mysql -s /sbin/nologin mysql\n[root@mysql mysql-8.0.22]# mkdir -p /usr/local/mysql\n[root@mysql mysql-8.0.22]# mkdir -p /data/mysql/\n[root@mysql mysql-8.0.22]# chown -R mysql.mysql /usr/local/mysql/\n[root@mysql mysql-8.0.22]# chown -R mysql.mysql /data/mysql/\n[root@mysql mysql-8.0.22]# chmod -R 755 /data/mysql/\n[root@mysql mysql-8.0.22]# chmod -R 755 /usr/local/mysql/\n[root@mysql mysql-8.0.22]# cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data/mysql -DSYSCONFDIR=/etc -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/usr/local/mysql-8.0.22/boost -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=ON -DWITH_INNODB_MEMCACHED=ON -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_FEDERATED_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DFORCE_INSOURCE_BUILD=1\n[root@mysql mysql-8.0.22]# make && make install\n[root@mysql mysql-8.0.22]# cd bin/\n[root@mysql bin]# ./mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql\n[root@mysql bin]# vim /etc/my.cnf\n[client]\nport=3306\nsocket=/tmp/mysql.sock\n#default-character-set=utf8\n#user=root\n#password=123456\n[mysqld]\nserver-id=1\n#skip-grant-tables\nport=3306\nuser=mysql\nmax_connections=200\nsocket=/tmp/mysql.sock\nbasedir=/usr/local/mysql\ndatadir=/data/mysql\npid-file=/data/mysql/mysql.pid\ninit-connect='SET NAMES utf8'\n#character-set-server=utf8\ndefault-storage-engine=INNODB\nlog_error=/data/mysql/mysql-error.log\nslow_query_log_file=/data/mysql/mysql-slow.log\n[mysqldump]\nquick\nmax_allowed_packet=16M\n[root@mysql bin]# echo \"PATH=/usr/local/mysql/bin:$PATH\" >> /etc/profile\n[root@mysql bin]# source /etc/profile\n[root@mysql bin]# cp /usr/local/mysql-8.0.22/support-files/mysql.server /etc/init.d/mysqld\n[root@mysql bin]# vim /etc/init.d/mysqld\n···\nbasedir=/usr/local/mysql\ndatadir=/data/mysql\n···\n[root@mysql bin]# chmod +x /etc/init.d/mysqld\n[root@mysql bin]# /etc/init.d/mysqld start\n[root@mysql bin]# mysql -u root -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 12\nServer version: 8.0.22 Source distribution\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> \n```\nMySQL初步搭建完成\n### 完全备份与恢复\n```javascript\n[root@mysql ~]# mysql -u root -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 15\nServer version: 8.0.22 Source distribution\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> create database auth;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> use auth;\nDatabase changed\nmysql> create table user(name char(10)not null,ID int(48));\nQuery OK, 0 rows affected, 1 warning (0.02 sec)\n\nmysql> insert into user values('liangzai','1');\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> select * from user;\n+----------+------+\n| name     | ID   |\n+----------+------+\n| liangzai |    1 |\n+----------+------+\n1 row in set (0.00 sec)\n```\n####  mysqldump备份\nMySQL自带的备份工具，相当方便对MySQl进行备份。通过该命令工具可以将制定的库、表或全部的库导出为SQL脚本，在需要恢复时可进行数据恢复。\n* 对单个库进行完全备份\n格式：mysqldump -u 用户名 -p [密码] [选项] [数据库名] > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mkdir backup\n[root@mysql ~]# mysqldump -uroot -p auth > backup/auth-$(date +%Y%m%d).sql\n[root@mysql ~]# echo $?\n[root@mysql ~]# ls backup/\nauth-20210112.sql\n```\n* 对多个库进行完全备份\n格式：mysqldump -u 用户名 -p [密码] [选项] --databases库名1 [库名2] > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p --databases mysql auth > backup/mysql+auth-$(date +%Y%m%d).sql\n[root@mysql ~]# ls backup/\nmysql+auth-20210112.sql\n```\n* 对所有库进行完全备份\n格式: mysqldump -u 用户名 -p [密码] [选项] --all-databases 备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p --opt --all-databases > backup/mysql_all.$(date +%Y%m%d).sql\n# 加快备份速度,当备份数据量大时使用\n[root@mysql ~]# ls backup/\nmysql_all.20210112.sql\n```\n* 对表进行完全备份\n格式: mysqldump -u 用户名 -p [密码] [选项] 数据库名 表名 > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p auth user > backup/auth_user-$(date +%Y%m%d).sql\n[root@mysql ~]# ls backup/\nauth_user-20210112.sql\n```\n* 对表结构的备份\n格式: mysqldump -u 用户名 p [密码] -d 数据名 表名 > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p -d mysql user > backup/des_mysql_user-$(date +%Y%m%d).sql\n[root@mysql ~]# ls backup/\ndes_mysql_user-20210112.sql\n```\n####  数据恢复\n#####  source命令\n执行 source 备份路径\n```javascript\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\nmysql> drop database auth;\nQuery OK, 1 row affected (0.02 sec)\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n4 rows in set (0.00 sec)\n\nmysql> source backup/auth-20210112.sql\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n```\n#####  mysql命令\nmysql -u 用户名 -p [密码] < 库备份脚本的路径\n```javascript\n[root@mysql ~]# mysql -u root -p -e 'show databases;'\nEnter password: \n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n[root@mysql ~]# mysql -u root -p -e 'drop database auth;'\nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'show databases;'\nEnter password: \n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n[root@mysql ~]# mysql -u root -p < backup/mysql_all.20210112.sql \nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'show databases;'\nEnter password: \n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n```\nmysql -u 用户名 -p [密码] 库名 <表备份脚本的路径\n```javascript\n[root@mysql ~]# mysql -u root -p -e 'drop table auth.user;'\nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'select * from auth.user;'\nEnter password: \nERROR 1146 (42S02) at line 1: Table 'auth.user' doesn't exist\n[root@mysql ~]# mysql -u root -p auth < backup/auth_user-20210112.sql \nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'select * from auth.user;'\nEnter password: \n+----------+------+\n| name     | ID   |\n+----------+------+\n| liangzai |    1 |\n+----------+------+\n```\n未完待续...\n","source":"_posts/MySQL完全备份与恢复.md","raw":"---\ntitle: MySQL完全备份与恢复\ndate: 2021-1-12\nupdated:\ndescription:\ncover: https://img.imgdb.cn/item/5ffd6c773ffa7d37b3f157d8.jpg\ntag:\n  - MySQL\ncategories:\n  - 数据库\n---\n## 数据库备份的分类\n* 从物理与逻辑的角度，备份可以分为物理备份和逻辑备份。\n（1）物理备份:对数据库操作系统的物理文件（如数据文件、日志文件等）的备份。\n物理备份又可分为脱机备份（冷备份）和联机备份（热备份）。\n1、冷备份:是在关闭数据库的时候进行的\n2、热备份:数据库处于运行状态，这种备份方法依赖于数据库的日志文件\n3、温备份:数据库锁定表格（不可写入但可读）的状态下进行的\n（2）逻辑备份:对数据库逻辑组件（如表等数据库对象）的备份\n* 从数据库的备份策略角度，备份可分为完全备份、差异备份和增量备份\n（1）完全备份:每次对数据进行完整的备份\n对整个数据库的备份、数据库结构和文件结构的备份，保存的是备份完成时刻的数据月异备份与增量备份的基础。\n优点:备份与恢复操作简单方便\n缺点:数据存在大量的重复；占用大量的空间；备份与恢复时间长\n（2）差异备份:备份那些自从上次完全备份之后被修改过的所有文件\n备份的时间节点是从上次完整备份起，备份数据量会越来越大。恢复数据时，只需恢复上次的完全备份与最近的一次差异备份。\n（3）增量备份:只有那些在上次完全备份或者增量备份后被修改的文件才会被备份\n以上次完整备份或上次的增量备份的时间为时间点，仅备份这之间的数据变化，因而备份的数据量小，占用空间小，备份速度快。但恢复时，需要从上一次的完整备份起到最后一次增量备份依次恢复，如中间某次的备份数据损坏，将导致数据的丢失。\n##  举个栗子\n### 安装环境\n#### 查看linux的版本\n```javascript\n[root@mysql ~]# cat /etc/redhat-release\nCentOS Linux release 7.8.2003 (Core)\n```\n#### CMake源码安装\n```javascript\n[root@mysql ~]# yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel mlocate bzip2 lrzsz ncurses-devel\n[root@mysql ~]# wget https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2.tar.gz\n[root@mysql ~]# tar -zxvf cmake-3.19.2.tar.gz -C /usr/local/\n[root@mysql ~]# cd /usr/local/cmake-3.19.2/\n[root@mysql cmake-3.19.2]# ./configure\n[root@mysql cmake-3.19.2]# gmake && make install\n[root@mysql cmake-3.19.2]# cmake --version\ncmake version 3.19.2\n\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\n```\n#### gcc升级\n```javascript\n[root@mysql ~]# yum -y install centos-release-scl devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n[root@mysql ~]# scl enable devtoolset-9 bash\n[root@mysql ~]# echo \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile\n[root@mysql ~]# source /etc/profile\n```\n#### MySQL源码安装\n```javascript\n[root@mysql ~]# yum -y remove mari*\n[root@mysql ~]# wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.22.tar.gz\n[root@mysql ~]# tar -zxvf mysql-boost-8.0.22.tar.gz -C /usr/local/\n[root@mysql ~]# cd /usr/local/mysql-8.0.22/\n[root@mysql mysql-8.0.22]# groupadd mysql\n[root@mysql mysql-8.0.22]# useradd -r -g mysql -s /sbin/nologin mysql\n[root@mysql mysql-8.0.22]# mkdir -p /usr/local/mysql\n[root@mysql mysql-8.0.22]# mkdir -p /data/mysql/\n[root@mysql mysql-8.0.22]# chown -R mysql.mysql /usr/local/mysql/\n[root@mysql mysql-8.0.22]# chown -R mysql.mysql /data/mysql/\n[root@mysql mysql-8.0.22]# chmod -R 755 /data/mysql/\n[root@mysql mysql-8.0.22]# chmod -R 755 /usr/local/mysql/\n[root@mysql mysql-8.0.22]# cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data/mysql -DSYSCONFDIR=/etc -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/usr/local/mysql-8.0.22/boost -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DENABLED_LOCAL_INFILE=ON -DWITH_INNODB_MEMCACHED=ON -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_FEDERATED_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DFORCE_INSOURCE_BUILD=1\n[root@mysql mysql-8.0.22]# make && make install\n[root@mysql mysql-8.0.22]# cd bin/\n[root@mysql bin]# ./mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql\n[root@mysql bin]# vim /etc/my.cnf\n[client]\nport=3306\nsocket=/tmp/mysql.sock\n#default-character-set=utf8\n#user=root\n#password=123456\n[mysqld]\nserver-id=1\n#skip-grant-tables\nport=3306\nuser=mysql\nmax_connections=200\nsocket=/tmp/mysql.sock\nbasedir=/usr/local/mysql\ndatadir=/data/mysql\npid-file=/data/mysql/mysql.pid\ninit-connect='SET NAMES utf8'\n#character-set-server=utf8\ndefault-storage-engine=INNODB\nlog_error=/data/mysql/mysql-error.log\nslow_query_log_file=/data/mysql/mysql-slow.log\n[mysqldump]\nquick\nmax_allowed_packet=16M\n[root@mysql bin]# echo \"PATH=/usr/local/mysql/bin:$PATH\" >> /etc/profile\n[root@mysql bin]# source /etc/profile\n[root@mysql bin]# cp /usr/local/mysql-8.0.22/support-files/mysql.server /etc/init.d/mysqld\n[root@mysql bin]# vim /etc/init.d/mysqld\n···\nbasedir=/usr/local/mysql\ndatadir=/data/mysql\n···\n[root@mysql bin]# chmod +x /etc/init.d/mysqld\n[root@mysql bin]# /etc/init.d/mysqld start\n[root@mysql bin]# mysql -u root -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 12\nServer version: 8.0.22 Source distribution\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> \n```\nMySQL初步搭建完成\n### 完全备份与恢复\n```javascript\n[root@mysql ~]# mysql -u root -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 15\nServer version: 8.0.22 Source distribution\n\nCopyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> create database auth;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> use auth;\nDatabase changed\nmysql> create table user(name char(10)not null,ID int(48));\nQuery OK, 0 rows affected, 1 warning (0.02 sec)\n\nmysql> insert into user values('liangzai','1');\nQuery OK, 1 row affected (0.01 sec)\n\nmysql> select * from user;\n+----------+------+\n| name     | ID   |\n+----------+------+\n| liangzai |    1 |\n+----------+------+\n1 row in set (0.00 sec)\n```\n####  mysqldump备份\nMySQL自带的备份工具，相当方便对MySQl进行备份。通过该命令工具可以将制定的库、表或全部的库导出为SQL脚本，在需要恢复时可进行数据恢复。\n* 对单个库进行完全备份\n格式：mysqldump -u 用户名 -p [密码] [选项] [数据库名] > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mkdir backup\n[root@mysql ~]# mysqldump -uroot -p auth > backup/auth-$(date +%Y%m%d).sql\n[root@mysql ~]# echo $?\n[root@mysql ~]# ls backup/\nauth-20210112.sql\n```\n* 对多个库进行完全备份\n格式：mysqldump -u 用户名 -p [密码] [选项] --databases库名1 [库名2] > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p --databases mysql auth > backup/mysql+auth-$(date +%Y%m%d).sql\n[root@mysql ~]# ls backup/\nmysql+auth-20210112.sql\n```\n* 对所有库进行完全备份\n格式: mysqldump -u 用户名 -p [密码] [选项] --all-databases 备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p --opt --all-databases > backup/mysql_all.$(date +%Y%m%d).sql\n# 加快备份速度,当备份数据量大时使用\n[root@mysql ~]# ls backup/\nmysql_all.20210112.sql\n```\n* 对表进行完全备份\n格式: mysqldump -u 用户名 -p [密码] [选项] 数据库名 表名 > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p auth user > backup/auth_user-$(date +%Y%m%d).sql\n[root@mysql ~]# ls backup/\nauth_user-20210112.sql\n```\n* 对表结构的备份\n格式: mysqldump -u 用户名 p [密码] -d 数据名 表名 > /备份路径/备份文件名\n```javascript\n[root@mysql ~]# mysqldump -u root -p -d mysql user > backup/des_mysql_user-$(date +%Y%m%d).sql\n[root@mysql ~]# ls backup/\ndes_mysql_user-20210112.sql\n```\n####  数据恢复\n#####  source命令\n执行 source 备份路径\n```javascript\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\nmysql> drop database auth;\nQuery OK, 1 row affected (0.02 sec)\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n4 rows in set (0.00 sec)\n\nmysql> source backup/auth-20210112.sql\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n```\n#####  mysql命令\nmysql -u 用户名 -p [密码] < 库备份脚本的路径\n```javascript\n[root@mysql ~]# mysql -u root -p -e 'show databases;'\nEnter password: \n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n[root@mysql ~]# mysql -u root -p -e 'drop database auth;'\nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'show databases;'\nEnter password: \n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n[root@mysql ~]# mysql -u root -p < backup/mysql_all.20210112.sql \nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'show databases;'\nEnter password: \n+--------------------+\n| Database           |\n+--------------------+\n| auth               |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n```\nmysql -u 用户名 -p [密码] 库名 <表备份脚本的路径\n```javascript\n[root@mysql ~]# mysql -u root -p -e 'drop table auth.user;'\nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'select * from auth.user;'\nEnter password: \nERROR 1146 (42S02) at line 1: Table 'auth.user' doesn't exist\n[root@mysql ~]# mysql -u root -p auth < backup/auth_user-20210112.sql \nEnter password: \n[root@mysql ~]# mysql -u root -p -e 'select * from auth.user;'\nEnter password: \n+----------+------+\n| name     | ID   |\n+----------+------+\n| liangzai |    1 |\n+----------+------+\n```\n未完待续...\n","slug":"MySQL完全备份与恢复","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf5000ltobvb0h2bg4m","content":"<h2 id=\"数据库备份的分类\"><a href=\"#数据库备份的分类\" class=\"headerlink\" title=\"数据库备份的分类\"></a>数据库备份的分类</h2><ul>\n<li>从物理与逻辑的角度，备份可以分为物理备份和逻辑备份。<br>（1）物理备份:对数据库操作系统的物理文件（如数据文件、日志文件等）的备份。<br>物理备份又可分为脱机备份（冷备份）和联机备份（热备份）。<br>1、冷备份:是在关闭数据库的时候进行的<br>2、热备份:数据库处于运行状态，这种备份方法依赖于数据库的日志文件<br>3、温备份:数据库锁定表格（不可写入但可读）的状态下进行的<br>（2）逻辑备份:对数据库逻辑组件（如表等数据库对象）的备份</li>\n<li>从数据库的备份策略角度，备份可分为完全备份、差异备份和增量备份<br>（1）完全备份:每次对数据进行完整的备份<br>对整个数据库的备份、数据库结构和文件结构的备份，保存的是备份完成时刻的数据月异备份与增量备份的基础。<br>优点:备份与恢复操作简单方便<br>缺点:数据存在大量的重复；占用大量的空间；备份与恢复时间长<br>（2）差异备份:备份那些自从上次完全备份之后被修改过的所有文件<br>备份的时间节点是从上次完整备份起，备份数据量会越来越大。恢复数据时，只需恢复上次的完全备份与最近的一次差异备份。<br>（3）增量备份:只有那些在上次完全备份或者增量备份后被修改的文件才会被备份<br>以上次完整备份或上次的增量备份的时间为时间点，仅备份这之间的数据变化，因而备份的数据量小，占用空间小，备份速度快。但恢复时，需要从上一次的完整备份起到最后一次增量备份依次恢复，如中间某次的备份数据损坏，将导致数据的丢失。<h2 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h2><h3 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h3><h4 id=\"查看linux的版本\"><a href=\"#查看linux的版本\" class=\"headerlink\" title=\"查看linux的版本\"></a>查看linux的版本</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# cat /etc/redhat-release</span><br><span class=\"line\"><span class=\"title class_\">CentOS</span> <span class=\"title class_\">Linux</span> release <span class=\"number\">7.8</span><span class=\"number\">.2003</span> (<span class=\"title class_\">Core</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"CMake源码安装\"><a href=\"#CMake源码安装\" class=\"headerlink\" title=\"CMake源码安装\"></a>CMake源码安装</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel mlocate bzip2 lrzsz ncurses-devel</span><br><span class=\"line\">[root@mysql ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2.tar.gz</span></span><br><span class=\"line\">[root@mysql ~]# tar -zxvf cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@mysql ~]# cd /usr/local/cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>/</span><br><span class=\"line\">[root@mysql cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>]# ./configure</span><br><span class=\"line\">[root@mysql cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>]# gmake &amp;&amp; make install</span><br><span class=\"line\">[root@mysql cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>]# cmake --version</span><br><span class=\"line\">cmake version <span class=\"number\">3.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">CMake</span> suite maintained and supported by <span class=\"title class_\">Kitware</span> (kitware.<span class=\"property\">com</span>/cmake).</span><br></pre></td></tr></table></figure>\n<h4 id=\"gcc升级\"><a href=\"#gcc升级\" class=\"headerlink\" title=\"gcc升级\"></a>gcc升级</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# yum -y install centos-release-scl devtoolset-<span class=\"number\">9</span>-gcc devtoolset-<span class=\"number\">9</span>-gcc-c++ devtoolset-<span class=\"number\">9</span>-binutils</span><br><span class=\"line\">[root@mysql ~]# scl enable devtoolset-<span class=\"number\">9</span> bash</span><br><span class=\"line\">[root@mysql ~]# echo <span class=\"string\">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt;<span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\">[root@mysql ~]# source /etc/profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"MySQL源码安装\"><a href=\"#MySQL源码安装\" class=\"headerlink\" title=\"MySQL源码安装\"></a>MySQL源码安装</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# yum -y remove mari*</span><br><span class=\"line\">[root@mysql ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.22.tar.gz</span></span><br><span class=\"line\">[root@mysql ~]# tar -zxvf mysql-boost-<span class=\"number\">8.0</span><span class=\"number\">.22</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@mysql ~]# cd /usr/local/mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# groupadd mysql</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# useradd -r -g mysql -s /sbin/nologin mysql</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# mkdir -p /usr/local/mysql</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# mkdir -p /data/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chown -R mysql.<span class=\"property\">mysql</span> /usr/local/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chown -R mysql.<span class=\"property\">mysql</span> /data/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chmod -R <span class=\"number\">755</span> /data/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chmod -R <span class=\"number\">755</span> /usr/local/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# cmake . -<span class=\"variable constant_\">DCMAKE_INSTALL_PREFIX</span>=<span class=\"regexp\">/usr/</span>local/mysql -<span class=\"variable constant_\">DMYSQL_DATADIR</span>=<span class=\"regexp\">/data/my</span>sql -<span class=\"variable constant_\">DSYSCONFDIR</span>=<span class=\"regexp\">/etc -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/u</span>sr/local/mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>/boost -<span class=\"variable constant_\">DDEFAULT_CHARSET</span>=utf8 -<span class=\"variable constant_\">DDEFAULT_COLLATION</span>=utf8_general_ci -<span class=\"variable constant_\">DENABLED_LOCAL_INFILE</span>=<span class=\"variable constant_\">ON</span> -<span class=\"variable constant_\">DWITH_INNODB_MEMCACHED</span>=<span class=\"variable constant_\">ON</span> -<span class=\"variable constant_\">DWITH_INNOBASE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_FEDERATED_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_BLACKHOLE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_ARCHIVE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITHOUT_EXAMPLE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_PERFSCHEMA_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DFORCE_INSOURCE_BUILD</span>=<span class=\"number\">1</span></span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# cd bin/</span><br><span class=\"line\">[root@mysql bin]# ./mysqld --initialize-insecure --user=mysql --basedir=<span class=\"regexp\">/usr/</span>local/mysql --datadir=<span class=\"regexp\">/data/my</span>sql</span><br><span class=\"line\">[root@mysql bin]# vim /etc/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\">socket=<span class=\"regexp\">/tmp/my</span>sql.<span class=\"property\">sock</span></span><br><span class=\"line\">#<span class=\"keyword\">default</span>-character-set=utf8</span><br><span class=\"line\">#user=root</span><br><span class=\"line\">#password=<span class=\"number\">123456</span></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=<span class=\"number\">1</span></span><br><span class=\"line\">#skip-grant-tables</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">max_connections=<span class=\"number\">200</span></span><br><span class=\"line\">socket=<span class=\"regexp\">/tmp/my</span>sql.<span class=\"property\">sock</span></span><br><span class=\"line\">basedir=<span class=\"regexp\">/usr/</span>local/mysql</span><br><span class=\"line\">datadir=<span class=\"regexp\">/data/my</span>sql</span><br><span class=\"line\">pid-file=<span class=\"regexp\">/data/my</span>sql/mysql.<span class=\"property\">pid</span></span><br><span class=\"line\">init-connect=<span class=\"string\">&#x27;SET NAMES utf8&#x27;</span></span><br><span class=\"line\">#character-set-server=utf8</span><br><span class=\"line\"><span class=\"keyword\">default</span>-storage-engine=<span class=\"variable constant_\">INNODB</span></span><br><span class=\"line\">log_error=<span class=\"regexp\">/data/my</span>sql/mysql-error.<span class=\"property\">log</span></span><br><span class=\"line\">slow_query_log_file=<span class=\"regexp\">/data/my</span>sql/mysql-slow.<span class=\"property\">log</span></span><br><span class=\"line\">[mysqldump]</span><br><span class=\"line\">quick</span><br><span class=\"line\">max_allowed_packet=16M</span><br><span class=\"line\">[root@mysql bin]# echo <span class=\"string\">&quot;PATH=/usr/local/mysql/bin:$PATH&quot;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\">[root@mysql bin]# source /etc/profile</span><br><span class=\"line\">[root@mysql bin]# cp /usr/local/mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>/support-files/mysql.<span class=\"property\">server</span> /etc/init.<span class=\"property\">d</span>/mysqld</span><br><span class=\"line\">[root@mysql bin]# vim /etc/init.<span class=\"property\">d</span>/mysqld</span><br><span class=\"line\">···</span><br><span class=\"line\">basedir=<span class=\"regexp\">/usr/</span>local/mysql</span><br><span class=\"line\">datadir=<span class=\"regexp\">/data/my</span>sql</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@mysql bin]# chmod +x /etc/init.<span class=\"property\">d</span>/mysqld</span><br><span class=\"line\">[root@mysql bin]# /etc/init.<span class=\"property\">d</span>/mysqld start</span><br><span class=\"line\">[root@mysql bin]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MySQL</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MySQL</span> connection id is <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">8.0</span><span class=\"number\">.22</span> <span class=\"title class_\">Source</span> distribution</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2020</span>, <span class=\"title class_\">Oracle</span> and/or its affiliates. <span class=\"title class_\">All</span> rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Oracle</span> is a registered trademark <span class=\"keyword\">of</span> <span class=\"title class_\">Oracle</span> <span class=\"title class_\">Corporation</span> and/or its</span><br><span class=\"line\">affiliates. <span class=\"title class_\">Other</span> names may be trademarks <span class=\"keyword\">of</span> their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; </span><br></pre></td></tr></table></figure>\nMySQL初步搭建完成<h3 id=\"完全备份与恢复\"><a href=\"#完全备份与恢复\" class=\"headerlink\" title=\"完全备份与恢复\"></a>完全备份与恢复</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MySQL</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MySQL</span> connection id is <span class=\"number\">15</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">8.0</span><span class=\"number\">.22</span> <span class=\"title class_\">Source</span> distribution</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2020</span>, <span class=\"title class_\">Oracle</span> and/or its affiliates. <span class=\"title class_\">All</span> rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Oracle</span> is a registered trademark <span class=\"keyword\">of</span> <span class=\"title class_\">Oracle</span> <span class=\"title class_\">Corporation</span> and/or its</span><br><span class=\"line\">affiliates. <span class=\"title class_\">Other</span> names may be trademarks <span class=\"keyword\">of</span> their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create database auth;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; use auth;</span><br><span class=\"line\"><span class=\"title class_\">Database</span> changed</span><br><span class=\"line\">mysql&gt; create table <span class=\"title function_\">user</span>(name <span class=\"title function_\">char</span>(<span class=\"number\">10</span>)not <span class=\"literal\">null</span>,<span class=\"variable constant_\">ID</span> <span class=\"title function_\">int</span>(<span class=\"number\">48</span>));</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected, <span class=\"number\">1</span> warning (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;liangzai&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user;</span><br><span class=\"line\">+----------+------+</span><br><span class=\"line\">| name     | <span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+----------+------+</span><br><span class=\"line\">| liangzai |    <span class=\"number\">1</span> |</span><br><span class=\"line\">+----------+------+</span><br><span class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"mysqldump备份\"><a href=\"#mysqldump备份\" class=\"headerlink\" title=\"mysqldump备份\"></a>mysqldump备份</h4>MySQL自带的备份工具，相当方便对MySQl进行备份。通过该命令工具可以将制定的库、表或全部的库导出为SQL脚本，在需要恢复时可进行数据恢复。</li>\n<li>对单个库进行完全备份<br>格式：mysqldump -u 用户名 -p [密码] [选项] [数据库名] &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mkdir backup</span><br><span class=\"line\">[root@mysql ~]# mysqldump -uroot -p auth &gt; backup/auth-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# echo $?</span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">auth-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure></li>\n<li>对多个库进行完全备份<br>格式：mysqldump -u 用户名 -p [密码] [选项] –databases库名1 [库名2] &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p --databases mysql auth &gt; backup/mysql+auth-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">mysql+auth-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure></li>\n<li>对所有库进行完全备份<br>格式: mysqldump -u 用户名 -p [密码] [选项] –all-databases 备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p --opt --all-databases &gt; backup/mysql_all.$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\"># 加快备份速度,当备份数据量大时使用</span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">mysql_all<span class=\"number\">.20210112</span>.<span class=\"property\">sql</span></span><br></pre></td></tr></table></figure></li>\n<li>对表进行完全备份<br>格式: mysqldump -u 用户名 -p [密码] [选项] 数据库名 表名 &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p auth user &gt; backup/auth_user-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">auth_user-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure></li>\n<li>对表结构的备份<br>格式: mysqldump -u 用户名 p [密码] -d 数据名 表名 &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p -d mysql user &gt; backup/des_mysql_user-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">des_mysql_user-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"数据恢复\"><a href=\"#数据恢复\" class=\"headerlink\" title=\"数据恢复\"></a>数据恢复</h4><h5 id=\"source命令\"><a href=\"#source命令\" class=\"headerlink\" title=\"source命令\"></a>source命令</h5>执行 source 备份路径<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\"><span class=\"number\">5</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; drop database auth;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\"><span class=\"number\">4</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; source backup/auth-<span class=\"number\">20210112.</span>sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\"><span class=\"number\">5</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h5 id=\"mysql命令\"><a href=\"#mysql命令\" class=\"headerlink\" title=\"mysql命令\"></a>mysql命令</h5>mysql -u 用户名 -p [密码] &lt; 库备份脚本的路径<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;show databases;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;drop database auth;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;show databases;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p &lt; backup/mysql_all<span class=\"number\">.20210112</span>.<span class=\"property\">sql</span> </span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;show databases;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br></pre></td></tr></table></figure>\nmysql -u 用户名 -p [密码] 库名 &lt;表备份脚本的路径<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;drop table auth.user;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;select * from auth.user;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02) at line <span class=\"number\">1</span>: <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;auth.user&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -u root -p auth &lt; backup/auth_user-20210112.sql </span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -u root -p -e &#x27;</span>select * <span class=\"keyword\">from</span> auth.<span class=\"property\">user</span>;<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">+----------+------+</span></span><br><span class=\"line\"><span class=\"string\">| name     | ID   |</span></span><br><span class=\"line\"><span class=\"string\">+----------+------+</span></span><br><span class=\"line\"><span class=\"string\">| liangzai |    1 |</span></span><br><span class=\"line\"><span class=\"string\">+----------+------+</span></span><br></pre></td></tr></table></figure>\n未完待续…</li>\n</ul>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"数据库备份的分类\"><a href=\"#数据库备份的分类\" class=\"headerlink\" title=\"数据库备份的分类\"></a>数据库备份的分类</h2><ul>\n<li>从物理与逻辑的角度，备份可以分为物理备份和逻辑备份。<br>（1）物理备份:对数据库操作系统的物理文件（如数据文件、日志文件等）的备份。<br>物理备份又可分为脱机备份（冷备份）和联机备份（热备份）。<br>1、冷备份:是在关闭数据库的时候进行的<br>2、热备份:数据库处于运行状态，这种备份方法依赖于数据库的日志文件<br>3、温备份:数据库锁定表格（不可写入但可读）的状态下进行的<br>（2）逻辑备份:对数据库逻辑组件（如表等数据库对象）的备份</li>\n<li>从数据库的备份策略角度，备份可分为完全备份、差异备份和增量备份<br>（1）完全备份:每次对数据进行完整的备份<br>对整个数据库的备份、数据库结构和文件结构的备份，保存的是备份完成时刻的数据月异备份与增量备份的基础。<br>优点:备份与恢复操作简单方便<br>缺点:数据存在大量的重复；占用大量的空间；备份与恢复时间长<br>（2）差异备份:备份那些自从上次完全备份之后被修改过的所有文件<br>备份的时间节点是从上次完整备份起，备份数据量会越来越大。恢复数据时，只需恢复上次的完全备份与最近的一次差异备份。<br>（3）增量备份:只有那些在上次完全备份或者增量备份后被修改的文件才会被备份<br>以上次完整备份或上次的增量备份的时间为时间点，仅备份这之间的数据变化，因而备份的数据量小，占用空间小，备份速度快。但恢复时，需要从上一次的完整备份起到最后一次增量备份依次恢复，如中间某次的备份数据损坏，将导致数据的丢失。<h2 id=\"举个栗子\"><a href=\"#举个栗子\" class=\"headerlink\" title=\"举个栗子\"></a>举个栗子</h2><h3 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h3><h4 id=\"查看linux的版本\"><a href=\"#查看linux的版本\" class=\"headerlink\" title=\"查看linux的版本\"></a>查看linux的版本</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# cat /etc/redhat-release</span><br><span class=\"line\"><span class=\"title class_\">CentOS</span> <span class=\"title class_\">Linux</span> release <span class=\"number\">7.8</span><span class=\"number\">.2003</span> (<span class=\"title class_\">Core</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"CMake源码安装\"><a href=\"#CMake源码安装\" class=\"headerlink\" title=\"CMake源码安装\"></a>CMake源码安装</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel mlocate bzip2 lrzsz ncurses-devel</span><br><span class=\"line\">[root@mysql ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2.tar.gz</span></span><br><span class=\"line\">[root@mysql ~]# tar -zxvf cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@mysql ~]# cd /usr/local/cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>/</span><br><span class=\"line\">[root@mysql cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>]# ./configure</span><br><span class=\"line\">[root@mysql cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>]# gmake &amp;&amp; make install</span><br><span class=\"line\">[root@mysql cmake-<span class=\"number\">3.19</span><span class=\"number\">.2</span>]# cmake --version</span><br><span class=\"line\">cmake version <span class=\"number\">3.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">CMake</span> suite maintained and supported by <span class=\"title class_\">Kitware</span> (kitware.<span class=\"property\">com</span>/cmake).</span><br></pre></td></tr></table></figure>\n<h4 id=\"gcc升级\"><a href=\"#gcc升级\" class=\"headerlink\" title=\"gcc升级\"></a>gcc升级</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# yum -y install centos-release-scl devtoolset-<span class=\"number\">9</span>-gcc devtoolset-<span class=\"number\">9</span>-gcc-c++ devtoolset-<span class=\"number\">9</span>-binutils</span><br><span class=\"line\">[root@mysql ~]# scl enable devtoolset-<span class=\"number\">9</span> bash</span><br><span class=\"line\">[root@mysql ~]# echo <span class=\"string\">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt;<span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\">[root@mysql ~]# source /etc/profile</span><br></pre></td></tr></table></figure>\n<h4 id=\"MySQL源码安装\"><a href=\"#MySQL源码安装\" class=\"headerlink\" title=\"MySQL源码安装\"></a>MySQL源码安装</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# yum -y remove mari*</span><br><span class=\"line\">[root@mysql ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.22.tar.gz</span></span><br><span class=\"line\">[root@mysql ~]# tar -zxvf mysql-boost-<span class=\"number\">8.0</span><span class=\"number\">.22</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@mysql ~]# cd /usr/local/mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# groupadd mysql</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# useradd -r -g mysql -s /sbin/nologin mysql</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# mkdir -p /usr/local/mysql</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# mkdir -p /data/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chown -R mysql.<span class=\"property\">mysql</span> /usr/local/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chown -R mysql.<span class=\"property\">mysql</span> /data/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chmod -R <span class=\"number\">755</span> /data/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# chmod -R <span class=\"number\">755</span> /usr/local/mysql/</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# cmake . -<span class=\"variable constant_\">DCMAKE_INSTALL_PREFIX</span>=<span class=\"regexp\">/usr/</span>local/mysql -<span class=\"variable constant_\">DMYSQL_DATADIR</span>=<span class=\"regexp\">/data/my</span>sql -<span class=\"variable constant_\">DSYSCONFDIR</span>=<span class=\"regexp\">/etc -DMYSQL_TCP_PORT=3306 -DWITH_BOOST=/u</span>sr/local/mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>/boost -<span class=\"variable constant_\">DDEFAULT_CHARSET</span>=utf8 -<span class=\"variable constant_\">DDEFAULT_COLLATION</span>=utf8_general_ci -<span class=\"variable constant_\">DENABLED_LOCAL_INFILE</span>=<span class=\"variable constant_\">ON</span> -<span class=\"variable constant_\">DWITH_INNODB_MEMCACHED</span>=<span class=\"variable constant_\">ON</span> -<span class=\"variable constant_\">DWITH_INNOBASE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_FEDERATED_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_BLACKHOLE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_ARCHIVE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITHOUT_EXAMPLE_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DWITH_PERFSCHEMA_STORAGE_ENGINE</span>=<span class=\"number\">1</span> -<span class=\"variable constant_\">DFORCE_INSOURCE_BUILD</span>=<span class=\"number\">1</span></span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@mysql mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>]# cd bin/</span><br><span class=\"line\">[root@mysql bin]# ./mysqld --initialize-insecure --user=mysql --basedir=<span class=\"regexp\">/usr/</span>local/mysql --datadir=<span class=\"regexp\">/data/my</span>sql</span><br><span class=\"line\">[root@mysql bin]# vim /etc/my.<span class=\"property\">cnf</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\">socket=<span class=\"regexp\">/tmp/my</span>sql.<span class=\"property\">sock</span></span><br><span class=\"line\">#<span class=\"keyword\">default</span>-character-set=utf8</span><br><span class=\"line\">#user=root</span><br><span class=\"line\">#password=<span class=\"number\">123456</span></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=<span class=\"number\">1</span></span><br><span class=\"line\">#skip-grant-tables</span><br><span class=\"line\">port=<span class=\"number\">3306</span></span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">max_connections=<span class=\"number\">200</span></span><br><span class=\"line\">socket=<span class=\"regexp\">/tmp/my</span>sql.<span class=\"property\">sock</span></span><br><span class=\"line\">basedir=<span class=\"regexp\">/usr/</span>local/mysql</span><br><span class=\"line\">datadir=<span class=\"regexp\">/data/my</span>sql</span><br><span class=\"line\">pid-file=<span class=\"regexp\">/data/my</span>sql/mysql.<span class=\"property\">pid</span></span><br><span class=\"line\">init-connect=<span class=\"string\">&#x27;SET NAMES utf8&#x27;</span></span><br><span class=\"line\">#character-set-server=utf8</span><br><span class=\"line\"><span class=\"keyword\">default</span>-storage-engine=<span class=\"variable constant_\">INNODB</span></span><br><span class=\"line\">log_error=<span class=\"regexp\">/data/my</span>sql/mysql-error.<span class=\"property\">log</span></span><br><span class=\"line\">slow_query_log_file=<span class=\"regexp\">/data/my</span>sql/mysql-slow.<span class=\"property\">log</span></span><br><span class=\"line\">[mysqldump]</span><br><span class=\"line\">quick</span><br><span class=\"line\">max_allowed_packet=16M</span><br><span class=\"line\">[root@mysql bin]# echo <span class=\"string\">&quot;PATH=/usr/local/mysql/bin:$PATH&quot;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\">[root@mysql bin]# source /etc/profile</span><br><span class=\"line\">[root@mysql bin]# cp /usr/local/mysql-<span class=\"number\">8.0</span><span class=\"number\">.22</span>/support-files/mysql.<span class=\"property\">server</span> /etc/init.<span class=\"property\">d</span>/mysqld</span><br><span class=\"line\">[root@mysql bin]# vim /etc/init.<span class=\"property\">d</span>/mysqld</span><br><span class=\"line\">···</span><br><span class=\"line\">basedir=<span class=\"regexp\">/usr/</span>local/mysql</span><br><span class=\"line\">datadir=<span class=\"regexp\">/data/my</span>sql</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@mysql bin]# chmod +x /etc/init.<span class=\"property\">d</span>/mysqld</span><br><span class=\"line\">[root@mysql bin]# /etc/init.<span class=\"property\">d</span>/mysqld start</span><br><span class=\"line\">[root@mysql bin]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MySQL</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MySQL</span> connection id is <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">8.0</span><span class=\"number\">.22</span> <span class=\"title class_\">Source</span> distribution</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2020</span>, <span class=\"title class_\">Oracle</span> and/or its affiliates. <span class=\"title class_\">All</span> rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Oracle</span> is a registered trademark <span class=\"keyword\">of</span> <span class=\"title class_\">Oracle</span> <span class=\"title class_\">Corporation</span> and/or its</span><br><span class=\"line\">affiliates. <span class=\"title class_\">Other</span> names may be trademarks <span class=\"keyword\">of</span> their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; </span><br></pre></td></tr></table></figure>\nMySQL初步搭建完成<h3 id=\"完全备份与恢复\"><a href=\"#完全备份与恢复\" class=\"headerlink\" title=\"完全备份与恢复\"></a>完全备份与恢复</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -u root -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MySQL</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MySQL</span> connection id is <span class=\"number\">15</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">8.0</span><span class=\"number\">.22</span> <span class=\"title class_\">Source</span> distribution</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2020</span>, <span class=\"title class_\">Oracle</span> and/or its affiliates. <span class=\"title class_\">All</span> rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Oracle</span> is a registered trademark <span class=\"keyword\">of</span> <span class=\"title class_\">Oracle</span> <span class=\"title class_\">Corporation</span> and/or its</span><br><span class=\"line\">affiliates. <span class=\"title class_\">Other</span> names may be trademarks <span class=\"keyword\">of</span> their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create database auth;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; use auth;</span><br><span class=\"line\"><span class=\"title class_\">Database</span> changed</span><br><span class=\"line\">mysql&gt; create table <span class=\"title function_\">user</span>(name <span class=\"title function_\">char</span>(<span class=\"number\">10</span>)not <span class=\"literal\">null</span>,<span class=\"variable constant_\">ID</span> <span class=\"title function_\">int</span>(<span class=\"number\">48</span>));</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected, <span class=\"number\">1</span> warning (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into user <span class=\"title function_\">values</span>(<span class=\"string\">&#x27;liangzai&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>);</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.01</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * <span class=\"keyword\">from</span> user;</span><br><span class=\"line\">+----------+------+</span><br><span class=\"line\">| name     | <span class=\"variable constant_\">ID</span>   |</span><br><span class=\"line\">+----------+------+</span><br><span class=\"line\">| liangzai |    <span class=\"number\">1</span> |</span><br><span class=\"line\">+----------+------+</span><br><span class=\"line\"><span class=\"number\">1</span> row <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h4 id=\"mysqldump备份\"><a href=\"#mysqldump备份\" class=\"headerlink\" title=\"mysqldump备份\"></a>mysqldump备份</h4>MySQL自带的备份工具，相当方便对MySQl进行备份。通过该命令工具可以将制定的库、表或全部的库导出为SQL脚本，在需要恢复时可进行数据恢复。</li>\n<li>对单个库进行完全备份<br>格式：mysqldump -u 用户名 -p [密码] [选项] [数据库名] &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mkdir backup</span><br><span class=\"line\">[root@mysql ~]# mysqldump -uroot -p auth &gt; backup/auth-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# echo $?</span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">auth-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure></li>\n<li>对多个库进行完全备份<br>格式：mysqldump -u 用户名 -p [密码] [选项] –databases库名1 [库名2] &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p --databases mysql auth &gt; backup/mysql+auth-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">mysql+auth-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure></li>\n<li>对所有库进行完全备份<br>格式: mysqldump -u 用户名 -p [密码] [选项] –all-databases 备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p --opt --all-databases &gt; backup/mysql_all.$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\"># 加快备份速度,当备份数据量大时使用</span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">mysql_all<span class=\"number\">.20210112</span>.<span class=\"property\">sql</span></span><br></pre></td></tr></table></figure></li>\n<li>对表进行完全备份<br>格式: mysqldump -u 用户名 -p [密码] [选项] 数据库名 表名 &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p auth user &gt; backup/auth_user-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">auth_user-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure></li>\n<li>对表结构的备份<br>格式: mysqldump -u 用户名 p [密码] -d 数据名 表名 &gt; /备份路径/备份文件名<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysqldump -u root -p -d mysql user &gt; backup/des_mysql_user-$(date +%Y%m%d).<span class=\"property\">sql</span></span><br><span class=\"line\">[root@mysql ~]# ls backup/</span><br><span class=\"line\">des_mysql_user-<span class=\"number\">20210112.</span>sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"数据恢复\"><a href=\"#数据恢复\" class=\"headerlink\" title=\"数据恢复\"></a>数据恢复</h4><h5 id=\"source命令\"><a href=\"#source命令\" class=\"headerlink\" title=\"source命令\"></a>source命令</h5>执行 source 备份路径<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\"><span class=\"number\">5</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; drop database auth;</span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">1</span> row affected (<span class=\"number\">0.02</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\"><span class=\"number\">4</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; source backup/auth-<span class=\"number\">20210112.</span>sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\"><span class=\"number\">5</span> rows <span class=\"keyword\">in</span> set (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h5 id=\"mysql命令\"><a href=\"#mysql命令\" class=\"headerlink\" title=\"mysql命令\"></a>mysql命令</h5>mysql -u 用户名 -p [密码] &lt; 库备份脚本的路径<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;show databases;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;drop database auth;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;show databases;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p &lt; backup/mysql_all<span class=\"number\">.20210112</span>.<span class=\"property\">sql</span> </span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;show databases;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| <span class=\"title class_\">Database</span>           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| auth               |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br></pre></td></tr></table></figure>\nmysql -u 用户名 -p [密码] 库名 &lt;表备份脚本的路径<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;drop table auth.user;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\">[root@mysql ~]# mysql -u root -p -e <span class=\"string\">&#x27;select * from auth.user;&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"variable constant_\">ERROR</span> <span class=\"number\">1146</span> (42S02) at line <span class=\"number\">1</span>: <span class=\"title class_\">Table</span> <span class=\"string\">&#x27;auth.user&#x27;</span> doesn<span class=\"string\">&#x27;t exist</span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -u root -p auth &lt; backup/auth_user-20210112.sql </span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">[root@mysql ~]# mysql -u root -p -e &#x27;</span>select * <span class=\"keyword\">from</span> auth.<span class=\"property\">user</span>;<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Enter password: </span></span><br><span class=\"line\"><span class=\"string\">+----------+------+</span></span><br><span class=\"line\"><span class=\"string\">| name     | ID   |</span></span><br><span class=\"line\"><span class=\"string\">+----------+------+</span></span><br><span class=\"line\"><span class=\"string\">| liangzai |    1 |</span></span><br><span class=\"line\"><span class=\"string\">+----------+------+</span></span><br></pre></td></tr></table></figure>\n未完待续…</li>\n</ul>\n"},{"title":"Nginx缓存加速","date":"2020-12-30T16:00:00.000Z","updated":"2022-11-28T13:53:12.808Z","description":null,"cover":"https://pic.imgdb.cn/item/6384a28216f2c2beb1d15647.jpg","_content":"##  Nginx 缓存加速概述\n### Nginx支持类似Squid的缓存功能\n* 把URL以及相关信息当成key,用MD5编码哈希后，把数据文件保存在硬盘上。只能为指定的URL或者状态码设置过期时间，并不支持类似squid的purge命令来手动清除指定缓存页面。\n* 可通过第三方的ngx_ cache_purge 来清除指定的URL缓存。\n* Nginx的缓存加速功能是由proxy_cache和fastcgi_cache 两个功能模块完成的。\n### Nginx缓存加速特点\n* 缓存功能十分稳定，运行速度不逊于squid, 对多核CPU的利用率比其他的开源软件也要好，支持高并发请求数，能同时承受更多的访问请求。\n##  Nginx 缓存加速案例\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|nginx  ngx_cache_purge|CentOS 7|192.168.0.36|\n|web|windows|192.168.0.54|\n\n###  Nginx端配置\n#### 源码安装Nginx\n```javascript\n[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make\n[root@nginx ~]# wget https://nginx.org/download/nginx-1.18.0.tar.gz\n[root@nginx ~]# wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz\n[root@nginx ~]# ls\nnginx-1.18.0.tar.gz  ngx_cache_purge-2.3.tar.gz\n[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make\n[root@nginx ~]# tar -zvxf nginx-1.18.0.tar.gz -C /usr/local/\n[root@nginx ~]# tar -zvxf ngx_cache_purge-2.3.tar.gz -C /usr/local/\n[root@nginx ~]# cd /usr/local/nginx-1.18.0/\n[root@nginx nginx-1.18.0]# ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module --with-pcre --add-module=/usr/local/ngx_cache_purge-2.3/\n[root@nginx nginx-1.18.0]# make && make install\n[root@nginx nginx-1.18.0]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/\n```\n####  修改配置文件\n```javascript\n[root@nginx nginx-1.18.0]# cd /usr/local/nginx/conf/\n[root@nginx conf]# vim nginx.conf\n#user  nobody;\nuser nginx nginx;\n# 以nginx用户和组运行\n\nworker_processes  1;\n# 启动进程数，根据物理CPU个数设置\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\nerror_log  logs/error.log  crit;\n# 定义错误日志，级别为crit\n\npid        logs/nginx.pid;\n\nworker_rlimit_nofile 65535;\n# 打开文件的最大句柄数，最好与ulimit -n的值保持一致，使用ulimit -SHn 进行设置\n\nevents {\n    use epoll;\n    # Nginx 使用了最新的epoll网络I/O模型\n    worker_connections  65535;\n    # 每个工作进程允许最大的同时连接数\n}\n\n\nhttp {\n    include       mime.types;\n    # mime.types 内定义各文件类型映像\n    default_type  application/octet-stream;\n    # 设置默认类型是二进制流，若没有设置，比如加载PHP时，是不预解析，用浏览器访问则出现下载窗口\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    # 打开系统函数sendfile()，支持下载\n    tcp_nopush     on;\n    # 只有先打开Linux下的tcp_cork,sendfile打开时才有效\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    # 会话保持时间，设置的低一些可以让nginx持续工作的时间更长\n    \n    #gzip  on;\n    \n    tcp_nodelay on;\n    # 不要缓存数据，而是一段一段的发送——当需要及时发送数据时，就应该设置这个属性，这样发送一小块数据信息时就不能立即得到返回值\n    client_body_buffer_size 512k;\n    # 指定连接请求实体的缓存大小\n    proxy_connect_timeout 5;\n    # 代理连接超时时间，单位秒\n    proxy_read_timeout 60;\n    # 代理接收超时\n    proxy_send_timeout 5;\n    # 代理发送超时\n    proxy_buffer_size 16k;\n    # 代理缓存文件大小\n    proxy_buffers 4 64k;\n    # 代理缓存区的数量及大小，默认一个缓冲区大小与页面大小相等\n    proxy_busy_buffers_size 128k;\n    # 高负荷下缓存区大小\n    proxy_temp_file_write_size 128k;   \n    # 代理临时文件大小\n    proxy_temp_path /var/cache/nginx/cache_temp;\n    # 代理临时文件存放目录\n    proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;\n    # 代理缓存存放路径，第一层目录只有一个字符，是由levels=1:2设置，总共二层目录，子目录名字由二个字符组成，键值名称为cache_one（名字随意），在内存中缓存的空间大小为200MB，1天内没有被访问的缓存将自动清除，硬盘缓存空间为30GB\n    # 注：proxy_temp_path与proxy_cache_path指定的路径必须在同一分区\n    \n    upstream backend_server {\n         server 192.168.0.54:80 weight=1 max_fails=2 fail_timeout=30s;\n    }\n    # 上游服务器节点，权重1（数字越大权重越大），30秒内访问失败次数大于等于2次，将在30秒内停止访问此节点，30秒后计数器清零，可以重新访问。\n    \n    server {\n        listen       80;\n        server_name  localhost 192.168.0.36;\n  \n        #charset koi8-r;\n        charset utf-8;\n        \n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n            proxy_next_upstream http_502 http_504 error timeout invalid_header;\n            # 如果后端服务器返回502、504、错误等错误，自动跳转到upstream负载均衡池中的另一台服务器，实现故障转义\n\t        proxy_cache cache_one\n            proxy_cache_valid 200 304 2h;\n            # 对不同的HTTP状态码设置不同的缓存时间\n            proxy_cache_key $host$uri$is_args$args;\n            # 以域名、URI、参数组合成Web缓存的Key值，nginx根据Key值哈希，存储缓存内容到二级缓存目录内\n\t        proxy_set_header Host $host;\n\t        proxy_set_header X-Forwarded-For $remote_addr;\n            proxy_pass http://backend_server;\n            # 指定跳转服务器池，名字要与upstream设定的相同\n            expires 1d;\n            # 用于清除缓存\n        }\n        \n        location ~ /purge(/.*) {\n        # 设置允许清除缓存的主机IP或网段\n            allow 127.0.0.1;\n\t        allow 192.168.0.0/24;\n\t        deny all;\n\t        proxy_cache_purge cache_one $host$1$is_args$args;\n\t}\n        \n        location ~ .*\\.(php|jsp|cgi)?$ {\n        # 扩展名以php、jsp、cgi结尾的动态应用程序不缓存\n    \t    proxy_set_header Host $host;\n            proxy_set_header X-Forwarded-For $remote_addr;\n            proxy_pass http://backend_server;\n\t}\n        access_log off;\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n[root@nginx conf]# useradd -M -s /sbin/nologin nginx\n[root@nginx conf]# mkdir /var/cache/nginx\n[root@nginx conf]# ulimit -SHn 65535\n[root@nginx conf]# nginx -t\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n[root@nginx conf]# netstat -antp |grep nginx\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      32540/nginx: master \n```\n### web端配置\n```javascript\n[root@web ~]# yum -y install httpd\n[root@web ~]# vim /etc/httpd/conf/httpd.conf\n···\nServerName www.example.com:80\n···\n[root@web ~]# echo \"liangzai\" >/var/www/html/index.html\n[root@web ~]# systemctl start httpd\n[root@web ~]# netstat -antp |grep httpd\ntcp6       0      0 :::80                   :::*                    LISTEN      28694/httpd         \n```\n###  验证\n####  测试Nginx缓存服务器\n```javascript\n[root@nginx conf]# ll /var/cache/nginx/proxy_cache/\ntotal 0\n```\n####  浏览器访问测试\n![](https://pic.downk.cc/item/5fedc3d33ffa7d37b3b2ac1b.png)\n####  查看Nginx服务器缓存\n```javascript\n[root@nginx conf]# ls /var/cache/nginx/proxy_cache/0/\n4c\n[root@nginx conf]# ls /var/cache/nginx/proxy_cache/0/4c\n29513b424f76af259b61d73cbe4df4c0\n```\n####  清除浏览器缓存\n![](https://pic.downk.cc/item/5fedc3d73ffa7d37b3b2b288.png)\n####  查看Nginx服务器缓存\n```javascript\n[root@nginx conf]# ls /var/cache/nginx/proxy_cache/0/4c\n\n```\n可以看到初步搭建成功\n\n","source":"_posts/Nginx缓存加速.md","raw":"---\ntitle: Nginx缓存加速\ndate: 2020-12-31\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/6384a28216f2c2beb1d15647.jpg\ntag:\n  - Nginx\ncategories:\n  - 缓存加速\n---\n##  Nginx 缓存加速概述\n### Nginx支持类似Squid的缓存功能\n* 把URL以及相关信息当成key,用MD5编码哈希后，把数据文件保存在硬盘上。只能为指定的URL或者状态码设置过期时间，并不支持类似squid的purge命令来手动清除指定缓存页面。\n* 可通过第三方的ngx_ cache_purge 来清除指定的URL缓存。\n* Nginx的缓存加速功能是由proxy_cache和fastcgi_cache 两个功能模块完成的。\n### Nginx缓存加速特点\n* 缓存功能十分稳定，运行速度不逊于squid, 对多核CPU的利用率比其他的开源软件也要好，支持高并发请求数，能同时承受更多的访问请求。\n##  Nginx 缓存加速案例\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|nginx  ngx_cache_purge|CentOS 7|192.168.0.36|\n|web|windows|192.168.0.54|\n\n###  Nginx端配置\n#### 源码安装Nginx\n```javascript\n[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make\n[root@nginx ~]# wget https://nginx.org/download/nginx-1.18.0.tar.gz\n[root@nginx ~]# wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz\n[root@nginx ~]# ls\nnginx-1.18.0.tar.gz  ngx_cache_purge-2.3.tar.gz\n[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make\n[root@nginx ~]# tar -zvxf nginx-1.18.0.tar.gz -C /usr/local/\n[root@nginx ~]# tar -zvxf ngx_cache_purge-2.3.tar.gz -C /usr/local/\n[root@nginx ~]# cd /usr/local/nginx-1.18.0/\n[root@nginx nginx-1.18.0]# ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_stub_status_module --with-pcre --add-module=/usr/local/ngx_cache_purge-2.3/\n[root@nginx nginx-1.18.0]# make && make install\n[root@nginx nginx-1.18.0]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/\n```\n####  修改配置文件\n```javascript\n[root@nginx nginx-1.18.0]# cd /usr/local/nginx/conf/\n[root@nginx conf]# vim nginx.conf\n#user  nobody;\nuser nginx nginx;\n# 以nginx用户和组运行\n\nworker_processes  1;\n# 启动进程数，根据物理CPU个数设置\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\nerror_log  logs/error.log  crit;\n# 定义错误日志，级别为crit\n\npid        logs/nginx.pid;\n\nworker_rlimit_nofile 65535;\n# 打开文件的最大句柄数，最好与ulimit -n的值保持一致，使用ulimit -SHn 进行设置\n\nevents {\n    use epoll;\n    # Nginx 使用了最新的epoll网络I/O模型\n    worker_connections  65535;\n    # 每个工作进程允许最大的同时连接数\n}\n\n\nhttp {\n    include       mime.types;\n    # mime.types 内定义各文件类型映像\n    default_type  application/octet-stream;\n    # 设置默认类型是二进制流，若没有设置，比如加载PHP时，是不预解析，用浏览器访问则出现下载窗口\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    # 打开系统函数sendfile()，支持下载\n    tcp_nopush     on;\n    # 只有先打开Linux下的tcp_cork,sendfile打开时才有效\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    # 会话保持时间，设置的低一些可以让nginx持续工作的时间更长\n    \n    #gzip  on;\n    \n    tcp_nodelay on;\n    # 不要缓存数据，而是一段一段的发送——当需要及时发送数据时，就应该设置这个属性，这样发送一小块数据信息时就不能立即得到返回值\n    client_body_buffer_size 512k;\n    # 指定连接请求实体的缓存大小\n    proxy_connect_timeout 5;\n    # 代理连接超时时间，单位秒\n    proxy_read_timeout 60;\n    # 代理接收超时\n    proxy_send_timeout 5;\n    # 代理发送超时\n    proxy_buffer_size 16k;\n    # 代理缓存文件大小\n    proxy_buffers 4 64k;\n    # 代理缓存区的数量及大小，默认一个缓冲区大小与页面大小相等\n    proxy_busy_buffers_size 128k;\n    # 高负荷下缓存区大小\n    proxy_temp_file_write_size 128k;   \n    # 代理临时文件大小\n    proxy_temp_path /var/cache/nginx/cache_temp;\n    # 代理临时文件存放目录\n    proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;\n    # 代理缓存存放路径，第一层目录只有一个字符，是由levels=1:2设置，总共二层目录，子目录名字由二个字符组成，键值名称为cache_one（名字随意），在内存中缓存的空间大小为200MB，1天内没有被访问的缓存将自动清除，硬盘缓存空间为30GB\n    # 注：proxy_temp_path与proxy_cache_path指定的路径必须在同一分区\n    \n    upstream backend_server {\n         server 192.168.0.54:80 weight=1 max_fails=2 fail_timeout=30s;\n    }\n    # 上游服务器节点，权重1（数字越大权重越大），30秒内访问失败次数大于等于2次，将在30秒内停止访问此节点，30秒后计数器清零，可以重新访问。\n    \n    server {\n        listen       80;\n        server_name  localhost 192.168.0.36;\n  \n        #charset koi8-r;\n        charset utf-8;\n        \n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n            proxy_next_upstream http_502 http_504 error timeout invalid_header;\n            # 如果后端服务器返回502、504、错误等错误，自动跳转到upstream负载均衡池中的另一台服务器，实现故障转义\n\t        proxy_cache cache_one\n            proxy_cache_valid 200 304 2h;\n            # 对不同的HTTP状态码设置不同的缓存时间\n            proxy_cache_key $host$uri$is_args$args;\n            # 以域名、URI、参数组合成Web缓存的Key值，nginx根据Key值哈希，存储缓存内容到二级缓存目录内\n\t        proxy_set_header Host $host;\n\t        proxy_set_header X-Forwarded-For $remote_addr;\n            proxy_pass http://backend_server;\n            # 指定跳转服务器池，名字要与upstream设定的相同\n            expires 1d;\n            # 用于清除缓存\n        }\n        \n        location ~ /purge(/.*) {\n        # 设置允许清除缓存的主机IP或网段\n            allow 127.0.0.1;\n\t        allow 192.168.0.0/24;\n\t        deny all;\n\t        proxy_cache_purge cache_one $host$1$is_args$args;\n\t}\n        \n        location ~ .*\\.(php|jsp|cgi)?$ {\n        # 扩展名以php、jsp、cgi结尾的动态应用程序不缓存\n    \t    proxy_set_header Host $host;\n            proxy_set_header X-Forwarded-For $remote_addr;\n            proxy_pass http://backend_server;\n\t}\n        access_log off;\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n[root@nginx conf]# useradd -M -s /sbin/nologin nginx\n[root@nginx conf]# mkdir /var/cache/nginx\n[root@nginx conf]# ulimit -SHn 65535\n[root@nginx conf]# nginx -t\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n[root@nginx conf]# netstat -antp |grep nginx\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      32540/nginx: master \n```\n### web端配置\n```javascript\n[root@web ~]# yum -y install httpd\n[root@web ~]# vim /etc/httpd/conf/httpd.conf\n···\nServerName www.example.com:80\n···\n[root@web ~]# echo \"liangzai\" >/var/www/html/index.html\n[root@web ~]# systemctl start httpd\n[root@web ~]# netstat -antp |grep httpd\ntcp6       0      0 :::80                   :::*                    LISTEN      28694/httpd         \n```\n###  验证\n####  测试Nginx缓存服务器\n```javascript\n[root@nginx conf]# ll /var/cache/nginx/proxy_cache/\ntotal 0\n```\n####  浏览器访问测试\n![](https://pic.downk.cc/item/5fedc3d33ffa7d37b3b2ac1b.png)\n####  查看Nginx服务器缓存\n```javascript\n[root@nginx conf]# ls /var/cache/nginx/proxy_cache/0/\n4c\n[root@nginx conf]# ls /var/cache/nginx/proxy_cache/0/4c\n29513b424f76af259b61d73cbe4df4c0\n```\n####  清除浏览器缓存\n![](https://pic.downk.cc/item/5fedc3d73ffa7d37b3b2b288.png)\n####  查看Nginx服务器缓存\n```javascript\n[root@nginx conf]# ls /var/cache/nginx/proxy_cache/0/4c\n\n```\n可以看到初步搭建成功\n\n","slug":"Nginx缓存加速","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf6000mtobv18te0pvp","content":"<h2 id=\"Nginx-缓存加速概述\"><a href=\"#Nginx-缓存加速概述\" class=\"headerlink\" title=\"Nginx 缓存加速概述\"></a>Nginx 缓存加速概述</h2><h3 id=\"Nginx支持类似Squid的缓存功能\"><a href=\"#Nginx支持类似Squid的缓存功能\" class=\"headerlink\" title=\"Nginx支持类似Squid的缓存功能\"></a>Nginx支持类似Squid的缓存功能</h3><ul>\n<li>把URL以及相关信息当成key,用MD5编码哈希后，把数据文件保存在硬盘上。只能为指定的URL或者状态码设置过期时间，并不支持类似squid的purge命令来手动清除指定缓存页面。</li>\n<li>可通过第三方的ngx_ cache_purge 来清除指定的URL缓存。</li>\n<li>Nginx的缓存加速功能是由proxy_cache和fastcgi_cache 两个功能模块完成的。<h3 id=\"Nginx缓存加速特点\"><a href=\"#Nginx缓存加速特点\" class=\"headerlink\" title=\"Nginx缓存加速特点\"></a>Nginx缓存加速特点</h3></li>\n<li>缓存功能十分稳定，运行速度不逊于squid, 对多核CPU的利用率比其他的开源软件也要好，支持高并发请求数，能同时承受更多的访问请求。<h2 id=\"Nginx-缓存加速案例\"><a href=\"#Nginx-缓存加速案例\" class=\"headerlink\" title=\"Nginx 缓存加速案例\"></a>Nginx 缓存加速案例</h2></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">nginx  ngx_cache_purge</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">web</td>\n<td align=\"center\">windows</td>\n<td align=\"center\">192.168.0.54</td>\n</tr>\n</tbody></table>\n<h3 id=\"Nginx端配置\"><a href=\"#Nginx端配置\" class=\"headerlink\" title=\"Nginx端配置\"></a>Nginx端配置</h3><h4 id=\"源码安装Nginx\"><a href=\"#源码安装Nginx\" class=\"headerlink\" title=\"源码安装Nginx\"></a>源码安装Nginx</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br><span class=\"line\">[root@nginx ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//nginx.org/download/nginx-1.18.0.tar.gz</span></span><br><span class=\"line\">[root@nginx ~]# wget <span class=\"attr\">http</span>:<span class=\"comment\">//labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz</span></span><br><span class=\"line\">[root@nginx ~]# ls</span><br><span class=\"line\">nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span>  ngx_cache_purge-<span class=\"number\">2.3</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br><span class=\"line\">[root@nginx ~]# tar -zvxf nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@nginx ~]# tar -zvxf ngx_cache_purge-<span class=\"number\">2.3</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@nginx ~]# cd /usr/local/nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>/</span><br><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ./configure --prefix=<span class=\"regexp\">/usr/</span>local/nginx --user=nginx --group=nginx --<span class=\"keyword\">with</span>-http_stub_status_module --<span class=\"keyword\">with</span>-pcre --add-<span class=\"variable language_\">module</span>=<span class=\"regexp\">/usr/</span>local/ngx_cache_purge-<span class=\"number\">2.3</span>/</span><br><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# cd /usr/local/nginx/conf/</span><br><span class=\"line\">[root@nginx conf]# vim nginx.<span class=\"property\">conf</span></span><br><span class=\"line\">#user  nobody;</span><br><span class=\"line\">user nginx nginx;</span><br><span class=\"line\"># 以nginx用户和组运行</span><br><span class=\"line\"></span><br><span class=\"line\">worker_processes  <span class=\"number\">1</span>;</span><br><span class=\"line\"># 启动进程数，根据物理<span class=\"variable constant_\">CPU</span>个数设置</span><br><span class=\"line\"></span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  notice;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  info;</span><br><span class=\"line\">error_log  logs/error.<span class=\"property\">log</span>  crit;</span><br><span class=\"line\"># 定义错误日志，级别为crit</span><br><span class=\"line\"></span><br><span class=\"line\">pid        logs/nginx.<span class=\"property\">pid</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">worker_rlimit_nofile <span class=\"number\">65535</span>;</span><br><span class=\"line\"># 打开文件的最大句柄数，最好与ulimit -n的值保持一致，使用ulimit -<span class=\"title class_\">SHn</span> 进行设置</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    use epoll;</span><br><span class=\"line\">    # <span class=\"title class_\">Nginx</span> 使用了最新的epoll网络I/O模型</span><br><span class=\"line\">    worker_connections  <span class=\"number\">65535</span>;</span><br><span class=\"line\">    # 每个工作进程允许最大的同时连接数</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.<span class=\"property\">types</span>;</span><br><span class=\"line\">    # mime.<span class=\"property\">types</span> 内定义各文件类型映像</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    # 设置默认类型是二进制流，若没有设置，比如加载<span class=\"variable constant_\">PHP</span>时，是不预解析，用浏览器访问则出现下载窗口</span><br><span class=\"line\">    #log_format  main  <span class=\"string\">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    #access_log  logs/access.<span class=\"property\">log</span>  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    # 打开系统函数<span class=\"title function_\">sendfile</span>()，支持下载</span><br><span class=\"line\">    tcp_nopush     on;</span><br><span class=\"line\">    # 只有先打开<span class=\"title class_\">Linux</span>下的tcp_cork,sendfile打开时才有效</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  <span class=\"number\">0</span>;</span><br><span class=\"line\">    keepalive_timeout  <span class=\"number\">65</span>;</span><br><span class=\"line\">    # 会话保持时间，设置的低一些可以让nginx持续工作的时间更长</span><br><span class=\"line\">    </span><br><span class=\"line\">    #gzip  on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    tcp_nodelay on;</span><br><span class=\"line\">    # 不要缓存数据，而是一段一段的发送——当需要及时发送数据时，就应该设置这个属性，这样发送一小块数据信息时就不能立即得到返回值</span><br><span class=\"line\">    client_body_buffer_size 512k;</span><br><span class=\"line\">    # 指定连接请求实体的缓存大小</span><br><span class=\"line\">    proxy_connect_timeout <span class=\"number\">5</span>;</span><br><span class=\"line\">    # 代理连接超时时间，单位秒</span><br><span class=\"line\">    proxy_read_timeout <span class=\"number\">60</span>;</span><br><span class=\"line\">    # 代理接收超时</span><br><span class=\"line\">    proxy_send_timeout <span class=\"number\">5</span>;</span><br><span class=\"line\">    # 代理发送超时</span><br><span class=\"line\">    proxy_buffer_size 16k;</span><br><span class=\"line\">    # 代理缓存文件大小</span><br><span class=\"line\">    proxy_buffers <span class=\"number\">4</span> 64k;</span><br><span class=\"line\">    # 代理缓存区的数量及大小，默认一个缓冲区大小与页面大小相等</span><br><span class=\"line\">    proxy_busy_buffers_size 128k;</span><br><span class=\"line\">    # 高负荷下缓存区大小</span><br><span class=\"line\">    proxy_temp_file_write_size 128k;   </span><br><span class=\"line\">    # 代理临时文件大小</span><br><span class=\"line\">    proxy_temp_path /<span class=\"keyword\">var</span>/cache/nginx/cache_temp;</span><br><span class=\"line\">    # 代理临时文件存放目录</span><br><span class=\"line\">    proxy_cache_path /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=<span class=\"attr\">cache_one</span>:200m inactive=1d max_size=30g;</span><br><span class=\"line\">    # 代理缓存存放路径，第一层目录只有一个字符，是由levels=<span class=\"number\">1</span>:<span class=\"number\">2</span>设置，总共二层目录，子目录名字由二个字符组成，键值名称为cache_one（名字随意），在内存中缓存的空间大小为200MB，<span class=\"number\">1</span>天内没有被访问的缓存将自动清除，硬盘缓存空间为30GB</span><br><span class=\"line\">    # 注：proxy_temp_path与proxy_cache_path指定的路径必须在同一分区</span><br><span class=\"line\">    </span><br><span class=\"line\">    upstream backend_server &#123;</span><br><span class=\"line\">         server <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.54</span>:<span class=\"number\">80</span> weight=<span class=\"number\">1</span> max_fails=<span class=\"number\">2</span> fail_timeout=30s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # 上游服务器节点，权重<span class=\"number\">1</span>（数字越大权重越大），<span class=\"number\">30</span>秒内访问失败次数大于等于<span class=\"number\">2</span>次，将在<span class=\"number\">30</span>秒内停止访问此节点，<span class=\"number\">30</span>秒后计数器清零，可以重新访问。</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       <span class=\"number\">80</span>;</span><br><span class=\"line\">        server_name  localhost <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\">        charset utf-<span class=\"number\">8</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #access_log  logs/host.<span class=\"property\">access</span>.<span class=\"property\">log</span>  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span>;</span><br><span class=\"line\">            proxy_next_upstream http_502 http_504 error timeout invalid_header;</span><br><span class=\"line\">            # 如果后端服务器返回<span class=\"number\">502</span>、<span class=\"number\">504</span>、错误等错误，自动跳转到upstream负载均衡池中的另一台服务器，实现故障转义</span><br><span class=\"line\">\t        proxy_cache cache_one</span><br><span class=\"line\">            proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">304</span> 2h;</span><br><span class=\"line\">            # 对不同的<span class=\"variable constant_\">HTTP</span>状态码设置不同的缓存时间</span><br><span class=\"line\">            proxy_cache_key $host$uri$is_args$args;</span><br><span class=\"line\">            # 以域名、<span class=\"variable constant_\">URI</span>、参数组合成<span class=\"title class_\">Web</span>缓存的<span class=\"title class_\">Key</span>值，nginx根据<span class=\"title class_\">Key</span>值哈希，存储缓存内容到二级缓存目录内</span><br><span class=\"line\">\t        proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">\t        proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">            proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//backend_server;</span></span><br><span class=\"line\">            # 指定跳转服务器池，名字要与upstream设定的相同</span><br><span class=\"line\">            expires 1d;</span><br><span class=\"line\">            # 用于清除缓存</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location ~ <span class=\"regexp\">/purge(/</span>.*) &#123;</span><br><span class=\"line\">        # 设置允许清除缓存的主机<span class=\"variable constant_\">IP</span>或网段</span><br><span class=\"line\">            allow <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>;</span><br><span class=\"line\">\t        allow <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">24</span>;</span><br><span class=\"line\">\t        deny all;</span><br><span class=\"line\">\t        proxy_cache_purge cache_one $host$1$is_args$args;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location ~ .*\\.(php|jsp|cgi)?$ &#123;</span><br><span class=\"line\">        # 扩展名以php、jsp、cgi结尾的动态应用程序不缓存</span><br><span class=\"line\">    \t    proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">            proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">            proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//backend_server;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        access_log off;</span><br><span class=\"line\">        #error_page  <span class=\"number\">404</span>              /<span class=\"number\">404.</span>html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the <span class=\"keyword\">static</span> page /50x.<span class=\"property\">html</span></span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.<span class=\"property\">html</span>;</span><br><span class=\"line\">        location = /50x.<span class=\"property\">html</span> &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[root@nginx conf]# useradd -M -s /sbin/nologin nginx</span><br><span class=\"line\">[root@nginx conf]# mkdir /<span class=\"keyword\">var</span>/cache/nginx</span><br><span class=\"line\">[root@nginx conf]# ulimit -<span class=\"title class_\">SHn</span> <span class=\"number\">65535</span></span><br><span class=\"line\">[root@nginx conf]# nginx -t</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: the configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> syntax is ok</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> test is successful</span><br><span class=\"line\">[root@nginx conf]# netstat -antp |grep nginx</span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">80</span>              <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">32540</span>/<span class=\"attr\">nginx</span>: master </span><br></pre></td></tr></table></figure>\n<h3 id=\"web端配置\"><a href=\"#web端配置\" class=\"headerlink\" title=\"web端配置\"></a>web端配置</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@web ~]# yum -y install httpd</span><br><span class=\"line\">[root@web ~]# vim /etc/httpd/conf/httpd.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"title class_\">ServerName</span> www.<span class=\"property\">example</span>.<span class=\"property\">com</span>:<span class=\"number\">80</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@web ~]# echo <span class=\"string\">&quot;liangzai&quot;</span> &gt;<span class=\"regexp\">/var/</span>www/html/index.<span class=\"property\">html</span></span><br><span class=\"line\">[root@web ~]# systemctl start httpd</span><br><span class=\"line\">[root@web ~]# netstat -antp |grep httpd</span><br><span class=\"line\">tcp6       <span class=\"number\">0</span>      <span class=\"number\">0</span> :::<span class=\"number\">80</span>                   :::*                    <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">28694</span>/httpd         </span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><h4 id=\"测试Nginx缓存服务器\"><a href=\"#测试Nginx缓存服务器\" class=\"headerlink\" title=\"测试Nginx缓存服务器\"></a>测试Nginx缓存服务器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx conf]# ll /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/</span><br><span class=\"line\">total <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"浏览器访问测试\"><a href=\"#浏览器访问测试\" class=\"headerlink\" title=\"浏览器访问测试\"></a>浏览器访问测试</h4><p><img src=\"https://pic.downk.cc/item/5fedc3d33ffa7d37b3b2ac1b.png\"></p>\n<h4 id=\"查看Nginx服务器缓存\"><a href=\"#查看Nginx服务器缓存\" class=\"headerlink\" title=\"查看Nginx服务器缓存\"></a>查看Nginx服务器缓存</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx conf]# ls /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/<span class=\"number\">0</span>/</span><br><span class=\"line\">4c</span><br><span class=\"line\">[root@nginx conf]# ls /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/<span class=\"number\">0</span>/4c</span><br><span class=\"line\">29513b424f76af259b61d73cbe4df4c0</span><br></pre></td></tr></table></figure>\n<h4 id=\"清除浏览器缓存\"><a href=\"#清除浏览器缓存\" class=\"headerlink\" title=\"清除浏览器缓存\"></a>清除浏览器缓存</h4><p><img src=\"https://pic.downk.cc/item/5fedc3d73ffa7d37b3b2b288.png\"></p>\n<h4 id=\"查看Nginx服务器缓存-1\"><a href=\"#查看Nginx服务器缓存-1\" class=\"headerlink\" title=\"查看Nginx服务器缓存\"></a>查看Nginx服务器缓存</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx conf]# ls /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/<span class=\"number\">0</span>/4c</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>可以看到初步搭建成功</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Nginx-缓存加速概述\"><a href=\"#Nginx-缓存加速概述\" class=\"headerlink\" title=\"Nginx 缓存加速概述\"></a>Nginx 缓存加速概述</h2><h3 id=\"Nginx支持类似Squid的缓存功能\"><a href=\"#Nginx支持类似Squid的缓存功能\" class=\"headerlink\" title=\"Nginx支持类似Squid的缓存功能\"></a>Nginx支持类似Squid的缓存功能</h3><ul>\n<li>把URL以及相关信息当成key,用MD5编码哈希后，把数据文件保存在硬盘上。只能为指定的URL或者状态码设置过期时间，并不支持类似squid的purge命令来手动清除指定缓存页面。</li>\n<li>可通过第三方的ngx_ cache_purge 来清除指定的URL缓存。</li>\n<li>Nginx的缓存加速功能是由proxy_cache和fastcgi_cache 两个功能模块完成的。<h3 id=\"Nginx缓存加速特点\"><a href=\"#Nginx缓存加速特点\" class=\"headerlink\" title=\"Nginx缓存加速特点\"></a>Nginx缓存加速特点</h3></li>\n<li>缓存功能十分稳定，运行速度不逊于squid, 对多核CPU的利用率比其他的开源软件也要好，支持高并发请求数，能同时承受更多的访问请求。<h2 id=\"Nginx-缓存加速案例\"><a href=\"#Nginx-缓存加速案例\" class=\"headerlink\" title=\"Nginx 缓存加速案例\"></a>Nginx 缓存加速案例</h2></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">nginx  ngx_cache_purge</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">web</td>\n<td align=\"center\">windows</td>\n<td align=\"center\">192.168.0.54</td>\n</tr>\n</tbody></table>\n<h3 id=\"Nginx端配置\"><a href=\"#Nginx端配置\" class=\"headerlink\" title=\"Nginx端配置\"></a>Nginx端配置</h3><h4 id=\"源码安装Nginx\"><a href=\"#源码安装Nginx\" class=\"headerlink\" title=\"源码安装Nginx\"></a>源码安装Nginx</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br><span class=\"line\">[root@nginx ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//nginx.org/download/nginx-1.18.0.tar.gz</span></span><br><span class=\"line\">[root@nginx ~]# wget <span class=\"attr\">http</span>:<span class=\"comment\">//labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz</span></span><br><span class=\"line\">[root@nginx ~]# ls</span><br><span class=\"line\">nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span>  ngx_cache_purge-<span class=\"number\">2.3</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@nginx ~]# yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br><span class=\"line\">[root@nginx ~]# tar -zvxf nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@nginx ~]# tar -zvxf ngx_cache_purge-<span class=\"number\">2.3</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@nginx ~]# cd /usr/local/nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>/</span><br><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ./configure --prefix=<span class=\"regexp\">/usr/</span>local/nginx --user=nginx --group=nginx --<span class=\"keyword\">with</span>-http_stub_status_module --<span class=\"keyword\">with</span>-pcre --add-<span class=\"variable language_\">module</span>=<span class=\"regexp\">/usr/</span>local/ngx_cache_purge-<span class=\"number\">2.3</span>/</span><br><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx nginx-<span class=\"number\">1.18</span><span class=\"number\">.0</span>]# cd /usr/local/nginx/conf/</span><br><span class=\"line\">[root@nginx conf]# vim nginx.<span class=\"property\">conf</span></span><br><span class=\"line\">#user  nobody;</span><br><span class=\"line\">user nginx nginx;</span><br><span class=\"line\"># 以nginx用户和组运行</span><br><span class=\"line\"></span><br><span class=\"line\">worker_processes  <span class=\"number\">1</span>;</span><br><span class=\"line\"># 启动进程数，根据物理<span class=\"variable constant_\">CPU</span>个数设置</span><br><span class=\"line\"></span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  notice;</span><br><span class=\"line\">#error_log  logs/error.<span class=\"property\">log</span>  info;</span><br><span class=\"line\">error_log  logs/error.<span class=\"property\">log</span>  crit;</span><br><span class=\"line\"># 定义错误日志，级别为crit</span><br><span class=\"line\"></span><br><span class=\"line\">pid        logs/nginx.<span class=\"property\">pid</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">worker_rlimit_nofile <span class=\"number\">65535</span>;</span><br><span class=\"line\"># 打开文件的最大句柄数，最好与ulimit -n的值保持一致，使用ulimit -<span class=\"title class_\">SHn</span> 进行设置</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    use epoll;</span><br><span class=\"line\">    # <span class=\"title class_\">Nginx</span> 使用了最新的epoll网络I/O模型</span><br><span class=\"line\">    worker_connections  <span class=\"number\">65535</span>;</span><br><span class=\"line\">    # 每个工作进程允许最大的同时连接数</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.<span class=\"property\">types</span>;</span><br><span class=\"line\">    # mime.<span class=\"property\">types</span> 内定义各文件类型映像</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    # 设置默认类型是二进制流，若没有设置，比如加载<span class=\"variable constant_\">PHP</span>时，是不预解析，用浏览器访问则出现下载窗口</span><br><span class=\"line\">    #log_format  main  <span class=\"string\">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\">    #                  <span class=\"string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    #access_log  logs/access.<span class=\"property\">log</span>  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    # 打开系统函数<span class=\"title function_\">sendfile</span>()，支持下载</span><br><span class=\"line\">    tcp_nopush     on;</span><br><span class=\"line\">    # 只有先打开<span class=\"title class_\">Linux</span>下的tcp_cork,sendfile打开时才有效</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  <span class=\"number\">0</span>;</span><br><span class=\"line\">    keepalive_timeout  <span class=\"number\">65</span>;</span><br><span class=\"line\">    # 会话保持时间，设置的低一些可以让nginx持续工作的时间更长</span><br><span class=\"line\">    </span><br><span class=\"line\">    #gzip  on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    tcp_nodelay on;</span><br><span class=\"line\">    # 不要缓存数据，而是一段一段的发送——当需要及时发送数据时，就应该设置这个属性，这样发送一小块数据信息时就不能立即得到返回值</span><br><span class=\"line\">    client_body_buffer_size 512k;</span><br><span class=\"line\">    # 指定连接请求实体的缓存大小</span><br><span class=\"line\">    proxy_connect_timeout <span class=\"number\">5</span>;</span><br><span class=\"line\">    # 代理连接超时时间，单位秒</span><br><span class=\"line\">    proxy_read_timeout <span class=\"number\">60</span>;</span><br><span class=\"line\">    # 代理接收超时</span><br><span class=\"line\">    proxy_send_timeout <span class=\"number\">5</span>;</span><br><span class=\"line\">    # 代理发送超时</span><br><span class=\"line\">    proxy_buffer_size 16k;</span><br><span class=\"line\">    # 代理缓存文件大小</span><br><span class=\"line\">    proxy_buffers <span class=\"number\">4</span> 64k;</span><br><span class=\"line\">    # 代理缓存区的数量及大小，默认一个缓冲区大小与页面大小相等</span><br><span class=\"line\">    proxy_busy_buffers_size 128k;</span><br><span class=\"line\">    # 高负荷下缓存区大小</span><br><span class=\"line\">    proxy_temp_file_write_size 128k;   </span><br><span class=\"line\">    # 代理临时文件大小</span><br><span class=\"line\">    proxy_temp_path /<span class=\"keyword\">var</span>/cache/nginx/cache_temp;</span><br><span class=\"line\">    # 代理临时文件存放目录</span><br><span class=\"line\">    proxy_cache_path /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache levels=<span class=\"number\">1</span>:<span class=\"number\">2</span> keys_zone=<span class=\"attr\">cache_one</span>:200m inactive=1d max_size=30g;</span><br><span class=\"line\">    # 代理缓存存放路径，第一层目录只有一个字符，是由levels=<span class=\"number\">1</span>:<span class=\"number\">2</span>设置，总共二层目录，子目录名字由二个字符组成，键值名称为cache_one（名字随意），在内存中缓存的空间大小为200MB，<span class=\"number\">1</span>天内没有被访问的缓存将自动清除，硬盘缓存空间为30GB</span><br><span class=\"line\">    # 注：proxy_temp_path与proxy_cache_path指定的路径必须在同一分区</span><br><span class=\"line\">    </span><br><span class=\"line\">    upstream backend_server &#123;</span><br><span class=\"line\">         server <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.54</span>:<span class=\"number\">80</span> weight=<span class=\"number\">1</span> max_fails=<span class=\"number\">2</span> fail_timeout=30s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # 上游服务器节点，权重<span class=\"number\">1</span>（数字越大权重越大），<span class=\"number\">30</span>秒内访问失败次数大于等于<span class=\"number\">2</span>次，将在<span class=\"number\">30</span>秒内停止访问此节点，<span class=\"number\">30</span>秒后计数器清零，可以重新访问。</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       <span class=\"number\">80</span>;</span><br><span class=\"line\">        server_name  localhost <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\">        charset utf-<span class=\"number\">8</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #access_log  logs/host.<span class=\"property\">access</span>.<span class=\"property\">log</span>  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.<span class=\"property\">html</span> index.<span class=\"property\">htm</span>;</span><br><span class=\"line\">            proxy_next_upstream http_502 http_504 error timeout invalid_header;</span><br><span class=\"line\">            # 如果后端服务器返回<span class=\"number\">502</span>、<span class=\"number\">504</span>、错误等错误，自动跳转到upstream负载均衡池中的另一台服务器，实现故障转义</span><br><span class=\"line\">\t        proxy_cache cache_one</span><br><span class=\"line\">            proxy_cache_valid <span class=\"number\">200</span> <span class=\"number\">304</span> 2h;</span><br><span class=\"line\">            # 对不同的<span class=\"variable constant_\">HTTP</span>状态码设置不同的缓存时间</span><br><span class=\"line\">            proxy_cache_key $host$uri$is_args$args;</span><br><span class=\"line\">            # 以域名、<span class=\"variable constant_\">URI</span>、参数组合成<span class=\"title class_\">Web</span>缓存的<span class=\"title class_\">Key</span>值，nginx根据<span class=\"title class_\">Key</span>值哈希，存储缓存内容到二级缓存目录内</span><br><span class=\"line\">\t        proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">\t        proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">            proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//backend_server;</span></span><br><span class=\"line\">            # 指定跳转服务器池，名字要与upstream设定的相同</span><br><span class=\"line\">            expires 1d;</span><br><span class=\"line\">            # 用于清除缓存</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location ~ <span class=\"regexp\">/purge(/</span>.*) &#123;</span><br><span class=\"line\">        # 设置允许清除缓存的主机<span class=\"variable constant_\">IP</span>或网段</span><br><span class=\"line\">            allow <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>;</span><br><span class=\"line\">\t        allow <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">24</span>;</span><br><span class=\"line\">\t        deny all;</span><br><span class=\"line\">\t        proxy_cache_purge cache_one $host$1$is_args$args;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location ~ .*\\.(php|jsp|cgi)?$ &#123;</span><br><span class=\"line\">        # 扩展名以php、jsp、cgi结尾的动态应用程序不缓存</span><br><span class=\"line\">    \t    proxy_set_header <span class=\"title class_\">Host</span> $host;</span><br><span class=\"line\">            proxy_set_header X-<span class=\"title class_\">Forwarded</span>-<span class=\"title class_\">For</span> $remote_addr;</span><br><span class=\"line\">            proxy_pass <span class=\"attr\">http</span>:<span class=\"comment\">//backend_server;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">        access_log off;</span><br><span class=\"line\">        #error_page  <span class=\"number\">404</span>              /<span class=\"number\">404.</span>html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect server error pages to the <span class=\"keyword\">static</span> page /50x.<span class=\"property\">html</span></span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span>  /50x.<span class=\"property\">html</span>;</span><br><span class=\"line\">        location = /50x.<span class=\"property\">html</span> &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[root@nginx conf]# useradd -M -s /sbin/nologin nginx</span><br><span class=\"line\">[root@nginx conf]# mkdir /<span class=\"keyword\">var</span>/cache/nginx</span><br><span class=\"line\">[root@nginx conf]# ulimit -<span class=\"title class_\">SHn</span> <span class=\"number\">65535</span></span><br><span class=\"line\">[root@nginx conf]# nginx -t</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: the configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> syntax is ok</span><br><span class=\"line\"><span class=\"attr\">nginx</span>: configuration file /usr/local/nginx/conf/nginx.<span class=\"property\">conf</span> test is successful</span><br><span class=\"line\">[root@nginx conf]# netstat -antp |grep nginx</span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">80</span>              <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">32540</span>/<span class=\"attr\">nginx</span>: master </span><br></pre></td></tr></table></figure>\n<h3 id=\"web端配置\"><a href=\"#web端配置\" class=\"headerlink\" title=\"web端配置\"></a>web端配置</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@web ~]# yum -y install httpd</span><br><span class=\"line\">[root@web ~]# vim /etc/httpd/conf/httpd.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"title class_\">ServerName</span> www.<span class=\"property\">example</span>.<span class=\"property\">com</span>:<span class=\"number\">80</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@web ~]# echo <span class=\"string\">&quot;liangzai&quot;</span> &gt;<span class=\"regexp\">/var/</span>www/html/index.<span class=\"property\">html</span></span><br><span class=\"line\">[root@web ~]# systemctl start httpd</span><br><span class=\"line\">[root@web ~]# netstat -antp |grep httpd</span><br><span class=\"line\">tcp6       <span class=\"number\">0</span>      <span class=\"number\">0</span> :::<span class=\"number\">80</span>                   :::*                    <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">28694</span>/httpd         </span><br></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><h4 id=\"测试Nginx缓存服务器\"><a href=\"#测试Nginx缓存服务器\" class=\"headerlink\" title=\"测试Nginx缓存服务器\"></a>测试Nginx缓存服务器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx conf]# ll /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/</span><br><span class=\"line\">total <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"浏览器访问测试\"><a href=\"#浏览器访问测试\" class=\"headerlink\" title=\"浏览器访问测试\"></a>浏览器访问测试</h4><p><img src=\"https://pic.downk.cc/item/5fedc3d33ffa7d37b3b2ac1b.png\"></p>\n<h4 id=\"查看Nginx服务器缓存\"><a href=\"#查看Nginx服务器缓存\" class=\"headerlink\" title=\"查看Nginx服务器缓存\"></a>查看Nginx服务器缓存</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx conf]# ls /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/<span class=\"number\">0</span>/</span><br><span class=\"line\">4c</span><br><span class=\"line\">[root@nginx conf]# ls /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/<span class=\"number\">0</span>/4c</span><br><span class=\"line\">29513b424f76af259b61d73cbe4df4c0</span><br></pre></td></tr></table></figure>\n<h4 id=\"清除浏览器缓存\"><a href=\"#清除浏览器缓存\" class=\"headerlink\" title=\"清除浏览器缓存\"></a>清除浏览器缓存</h4><p><img src=\"https://pic.downk.cc/item/5fedc3d73ffa7d37b3b2b288.png\"></p>\n<h4 id=\"查看Nginx服务器缓存-1\"><a href=\"#查看Nginx服务器缓存-1\" class=\"headerlink\" title=\"查看Nginx服务器缓存\"></a>查看Nginx服务器缓存</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx conf]# ls /<span class=\"keyword\">var</span>/cache/nginx/proxy_cache/<span class=\"number\">0</span>/4c</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>可以看到初步搭建成功</p>\n"},{"title":"Redis介绍与安装","date":"2020-12-19T16:00:00.000Z","updated":"2022-11-28T13:55:13.345Z","description":null,"cover":"https://pic.imgdb.cn/item/6384a30716f2c2beb1d27190.jpg","_content":"## Redis简介\nRedis是一个开源(BSD许可),内存数据结构存储，用作数据库、缓存和消息代理。它 支持数据结构很多，如strings, hashes, lists, sets 等等。Redis 具有内置复制，Lua 脚本，LRU 清除缓存，事务和不同级别的磁盘持久性，并通过Redis Sentinel 提供高可用性，以及使用 Redis Cluster自动分区。\n\nRedis是当前比较热门的NOSQL系统之一， 它是一个key-value存储系统。和Memcache类似，但很大程度补偿了Memcache的不足，它支持存储的value类型相对更多，包括string 、list、set、zset和hash。这些数据类型都支持push/pop、add/remove 及取交集并集和差集及 更丰富的操作。在此基础上，Redis 支持各种不同方式的排序。\n\n和Memcache 一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能 将数据缓存到内存中，无法自动定期写入硬盘，这就表示 一旦断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。\n\n参考[Redis官网](https://redis.io/)\n##  Redis安装\n###  环境安装\n```javascript\n[root@jjh ~]# yum -y install gcc-c++ centos-release-scl\n[root@jjh ~]# yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n# 升级gcc版本到9.0以上\n[root@jjh ~]# scl enable devtoolset-9 bash\n# 需要注意的是scl命令启用只是临时的，退出shell或重启就会恢复原系统gcc版本。如果要长期使用gcc 9.0的话：\n[root@jjh ~]# echo \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile\n# 这样退出shell重新打开就是新版的gcc了，以下其他版本同理，修改devtoolset版本号即可\n```\n### 下载Redis 6.0.9\n```javascript\n[root@jjh ~]# wget https://download.redis.io/releases/redis-6.0.9.tar.gz\n[root@jjh ~]# tar -zxvf redis-6.0.9.tar.gz -C /usr/local/\n[root@jjh ~]# cd /usr/local/redis-6.0.9/\n[root@jjh ~]# ln -s /usr/local/redis-6.0.9/ /usr/local/redis\n[root@jjh redis-6.0.9]# yum -y install tcl\n[root@jjh redis-6.0.9]#  make\n[root@jjh redis-6.0.9]#  make test\n···\n\\o/ All tests passed without errors!\n\nCleanup: may take some time... OK\n···\n[root@jjh redis-6.0.9]# make install\n[root@jjh redis-6.0.9]# mkdir conf bin\n[root@jjh redis-6.0.9]# cp redis.conf sentinel.conf conf/\n[root@jjh redis-6.0.9]# find src/ -perm 755 -type f -exec cp {} bin/ \\;\n[root@jjh redis-6.0.9]# ls bin/\nredis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server\n[root@jjh redis-6.0.9]# echo 'PATH=$PATH:/usr/local/redis/bin/' >> /etc/profile\n[root@jjh redis-6.0.9]# bash /etc/profile\n[root@jjh redis-6.0.9]# redis-server\n15486:C 20 Dec 2020 15:53:14.105 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n15486:C 20 Dec 2020 15:53:14.105 # Redis version=6.0.9, bits=64, commit=00000000, modified=0, pid=15486, just started\n15486:C 20 Dec 2020 15:53:14.105 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n                _._                                                  \n           _.-``__ ''-._                                             \n      _.-``    `.  `_.  ''-._           Redis 6.0.9 (00000000/0) 64 bit\n  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n (    '      ,       .-`  | `,    )     Running in standalone mode\n |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n |    `-._   `._    /     _.-'    |     PID: 15486\n  `-._    `-._  `-./  _.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |           http://redis.io        \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |                                  \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n      `-._    `-.__.-'    _.-'                                       \n          `-._        _.-'                                           \n              `-.__.-'                                               \n\n15486:M 20 Dec 2020 15:53:14.106 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\n15486:M 20 Dec 2020 15:53:14.106 # Server initialized\n15486:M 20 Dec 2020 15:53:14.106 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n15486:M 20 Dec 2020 15:53:14.106 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo madvise > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled (set to 'madvise' or 'never').\n15486:M 20 Dec 2020 15:53:14.106 * Ready to accept connections\n```\n### 再开一个终端查看下端口\n```javascript\n[root@jjh ~]# netstat -antp|grep :6379\ntcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      15486/redis-server  \ntcp6       0      0 :::6379                 :::*                    LISTEN      15486/redis-server  \n```\n### 修改配置文件\n```javascript\n[root@jjh redis-6.0.9]# vim conf/redis.conf \n···\n68 bind 0.0.0.0\n89 protected-mode no\n224 daemonize yes\n255 loglevel warning\n260 logfile \"/usr/local/redis/redis.log\"\n283 always-show-logo no\n365 dir /usr/local/redis/\n···\n[root@jjh redis-6.0.9]# redis-server /usr/local/redis/conf/redis.conf \n[root@jjh redis-6.0.9]# netstat -antp|grep :6379\ntcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      15836/redis-server  \n```\n### 客户端测试\n```javascript\n[root@jjh redis-6.0.9]# redis-cli\n127.0.0.1:6379> set NAME jjh\nOK\n127.0.0.1:6379> get NAME\n\"jjh\"\n```\n##  Redis 持久化\nredis支持两种持久化方式，一种是Snapshotting (快照)也是默认方式，另一种是 Append-only file (缩写aof)的方式。\n###  Snapshotting\n快照是默认的持久化方式。这种方式是就是将内存中数据以快照的方式写入到二进制文件中，默认的文件名为dump.rdb。可以通过配置设置自动做快照持久化的方式。我们可以配置redis在n秒内如果超过m个key被修改就自动做快照，下面是默认的快照保存配置。\n\n* save 900 1        #900秒内如果超过1个key被修改，则发起快照保存\n* save 300 10      #300秒内容如超过10个key被修改，则发起快照保存\n* save 60 10000  #60秒内容如超过100000个key被修改，则发起快照保存\n```javascript\n[root@jjh ~]# cat /usr/local/redis/conf/redis.conf \n···\n307 save 900 1\n308 save 300 10\n309 save 60 10000\n\n342 dbfilename dump.rdb\n···\n```\n如果需要恢复数据，只需要将备份文件（dump.rdb）移动到 redis 安装目录并启动服务即可。\n想知道工作目录在哪\n```javascript\n[root@jjh ~]# redis-cli\n127.0.0.1:6379> config get dir\n1) \"dir\"\n2) \"/usr/local/redis-6.0.9\"\n```\nsave操作是在主线程中保存快照的，由于redis是用一个主线程来处理，这种方式会阻塞所有 client 请求，所以不推荐使用。另一点需要注意的是，每次快照持久化都是将内存数据完整写入到磁盘， 并不是增量的只同步脏数据。如果数据量大且写操作比较多，必然会引起大量的磁盘 io 操作，可能会严重影响性能。\n\n另外由于快照方式存在一定间隔时间，如果 redis 意外 down 掉，就会丢失最后一次快照后的所有修改。\n### Append-only file\naof 比快照方式有更好的持久化性，在使用 aof 持久化方式时，redis会将每一个收到的写命令都通过 write 函数追加到文件中(默认是appendonly.aof)。 当 redis 重启时会通过重新执行文件中保存的写命令来在内存中重建整个数据库的内容。\n\n由于 os 会在内核中缓存 write 做的修改，所以可能不是立即写到磁盘上。这样aof方式的持久化也还是有可能会丢失部分修改。不过我们可以通过配置文件告诉redis我们想要通过 fsync 函数强制 os 写入到磁盘的时机。有三种方式如下(默认是:每秒 fsync 一次）\n\nappendonly yes    //启用 aof 持久化方式\n* appendfsync always      //每次收到写命令就立即强制写入磁盘，最慢的，但是保证完全的持久化，不推荐使用\n* appendfsync everysec   //每秒钟强制写入磁盘次，在性能和持久化方面做了很好的折中，推荐\n* appendfsync no             //完全依赖os,性能最好持久化没保证\n\naof 的方式也同时带来了另一个问题：持久化文件会变的越来越大。例如我们调用 incr test 命令100次，文件中必须保存全部的100条命令，其实有99条都是多余的。因为要恢复数据库的状态其实文件中保存一条 set test 100就够了。为了压缩 aof 的持久化文件。redis 提供了 bgrewriteaof 命令。收到此命令 redis 将使用与快照类似的方式将内存中的数据以命令的方式保存到临时文件中，最后替换原来的文件。\n```javascript\n[root@jjh ~]# cat /usr/local/redis/conf/redis.conf \n···\n307 #save 900 1\n308 #save 300 10\n309 #save 60 10000\n\n1089 appendonly yes\n1093 appendfilename \"appendonly.aof\"\n1119 appendfsync everysec\n···\n```\n##  Redis 主从复制\n192.168.0.36 jjh\n192.168.0.42 jjh2\n需要注意，主从复制的开启，完全是在从节点发起的，不需要我们在主节点做任何事情\n从节点开启主从复制，有3种方式：\n* 配置文件\n在从服务器的配置文件中加入：slaveof <masterip> <masterport>\n* 启动命令\nredis-server启动命令后加入 --slaveof <masterip> <masterport>\n* 客户端命令\nRedis服务器启动后，直接通过客户端执行命令：slaveof <masterip> <masterport>，则该Redis实例成为从节点\n\n上述3种方式是等效的，下面以客户端命令的方式为例，看一下当执行了slaveof后，Redis主节点和从节点的变化\n```javascript\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> slaveof 192.168.0.36 6379\nOK\n```\n在 master 上插入数据\n```javascript\n[root@jjh ~]# redis-cli\n127.0.0.1:6379> set file 1.txt\nOK\n127.0.0.1:6379> get file\n\"1.txt\"\n```\n查看是否成功\n```javascript\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> get file\n\"1.txt\"\n```\n##  Redis Sentinel (哨兵)\nRedis Sentinl 为 Redis 提供高可用性。实际上，这意味使用 Sentinel 可以创建一个Redis 部署，可以在没有人为干预的情况下抵御某些类型的故障。Redts Sentinel 还提供其他附属任务，如监控、通知、并充当客户端的配置提供程序。\n\nSentinel 功能：\n* 监控：Sentinel 会不断检查主实例和从属实例是否按预期工作。\n* 通知：Sentinel可以通过API通知系统管理员，另一台计算机程序，其中一个受监控的Redis实例出现问题。\n* 自动故障转移：如果主服务器未按预期工作，Sentinel 可以启动故障转移过程，其中从服务器被提升为主服务器，其他其他服务器将重新配置为使用新主服务器，并且使用 Redis 服务器的应用程序会通知有关新服务器的地址连接。\n* 配置提供商：Sentinel 充当客户端服务发现的权限来源：客户端连接到Sentinel ，以便询问负责给定服务的当前 Redis 主服务器的地址。如果发生故障转移，Sentinel 将报告新地址。\n\n主从节点配置 sentinel.conf 文件\n```javascript\n[root@jjh redis-6.0.9]# cat conf/sentinel.conf \n17 protected-mode no      //设置为非保护模式\n26 daemonize yes          //设置为守护线程方式运行\n68 sentinel monitor mymaster 192.168.0.36 6379 2   //设置监听的master服务器(服务名，IP，端口，投票数)\n165 sentinel failover-timeout mymaster 5000  //故障转移时间，设置为5秒，默认为3分钟\n```\n启动 sentinel 服务，查看主从节点的状态\n```javascript\n[root@jjh redis-6.0.9]# redis-server /usr/local/redis/conf/sentinel.conf --sentinel\n[root@jjh redis-6.0.9]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip=192.168.0.43,port=6379,state=online,offset=478558,lag=1\nslave1:ip=192.168.0.42,port=6379,state=online,offset=478419,lag=1\nmaster_replid:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_replid2:01b5782acd9d0e503fded1438c05ec6c7ca58201\nmaster_repl_offset:478558\nsecond_repl_offset:8420\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:478558\n\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:slave\nmaster_host:192.168.0.36\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:522776\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:522776\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:48185\nrepl_backlog_histlen:474592\n\n[root@jjh3 redis-6.0.9]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:slave\nmaster_host:192.168.0.36\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:490443\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_replid2:01b5782acd9d0e503fded1438c05ec6c7ca58201\nmaster_repl_offset:490443\nsecond_repl_offset:8420\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:490443\n```\n关闭主节点\n```javascript\n[root@jjh redis-6.0.9]# redis-cli\n127.0.0.1:6379> shutdown\nnot connected> \n```\n查看从节点的状态\n```javascript\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:master\nconnected_slaves:1\nslave0:ip=192.168.0.43,port=6379,state=online,offset=549683,lag=1\nmaster_replid:f0287a0dd102e1283d53d362a53d13bbe7666771\nmaster_replid2:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_repl_offset:549822\nsecond_repl_offset:532438\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:48185\nrepl_backlog_histlen:501638\n\n[root@jjh3 ~]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:slave\nmaster_host:192.168.0.42\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:561568\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:f0287a0dd102e1283d53d362a53d13bbe7666771\nmaster_replid2:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_repl_offset:561568\nsecond_repl_offset:532438\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:561568\n```\n可以看到主节点已经自动切换，说明 sentinel.conf 配置已经成功。\n","source":"_posts/Redis介绍与安装部署.md","raw":"---\ntitle: Redis介绍与安装\ndate: 2020-12-20\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/6384a30716f2c2beb1d27190.jpg\ntag:\n  - Redis\ncategories:\n  - 数据库\n---\n## Redis简介\nRedis是一个开源(BSD许可),内存数据结构存储，用作数据库、缓存和消息代理。它 支持数据结构很多，如strings, hashes, lists, sets 等等。Redis 具有内置复制，Lua 脚本，LRU 清除缓存，事务和不同级别的磁盘持久性，并通过Redis Sentinel 提供高可用性，以及使用 Redis Cluster自动分区。\n\nRedis是当前比较热门的NOSQL系统之一， 它是一个key-value存储系统。和Memcache类似，但很大程度补偿了Memcache的不足，它支持存储的value类型相对更多，包括string 、list、set、zset和hash。这些数据类型都支持push/pop、add/remove 及取交集并集和差集及 更丰富的操作。在此基础上，Redis 支持各种不同方式的排序。\n\n和Memcache 一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能 将数据缓存到内存中，无法自动定期写入硬盘，这就表示 一旦断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。\n\n参考[Redis官网](https://redis.io/)\n##  Redis安装\n###  环境安装\n```javascript\n[root@jjh ~]# yum -y install gcc-c++ centos-release-scl\n[root@jjh ~]# yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils\n# 升级gcc版本到9.0以上\n[root@jjh ~]# scl enable devtoolset-9 bash\n# 需要注意的是scl命令启用只是临时的，退出shell或重启就会恢复原系统gcc版本。如果要长期使用gcc 9.0的话：\n[root@jjh ~]# echo \"source /opt/rh/devtoolset-9/enable\" >>/etc/profile\n# 这样退出shell重新打开就是新版的gcc了，以下其他版本同理，修改devtoolset版本号即可\n```\n### 下载Redis 6.0.9\n```javascript\n[root@jjh ~]# wget https://download.redis.io/releases/redis-6.0.9.tar.gz\n[root@jjh ~]# tar -zxvf redis-6.0.9.tar.gz -C /usr/local/\n[root@jjh ~]# cd /usr/local/redis-6.0.9/\n[root@jjh ~]# ln -s /usr/local/redis-6.0.9/ /usr/local/redis\n[root@jjh redis-6.0.9]# yum -y install tcl\n[root@jjh redis-6.0.9]#  make\n[root@jjh redis-6.0.9]#  make test\n···\n\\o/ All tests passed without errors!\n\nCleanup: may take some time... OK\n···\n[root@jjh redis-6.0.9]# make install\n[root@jjh redis-6.0.9]# mkdir conf bin\n[root@jjh redis-6.0.9]# cp redis.conf sentinel.conf conf/\n[root@jjh redis-6.0.9]# find src/ -perm 755 -type f -exec cp {} bin/ \\;\n[root@jjh redis-6.0.9]# ls bin/\nredis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server\n[root@jjh redis-6.0.9]# echo 'PATH=$PATH:/usr/local/redis/bin/' >> /etc/profile\n[root@jjh redis-6.0.9]# bash /etc/profile\n[root@jjh redis-6.0.9]# redis-server\n15486:C 20 Dec 2020 15:53:14.105 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n15486:C 20 Dec 2020 15:53:14.105 # Redis version=6.0.9, bits=64, commit=00000000, modified=0, pid=15486, just started\n15486:C 20 Dec 2020 15:53:14.105 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n                _._                                                  \n           _.-``__ ''-._                                             \n      _.-``    `.  `_.  ''-._           Redis 6.0.9 (00000000/0) 64 bit\n  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n (    '      ,       .-`  | `,    )     Running in standalone mode\n |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n |    `-._   `._    /     _.-'    |     PID: 15486\n  `-._    `-._  `-./  _.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |           http://redis.io        \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |                                  \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n      `-._    `-.__.-'    _.-'                                       \n          `-._        _.-'                                           \n              `-.__.-'                                               \n\n15486:M 20 Dec 2020 15:53:14.106 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\n15486:M 20 Dec 2020 15:53:14.106 # Server initialized\n15486:M 20 Dec 2020 15:53:14.106 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n15486:M 20 Dec 2020 15:53:14.106 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo madvise > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled (set to 'madvise' or 'never').\n15486:M 20 Dec 2020 15:53:14.106 * Ready to accept connections\n```\n### 再开一个终端查看下端口\n```javascript\n[root@jjh ~]# netstat -antp|grep :6379\ntcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      15486/redis-server  \ntcp6       0      0 :::6379                 :::*                    LISTEN      15486/redis-server  \n```\n### 修改配置文件\n```javascript\n[root@jjh redis-6.0.9]# vim conf/redis.conf \n···\n68 bind 0.0.0.0\n89 protected-mode no\n224 daemonize yes\n255 loglevel warning\n260 logfile \"/usr/local/redis/redis.log\"\n283 always-show-logo no\n365 dir /usr/local/redis/\n···\n[root@jjh redis-6.0.9]# redis-server /usr/local/redis/conf/redis.conf \n[root@jjh redis-6.0.9]# netstat -antp|grep :6379\ntcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      15836/redis-server  \n```\n### 客户端测试\n```javascript\n[root@jjh redis-6.0.9]# redis-cli\n127.0.0.1:6379> set NAME jjh\nOK\n127.0.0.1:6379> get NAME\n\"jjh\"\n```\n##  Redis 持久化\nredis支持两种持久化方式，一种是Snapshotting (快照)也是默认方式，另一种是 Append-only file (缩写aof)的方式。\n###  Snapshotting\n快照是默认的持久化方式。这种方式是就是将内存中数据以快照的方式写入到二进制文件中，默认的文件名为dump.rdb。可以通过配置设置自动做快照持久化的方式。我们可以配置redis在n秒内如果超过m个key被修改就自动做快照，下面是默认的快照保存配置。\n\n* save 900 1        #900秒内如果超过1个key被修改，则发起快照保存\n* save 300 10      #300秒内容如超过10个key被修改，则发起快照保存\n* save 60 10000  #60秒内容如超过100000个key被修改，则发起快照保存\n```javascript\n[root@jjh ~]# cat /usr/local/redis/conf/redis.conf \n···\n307 save 900 1\n308 save 300 10\n309 save 60 10000\n\n342 dbfilename dump.rdb\n···\n```\n如果需要恢复数据，只需要将备份文件（dump.rdb）移动到 redis 安装目录并启动服务即可。\n想知道工作目录在哪\n```javascript\n[root@jjh ~]# redis-cli\n127.0.0.1:6379> config get dir\n1) \"dir\"\n2) \"/usr/local/redis-6.0.9\"\n```\nsave操作是在主线程中保存快照的，由于redis是用一个主线程来处理，这种方式会阻塞所有 client 请求，所以不推荐使用。另一点需要注意的是，每次快照持久化都是将内存数据完整写入到磁盘， 并不是增量的只同步脏数据。如果数据量大且写操作比较多，必然会引起大量的磁盘 io 操作，可能会严重影响性能。\n\n另外由于快照方式存在一定间隔时间，如果 redis 意外 down 掉，就会丢失最后一次快照后的所有修改。\n### Append-only file\naof 比快照方式有更好的持久化性，在使用 aof 持久化方式时，redis会将每一个收到的写命令都通过 write 函数追加到文件中(默认是appendonly.aof)。 当 redis 重启时会通过重新执行文件中保存的写命令来在内存中重建整个数据库的内容。\n\n由于 os 会在内核中缓存 write 做的修改，所以可能不是立即写到磁盘上。这样aof方式的持久化也还是有可能会丢失部分修改。不过我们可以通过配置文件告诉redis我们想要通过 fsync 函数强制 os 写入到磁盘的时机。有三种方式如下(默认是:每秒 fsync 一次）\n\nappendonly yes    //启用 aof 持久化方式\n* appendfsync always      //每次收到写命令就立即强制写入磁盘，最慢的，但是保证完全的持久化，不推荐使用\n* appendfsync everysec   //每秒钟强制写入磁盘次，在性能和持久化方面做了很好的折中，推荐\n* appendfsync no             //完全依赖os,性能最好持久化没保证\n\naof 的方式也同时带来了另一个问题：持久化文件会变的越来越大。例如我们调用 incr test 命令100次，文件中必须保存全部的100条命令，其实有99条都是多余的。因为要恢复数据库的状态其实文件中保存一条 set test 100就够了。为了压缩 aof 的持久化文件。redis 提供了 bgrewriteaof 命令。收到此命令 redis 将使用与快照类似的方式将内存中的数据以命令的方式保存到临时文件中，最后替换原来的文件。\n```javascript\n[root@jjh ~]# cat /usr/local/redis/conf/redis.conf \n···\n307 #save 900 1\n308 #save 300 10\n309 #save 60 10000\n\n1089 appendonly yes\n1093 appendfilename \"appendonly.aof\"\n1119 appendfsync everysec\n···\n```\n##  Redis 主从复制\n192.168.0.36 jjh\n192.168.0.42 jjh2\n需要注意，主从复制的开启，完全是在从节点发起的，不需要我们在主节点做任何事情\n从节点开启主从复制，有3种方式：\n* 配置文件\n在从服务器的配置文件中加入：slaveof <masterip> <masterport>\n* 启动命令\nredis-server启动命令后加入 --slaveof <masterip> <masterport>\n* 客户端命令\nRedis服务器启动后，直接通过客户端执行命令：slaveof <masterip> <masterport>，则该Redis实例成为从节点\n\n上述3种方式是等效的，下面以客户端命令的方式为例，看一下当执行了slaveof后，Redis主节点和从节点的变化\n```javascript\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> slaveof 192.168.0.36 6379\nOK\n```\n在 master 上插入数据\n```javascript\n[root@jjh ~]# redis-cli\n127.0.0.1:6379> set file 1.txt\nOK\n127.0.0.1:6379> get file\n\"1.txt\"\n```\n查看是否成功\n```javascript\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> get file\n\"1.txt\"\n```\n##  Redis Sentinel (哨兵)\nRedis Sentinl 为 Redis 提供高可用性。实际上，这意味使用 Sentinel 可以创建一个Redis 部署，可以在没有人为干预的情况下抵御某些类型的故障。Redts Sentinel 还提供其他附属任务，如监控、通知、并充当客户端的配置提供程序。\n\nSentinel 功能：\n* 监控：Sentinel 会不断检查主实例和从属实例是否按预期工作。\n* 通知：Sentinel可以通过API通知系统管理员，另一台计算机程序，其中一个受监控的Redis实例出现问题。\n* 自动故障转移：如果主服务器未按预期工作，Sentinel 可以启动故障转移过程，其中从服务器被提升为主服务器，其他其他服务器将重新配置为使用新主服务器，并且使用 Redis 服务器的应用程序会通知有关新服务器的地址连接。\n* 配置提供商：Sentinel 充当客户端服务发现的权限来源：客户端连接到Sentinel ，以便询问负责给定服务的当前 Redis 主服务器的地址。如果发生故障转移，Sentinel 将报告新地址。\n\n主从节点配置 sentinel.conf 文件\n```javascript\n[root@jjh redis-6.0.9]# cat conf/sentinel.conf \n17 protected-mode no      //设置为非保护模式\n26 daemonize yes          //设置为守护线程方式运行\n68 sentinel monitor mymaster 192.168.0.36 6379 2   //设置监听的master服务器(服务名，IP，端口，投票数)\n165 sentinel failover-timeout mymaster 5000  //故障转移时间，设置为5秒，默认为3分钟\n```\n启动 sentinel 服务，查看主从节点的状态\n```javascript\n[root@jjh redis-6.0.9]# redis-server /usr/local/redis/conf/sentinel.conf --sentinel\n[root@jjh redis-6.0.9]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip=192.168.0.43,port=6379,state=online,offset=478558,lag=1\nslave1:ip=192.168.0.42,port=6379,state=online,offset=478419,lag=1\nmaster_replid:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_replid2:01b5782acd9d0e503fded1438c05ec6c7ca58201\nmaster_repl_offset:478558\nsecond_repl_offset:8420\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:478558\n\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:slave\nmaster_host:192.168.0.36\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:522776\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_replid2:0000000000000000000000000000000000000000\nmaster_repl_offset:522776\nsecond_repl_offset:-1\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:48185\nrepl_backlog_histlen:474592\n\n[root@jjh3 redis-6.0.9]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:slave\nmaster_host:192.168.0.36\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:490443\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_replid2:01b5782acd9d0e503fded1438c05ec6c7ca58201\nmaster_repl_offset:490443\nsecond_repl_offset:8420\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:490443\n```\n关闭主节点\n```javascript\n[root@jjh redis-6.0.9]# redis-cli\n127.0.0.1:6379> shutdown\nnot connected> \n```\n查看从节点的状态\n```javascript\n[root@jjh2 ~]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:master\nconnected_slaves:1\nslave0:ip=192.168.0.43,port=6379,state=online,offset=549683,lag=1\nmaster_replid:f0287a0dd102e1283d53d362a53d13bbe7666771\nmaster_replid2:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_repl_offset:549822\nsecond_repl_offset:532438\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:48185\nrepl_backlog_histlen:501638\n\n[root@jjh3 ~]# redis-cli\n127.0.0.1:6379> info replication\n# Replication\nrole:slave\nmaster_host:192.168.0.42\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:561568\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_replid:f0287a0dd102e1283d53d362a53d13bbe7666771\nmaster_replid2:6efce840d54c12d3e558966ec3adc6e41cfd422c\nmaster_repl_offset:561568\nsecond_repl_offset:532438\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1\nrepl_backlog_histlen:561568\n```\n可以看到主节点已经自动切换，说明 sentinel.conf 配置已经成功。\n","slug":"Redis介绍与安装部署","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf7000qtobv10td0uqb","content":"<h2 id=\"Redis简介\"><a href=\"#Redis简介\" class=\"headerlink\" title=\"Redis简介\"></a>Redis简介</h2><p>Redis是一个开源(BSD许可),内存数据结构存储，用作数据库、缓存和消息代理。它 支持数据结构很多，如strings, hashes, lists, sets 等等。Redis 具有内置复制，Lua 脚本，LRU 清除缓存，事务和不同级别的磁盘持久性，并通过Redis Sentinel 提供高可用性，以及使用 Redis Cluster自动分区。</p>\n<p>Redis是当前比较热门的NOSQL系统之一， 它是一个key-value存储系统。和Memcache类似，但很大程度补偿了Memcache的不足，它支持存储的value类型相对更多，包括string 、list、set、zset和hash。这些数据类型都支持push/pop、add/remove 及取交集并集和差集及 更丰富的操作。在此基础上，Redis 支持各种不同方式的排序。</p>\n<p>和Memcache 一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能 将数据缓存到内存中，无法自动定期写入硬盘，这就表示 一旦断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。</p>\n<p>参考<a href=\"https://redis.io/\">Redis官网</a></p>\n<h2 id=\"Redis安装\"><a href=\"#Redis安装\" class=\"headerlink\" title=\"Redis安装\"></a>Redis安装</h2><h3 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum -y install gcc-c++ centos-release-scl</span><br><span class=\"line\">[root@jjh ~]# yum -y install devtoolset-<span class=\"number\">9</span>-gcc devtoolset-<span class=\"number\">9</span>-gcc-c++ devtoolset-<span class=\"number\">9</span>-binutils</span><br><span class=\"line\"># 升级gcc版本到<span class=\"number\">9.0</span>以上</span><br><span class=\"line\">[root@jjh ~]# scl enable devtoolset-<span class=\"number\">9</span> bash</span><br><span class=\"line\"># 需要注意的是scl命令启用只是临时的，退出shell或重启就会恢复原系统gcc版本。如果要长期使用gcc <span class=\"number\">9.0</span>的话：</span><br><span class=\"line\">[root@jjh ~]# echo <span class=\"string\">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt;<span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\"># 这样退出shell重新打开就是新版的gcc了，以下其他版本同理，修改devtoolset版本号即可</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载Redis-6-0-9\"><a href=\"#下载Redis-6-0-9\" class=\"headerlink\" title=\"下载Redis 6.0.9\"></a>下载Redis 6.0.9</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//download.redis.io/releases/redis-6.0.9.tar.gz</span></span><br><span class=\"line\">[root@jjh ~]# tar -zxvf redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@jjh ~]# cd /usr/local/redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>/</span><br><span class=\"line\">[root@jjh ~]# ln -s /usr/local/redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>/ <span class=\"regexp\">/usr/</span>local/redis</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# yum -y install tcl</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]#  make</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]#  make test</span><br><span class=\"line\">···</span><br><span class=\"line\">\\o/ <span class=\"title class_\">All</span> tests passed without errors!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cleanup</span>: may take some time... <span class=\"variable constant_\">OK</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# make install</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# mkdir conf bin</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# cp redis.<span class=\"property\">conf</span> sentinel.<span class=\"property\">conf</span> conf/</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# find src/ -perm <span class=\"number\">755</span> -type f -exec cp &#123;&#125; bin/ \\;</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# ls bin/</span><br><span class=\"line\">redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# echo <span class=\"string\">&#x27;PATH=$PATH:/usr/local/redis/bin/&#x27;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# bash /etc/profile</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-server</span><br><span class=\"line\"><span class=\"number\">15486</span>:C <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.105</span> # oO0OoO0OoO0Oo <span class=\"title class_\">Redis</span> is starting oO0OoO0OoO0Oo</span><br><span class=\"line\"><span class=\"number\">15486</span>:C <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.105</span> # <span class=\"title class_\">Redis</span> version=<span class=\"number\">6.0</span><span class=\"number\">.9</span>, bits=<span class=\"number\">64</span>, commit=<span class=\"number\">00000000</span>, modified=<span class=\"number\">0</span>, pid=<span class=\"number\">15486</span>, just started</span><br><span class=\"line\"><span class=\"number\">15486</span>:C <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.105</span> # <span class=\"title class_\">Warning</span>: no config file specified, using the <span class=\"keyword\">default</span> config. <span class=\"title class_\">In</span> order to specify a config file use redis-server /path/to/redis.<span class=\"property\">conf</span></span><br><span class=\"line\">                _.<span class=\"property\">_</span>                                                  </span><br><span class=\"line\">           _.-<span class=\"string\">``</span>__ <span class=\"string\">&#x27;&#x27;</span>-.<span class=\"property\">_</span>                                             </span><br><span class=\"line\">      _.-<span class=\"string\">``</span>    <span class=\"string\">`.  `</span>_.  <span class=\"string\">&#x27;&#x27;</span>-.<span class=\"property\">_</span>           <span class=\"title class_\">Redis</span> <span class=\"number\">6.0</span><span class=\"number\">.9</span> (<span class=\"number\">00000000</span>/<span class=\"number\">0</span>) <span class=\"number\">64</span> bit</span><br><span class=\"line\">  .-<span class=\"string\">``</span> .-<span class=\"string\">``</span><span class=\"string\">`.  `</span><span class=\"string\">``</span>\\/    _.,_ <span class=\"string\">&#x27;&#x27;</span>-.<span class=\"property\">_</span>                                   </span><br><span class=\"line\"> (    <span class=\"string\">&#x27;      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class=\"line\"><span class=\"string\"> |`-._`-...-` __...-.``-._|&#x27;</span><span class=\"string\">` _.-&#x27;|     Port: 6379</span></span><br><span class=\"line\"><span class=\"string\"> |    `</span>-.<span class=\"property\">_</span>   <span class=\"string\">`._    /     _.-&#x27;    |     PID: 15486</span></span><br><span class=\"line\"><span class=\"string\">  `</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-._  `</span>-./  _.-<span class=\"string\">&#x27;    _.-&#x27;</span>                                   </span><br><span class=\"line\"> |<span class=\"string\">`-._`</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span></span><br><span class=\"line\"><span class=\"string\"> |    `</span>-.<span class=\"property\">_</span><span class=\"string\">`-._        _.-&#x27;_.-&#x27;    |           http://redis.io        </span></span><br><span class=\"line\"><span class=\"string\">  `</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-._`</span>-.<span class=\"property\">__</span>.-<span class=\"string\">&#x27;_.-&#x27;</span>    _.-<span class=\"string\">&#x27;                                   </span></span><br><span class=\"line\"><span class=\"string\"> |`-._`-._    `-.__.-&#x27;</span>    _.-<span class=\"string\">&#x27;_.-&#x27;</span>|                                  </span><br><span class=\"line\"> |    <span class=\"string\">`-._`</span>-.<span class=\"property\">_</span>        _.-<span class=\"string\">&#x27;_.-&#x27;</span>    |                                  </span><br><span class=\"line\">  <span class=\"string\">`-._    `</span>-.<span class=\"property\">_</span><span class=\"string\">`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span></span><br><span class=\"line\"><span class=\"string\">      `</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-.__.-&#x27;    _.-&#x27;                                       </span></span><br><span class=\"line\"><span class=\"string\">          `</span>-.<span class=\"property\">_</span>        _.-<span class=\"string\">&#x27;                                           </span></span><br><span class=\"line\"><span class=\"string\">              `-.__.-&#x27;</span>                                               </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"attr\">WARNING</span>: <span class=\"title class_\">The</span> <span class=\"variable constant_\">TCP</span> backlog setting <span class=\"keyword\">of</span> <span class=\"number\">511</span> cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value <span class=\"keyword\">of</span> <span class=\"number\">128.</span></span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"title class_\">Server</span> initialized</span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"variable constant_\">WARNING</span> overcommit_memory is set to <span class=\"number\">0</span>! <span class=\"title class_\">Background</span> save may fail under low memory condition. <span class=\"title class_\">To</span> fix <span class=\"variable language_\">this</span> issue add <span class=\"string\">&#x27;vm.overcommit_memory = 1&#x27;</span> to /etc/sysctl.<span class=\"property\">conf</span> and then reboot or run the command <span class=\"string\">&#x27;sysctl vm.overcommit_memory=1&#x27;</span> <span class=\"keyword\">for</span> <span class=\"variable language_\">this</span> to take effect.</span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"variable constant_\">WARNING</span> you have <span class=\"title class_\">Transparent</span> <span class=\"title class_\">Huge</span> <span class=\"title class_\">Pages</span> (<span class=\"variable constant_\">THP</span>) support enabled <span class=\"keyword\">in</span> your kernel. <span class=\"title class_\">This</span> will create latency and memory usage issues <span class=\"keyword\">with</span> <span class=\"title class_\">Redis</span>. <span class=\"title class_\">To</span> fix <span class=\"variable language_\">this</span> issue run the command <span class=\"string\">&#x27;echo madvise &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27;</span> <span class=\"keyword\">as</span> root, and add it to your /etc/rc.<span class=\"property\">local</span> <span class=\"keyword\">in</span> order to retain the setting after a reboot. <span class=\"title class_\">Redis</span> must be restarted after <span class=\"variable constant_\">THP</span> is disabled (set to <span class=\"string\">&#x27;madvise&#x27;</span> or <span class=\"string\">&#x27;never&#x27;</span>).</span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> * <span class=\"title class_\">Ready</span> to accept connections</span><br></pre></td></tr></table></figure>\n<h3 id=\"再开一个终端查看下端口\"><a href=\"#再开一个终端查看下端口\" class=\"headerlink\" title=\"再开一个终端查看下端口\"></a>再开一个终端查看下端口</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# netstat -antp|grep :<span class=\"number\">6379</span></span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">6379</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">15486</span>/redis-server  </span><br><span class=\"line\">tcp6       <span class=\"number\">0</span>      <span class=\"number\">0</span> :::<span class=\"number\">6379</span>                 :::*                    <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">15486</span>/redis-server  </span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# vim conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">68</span> bind <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"number\">89</span> protected-mode no</span><br><span class=\"line\"><span class=\"number\">224</span> daemonize yes</span><br><span class=\"line\"><span class=\"number\">255</span> loglevel warning</span><br><span class=\"line\"><span class=\"number\">260</span> logfile <span class=\"string\">&quot;/usr/local/redis/redis.log&quot;</span></span><br><span class=\"line\"><span class=\"number\">283</span> always-show-logo no</span><br><span class=\"line\"><span class=\"number\">365</span> dir /usr/local/redis/</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-server /usr/local/redis/conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# netstat -antp|grep :<span class=\"number\">6379</span></span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">6379</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">15836</span>/redis-server  </span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端测试\"><a href=\"#客户端测试\" class=\"headerlink\" title=\"客户端测试\"></a>客户端测试</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; set <span class=\"variable constant_\">NAME</span> jjh</span><br><span class=\"line\"><span class=\"variable constant_\">OK</span></span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; get <span class=\"variable constant_\">NAME</span></span><br><span class=\"line\"><span class=\"string\">&quot;jjh&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Redis-持久化\"><a href=\"#Redis-持久化\" class=\"headerlink\" title=\"Redis 持久化\"></a>Redis 持久化</h2><p>redis支持两种持久化方式，一种是Snapshotting (快照)也是默认方式，另一种是 Append-only file (缩写aof)的方式。</p>\n<h3 id=\"Snapshotting\"><a href=\"#Snapshotting\" class=\"headerlink\" title=\"Snapshotting\"></a>Snapshotting</h3><p>快照是默认的持久化方式。这种方式是就是将内存中数据以快照的方式写入到二进制文件中，默认的文件名为dump.rdb。可以通过配置设置自动做快照持久化的方式。我们可以配置redis在n秒内如果超过m个key被修改就自动做快照，下面是默认的快照保存配置。</p>\n<ul>\n<li>save 900 1        #900秒内如果超过1个key被修改，则发起快照保存</li>\n<li>save 300 10      #300秒内容如超过10个key被修改，则发起快照保存</li>\n<li>save 60 10000  #60秒内容如超过100000个key被修改，则发起快照保存<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /usr/local/redis/conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">307</span> save <span class=\"number\">900</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">308</span> save <span class=\"number\">300</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"number\">309</span> save <span class=\"number\">60</span> <span class=\"number\">10000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">342</span> dbfilename dump.<span class=\"property\">rdb</span></span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n如果需要恢复数据，只需要将备份文件（dump.rdb）移动到 redis 安装目录并启动服务即可。<br>想知道工作目录在哪<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; config get dir</span><br><span class=\"line\"><span class=\"number\">1</span>) <span class=\"string\">&quot;dir&quot;</span></span><br><span class=\"line\"><span class=\"number\">2</span>) <span class=\"string\">&quot;/usr/local/redis-6.0.9&quot;</span></span><br></pre></td></tr></table></figure>\nsave操作是在主线程中保存快照的，由于redis是用一个主线程来处理，这种方式会阻塞所有 client 请求，所以不推荐使用。另一点需要注意的是，每次快照持久化都是将内存数据完整写入到磁盘， 并不是增量的只同步脏数据。如果数据量大且写操作比较多，必然会引起大量的磁盘 io 操作，可能会严重影响性能。</li>\n</ul>\n<p>另外由于快照方式存在一定间隔时间，如果 redis 意外 down 掉，就会丢失最后一次快照后的所有修改。</p>\n<h3 id=\"Append-only-file\"><a href=\"#Append-only-file\" class=\"headerlink\" title=\"Append-only file\"></a>Append-only file</h3><p>aof 比快照方式有更好的持久化性，在使用 aof 持久化方式时，redis会将每一个收到的写命令都通过 write 函数追加到文件中(默认是appendonly.aof)。 当 redis 重启时会通过重新执行文件中保存的写命令来在内存中重建整个数据库的内容。</p>\n<p>由于 os 会在内核中缓存 write 做的修改，所以可能不是立即写到磁盘上。这样aof方式的持久化也还是有可能会丢失部分修改。不过我们可以通过配置文件告诉redis我们想要通过 fsync 函数强制 os 写入到磁盘的时机。有三种方式如下(默认是:每秒 fsync 一次）</p>\n<p>appendonly yes    //启用 aof 持久化方式</p>\n<ul>\n<li>appendfsync always      //每次收到写命令就立即强制写入磁盘，最慢的，但是保证完全的持久化，不推荐使用</li>\n<li>appendfsync everysec   //每秒钟强制写入磁盘次，在性能和持久化方面做了很好的折中，推荐</li>\n<li>appendfsync no             //完全依赖os,性能最好持久化没保证</li>\n</ul>\n<p>aof 的方式也同时带来了另一个问题：持久化文件会变的越来越大。例如我们调用 incr test 命令100次，文件中必须保存全部的100条命令，其实有99条都是多余的。因为要恢复数据库的状态其实文件中保存一条 set test 100就够了。为了压缩 aof 的持久化文件。redis 提供了 bgrewriteaof 命令。收到此命令 redis 将使用与快照类似的方式将内存中的数据以命令的方式保存到临时文件中，最后替换原来的文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /usr/local/redis/conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">307</span> #save <span class=\"number\">900</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">308</span> #save <span class=\"number\">300</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"number\">309</span> #save <span class=\"number\">60</span> <span class=\"number\">10000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1089</span> appendonly yes</span><br><span class=\"line\"><span class=\"number\">1093</span> appendfilename <span class=\"string\">&quot;appendonly.aof&quot;</span></span><br><span class=\"line\"><span class=\"number\">1119</span> appendfsync everysec</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n<h2 id=\"Redis-主从复制\"><a href=\"#Redis-主从复制\" class=\"headerlink\" title=\"Redis 主从复制\"></a>Redis 主从复制</h2><p>192.168.0.36 jjh<br>192.168.0.42 jjh2<br>需要注意，主从复制的开启，完全是在从节点发起的，不需要我们在主节点做任何事情<br>从节点开启主从复制，有3种方式：</p>\n<ul>\n<li>配置文件<br>在从服务器的配置文件中加入：slaveof <masterip> <masterport></li>\n<li>启动命令<br>redis-server启动命令后加入 –slaveof <masterip> <masterport></li>\n<li>客户端命令<br>Redis服务器启动后，直接通过客户端执行命令：slaveof <masterip> <masterport>，则该Redis实例成为从节点</li>\n</ul>\n<p>上述3种方式是等效的，下面以客户端命令的方式为例，看一下当执行了slaveof后，Redis主节点和从节点的变化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; slaveof <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> <span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"variable constant_\">OK</span></span><br></pre></td></tr></table></figure>\n<p>在 master 上插入数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; set file <span class=\"number\">1.</span>txt</span><br><span class=\"line\"><span class=\"variable constant_\">OK</span></span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; get file</span><br><span class=\"line\"><span class=\"string\">&quot;1.txt&quot;</span></span><br></pre></td></tr></table></figure>\n<p>查看是否成功</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; get file</span><br><span class=\"line\"><span class=\"string\">&quot;1.txt&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Redis-Sentinel-哨兵\"><a href=\"#Redis-Sentinel-哨兵\" class=\"headerlink\" title=\"Redis Sentinel (哨兵)\"></a>Redis Sentinel (哨兵)</h2><p>Redis Sentinl 为 Redis 提供高可用性。实际上，这意味使用 Sentinel 可以创建一个Redis 部署，可以在没有人为干预的情况下抵御某些类型的故障。Redts Sentinel 还提供其他附属任务，如监控、通知、并充当客户端的配置提供程序。</p>\n<p>Sentinel 功能：</p>\n<ul>\n<li>监控：Sentinel 会不断检查主实例和从属实例是否按预期工作。</li>\n<li>通知：Sentinel可以通过API通知系统管理员，另一台计算机程序，其中一个受监控的Redis实例出现问题。</li>\n<li>自动故障转移：如果主服务器未按预期工作，Sentinel 可以启动故障转移过程，其中从服务器被提升为主服务器，其他其他服务器将重新配置为使用新主服务器，并且使用 Redis 服务器的应用程序会通知有关新服务器的地址连接。</li>\n<li>配置提供商：Sentinel 充当客户端服务发现的权限来源：客户端连接到Sentinel ，以便询问负责给定服务的当前 Redis 主服务器的地址。如果发生故障转移，Sentinel 将报告新地址。</li>\n</ul>\n<p>主从节点配置 sentinel.conf 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# cat conf/sentinel.<span class=\"property\">conf</span> </span><br><span class=\"line\"><span class=\"number\">17</span> protected-mode no      <span class=\"comment\">//设置为非保护模式</span></span><br><span class=\"line\"><span class=\"number\">26</span> daemonize yes          <span class=\"comment\">//设置为守护线程方式运行</span></span><br><span class=\"line\"><span class=\"number\">68</span> sentinel monitor mymaster <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> <span class=\"number\">6379</span> <span class=\"number\">2</span>   <span class=\"comment\">//设置监听的master服务器(服务名，IP，端口，投票数)</span></span><br><span class=\"line\"><span class=\"number\">165</span> sentinel failover-timeout mymaster <span class=\"number\">5000</span>  <span class=\"comment\">//故障转移时间，设置为5秒，默认为3分钟</span></span><br></pre></td></tr></table></figure>\n<p>启动 sentinel 服务，查看主从节点的状态</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-server /usr/local/redis/conf/sentinel.<span class=\"property\">conf</span> --sentinel</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:master</span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">slave0</span>:ip=<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span>,port=<span class=\"number\">6379</span>,state=online,offset=<span class=\"number\">478558</span>,lag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">slave1</span>:ip=<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span>,port=<span class=\"number\">6379</span>,state=online,offset=<span class=\"number\">478419</span>,lag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:01b5782acd9d0e503fded1438c05ec6c7ca58201</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">478558</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">8420</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">478558</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:slave</span><br><span class=\"line\"><span class=\"attr\">master_host</span>:<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\"><span class=\"attr\">master_port</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">master_link_status</span>:up</span><br><span class=\"line\"><span class=\"attr\">master_last_io_seconds_ago</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_sync_in_progress</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">slave_repl_offset</span>:<span class=\"number\">522776</span></span><br><span class=\"line\"><span class=\"attr\">slave_priority</span>:<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attr\">slave_read_only</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:<span class=\"number\">0000000000000000000000000000000000000000</span></span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">522776</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:-<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">48185</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">474592</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@jjh3 redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:slave</span><br><span class=\"line\"><span class=\"attr\">master_host</span>:<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\"><span class=\"attr\">master_port</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">master_link_status</span>:up</span><br><span class=\"line\"><span class=\"attr\">master_last_io_seconds_ago</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_sync_in_progress</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">slave_repl_offset</span>:<span class=\"number\">490443</span></span><br><span class=\"line\"><span class=\"attr\">slave_priority</span>:<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attr\">slave_read_only</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:01b5782acd9d0e503fded1438c05ec6c7ca58201</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">490443</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">8420</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">490443</span></span><br></pre></td></tr></table></figure>\n<p>关闭主节点</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; shutdown</span><br><span class=\"line\">not connected&gt; </span><br></pre></td></tr></table></figure>\n<p>查看从节点的状态</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:master</span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">slave0</span>:ip=<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span>,port=<span class=\"number\">6379</span>,state=online,offset=<span class=\"number\">549683</span>,lag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:f0287a0dd102e1283d53d362a53d13bbe7666771</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">549822</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">532438</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">48185</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">501638</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@jjh3 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:slave</span><br><span class=\"line\"><span class=\"attr\">master_host</span>:<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span></span><br><span class=\"line\"><span class=\"attr\">master_port</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">master_link_status</span>:up</span><br><span class=\"line\"><span class=\"attr\">master_last_io_seconds_ago</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_sync_in_progress</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">slave_repl_offset</span>:<span class=\"number\">561568</span></span><br><span class=\"line\"><span class=\"attr\">slave_priority</span>:<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attr\">slave_read_only</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:f0287a0dd102e1283d53d362a53d13bbe7666771</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">561568</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">532438</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">561568</span></span><br></pre></td></tr></table></figure>\n<p>可以看到主节点已经自动切换，说明 sentinel.conf 配置已经成功。</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Redis简介\"><a href=\"#Redis简介\" class=\"headerlink\" title=\"Redis简介\"></a>Redis简介</h2><p>Redis是一个开源(BSD许可),内存数据结构存储，用作数据库、缓存和消息代理。它 支持数据结构很多，如strings, hashes, lists, sets 等等。Redis 具有内置复制，Lua 脚本，LRU 清除缓存，事务和不同级别的磁盘持久性，并通过Redis Sentinel 提供高可用性，以及使用 Redis Cluster自动分区。</p>\n<p>Redis是当前比较热门的NOSQL系统之一， 它是一个key-value存储系统。和Memcache类似，但很大程度补偿了Memcache的不足，它支持存储的value类型相对更多，包括string 、list、set、zset和hash。这些数据类型都支持push/pop、add/remove 及取交集并集和差集及 更丰富的操作。在此基础上，Redis 支持各种不同方式的排序。</p>\n<p>和Memcache 一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能 将数据缓存到内存中，无法自动定期写入硬盘，这就表示 一旦断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。</p>\n<p>参考<a href=\"https://redis.io/\">Redis官网</a></p>\n<h2 id=\"Redis安装\"><a href=\"#Redis安装\" class=\"headerlink\" title=\"Redis安装\"></a>Redis安装</h2><h3 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum -y install gcc-c++ centos-release-scl</span><br><span class=\"line\">[root@jjh ~]# yum -y install devtoolset-<span class=\"number\">9</span>-gcc devtoolset-<span class=\"number\">9</span>-gcc-c++ devtoolset-<span class=\"number\">9</span>-binutils</span><br><span class=\"line\"># 升级gcc版本到<span class=\"number\">9.0</span>以上</span><br><span class=\"line\">[root@jjh ~]# scl enable devtoolset-<span class=\"number\">9</span> bash</span><br><span class=\"line\"># 需要注意的是scl命令启用只是临时的，退出shell或重启就会恢复原系统gcc版本。如果要长期使用gcc <span class=\"number\">9.0</span>的话：</span><br><span class=\"line\">[root@jjh ~]# echo <span class=\"string\">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt;<span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\"># 这样退出shell重新打开就是新版的gcc了，以下其他版本同理，修改devtoolset版本号即可</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载Redis-6-0-9\"><a href=\"#下载Redis-6-0-9\" class=\"headerlink\" title=\"下载Redis 6.0.9\"></a>下载Redis 6.0.9</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//download.redis.io/releases/redis-6.0.9.tar.gz</span></span><br><span class=\"line\">[root@jjh ~]# tar -zxvf redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@jjh ~]# cd /usr/local/redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>/</span><br><span class=\"line\">[root@jjh ~]# ln -s /usr/local/redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>/ <span class=\"regexp\">/usr/</span>local/redis</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# yum -y install tcl</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]#  make</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]#  make test</span><br><span class=\"line\">···</span><br><span class=\"line\">\\o/ <span class=\"title class_\">All</span> tests passed without errors!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Cleanup</span>: may take some time... <span class=\"variable constant_\">OK</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# make install</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# mkdir conf bin</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# cp redis.<span class=\"property\">conf</span> sentinel.<span class=\"property\">conf</span> conf/</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# find src/ -perm <span class=\"number\">755</span> -type f -exec cp &#123;&#125; bin/ \\;</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# ls bin/</span><br><span class=\"line\">redis-benchmark  redis-check-aof  redis-check-rdb  redis-cli  redis-sentinel  redis-server</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# echo <span class=\"string\">&#x27;PATH=$PATH:/usr/local/redis/bin/&#x27;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>profile</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# bash /etc/profile</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-server</span><br><span class=\"line\"><span class=\"number\">15486</span>:C <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.105</span> # oO0OoO0OoO0Oo <span class=\"title class_\">Redis</span> is starting oO0OoO0OoO0Oo</span><br><span class=\"line\"><span class=\"number\">15486</span>:C <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.105</span> # <span class=\"title class_\">Redis</span> version=<span class=\"number\">6.0</span><span class=\"number\">.9</span>, bits=<span class=\"number\">64</span>, commit=<span class=\"number\">00000000</span>, modified=<span class=\"number\">0</span>, pid=<span class=\"number\">15486</span>, just started</span><br><span class=\"line\"><span class=\"number\">15486</span>:C <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.105</span> # <span class=\"title class_\">Warning</span>: no config file specified, using the <span class=\"keyword\">default</span> config. <span class=\"title class_\">In</span> order to specify a config file use redis-server /path/to/redis.<span class=\"property\">conf</span></span><br><span class=\"line\">                _.<span class=\"property\">_</span>                                                  </span><br><span class=\"line\">           _.-<span class=\"string\">``</span>__ <span class=\"string\">&#x27;&#x27;</span>-.<span class=\"property\">_</span>                                             </span><br><span class=\"line\">      _.-<span class=\"string\">``</span>    <span class=\"string\">`.  `</span>_.  <span class=\"string\">&#x27;&#x27;</span>-.<span class=\"property\">_</span>           <span class=\"title class_\">Redis</span> <span class=\"number\">6.0</span><span class=\"number\">.9</span> (<span class=\"number\">00000000</span>/<span class=\"number\">0</span>) <span class=\"number\">64</span> bit</span><br><span class=\"line\">  .-<span class=\"string\">``</span> .-<span class=\"string\">``</span><span class=\"string\">`.  `</span><span class=\"string\">``</span>\\/    _.,_ <span class=\"string\">&#x27;&#x27;</span>-.<span class=\"property\">_</span>                                   </span><br><span class=\"line\"> (    <span class=\"string\">&#x27;      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class=\"line\"><span class=\"string\"> |`-._`-...-` __...-.``-._|&#x27;</span><span class=\"string\">` _.-&#x27;|     Port: 6379</span></span><br><span class=\"line\"><span class=\"string\"> |    `</span>-.<span class=\"property\">_</span>   <span class=\"string\">`._    /     _.-&#x27;    |     PID: 15486</span></span><br><span class=\"line\"><span class=\"string\">  `</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-._  `</span>-./  _.-<span class=\"string\">&#x27;    _.-&#x27;</span>                                   </span><br><span class=\"line\"> |<span class=\"string\">`-._`</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span></span><br><span class=\"line\"><span class=\"string\"> |    `</span>-.<span class=\"property\">_</span><span class=\"string\">`-._        _.-&#x27;_.-&#x27;    |           http://redis.io        </span></span><br><span class=\"line\"><span class=\"string\">  `</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-._`</span>-.<span class=\"property\">__</span>.-<span class=\"string\">&#x27;_.-&#x27;</span>    _.-<span class=\"string\">&#x27;                                   </span></span><br><span class=\"line\"><span class=\"string\"> |`-._`-._    `-.__.-&#x27;</span>    _.-<span class=\"string\">&#x27;_.-&#x27;</span>|                                  </span><br><span class=\"line\"> |    <span class=\"string\">`-._`</span>-.<span class=\"property\">_</span>        _.-<span class=\"string\">&#x27;_.-&#x27;</span>    |                                  </span><br><span class=\"line\">  <span class=\"string\">`-._    `</span>-.<span class=\"property\">_</span><span class=\"string\">`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span></span><br><span class=\"line\"><span class=\"string\">      `</span>-.<span class=\"property\">_</span>    <span class=\"string\">`-.__.-&#x27;    _.-&#x27;                                       </span></span><br><span class=\"line\"><span class=\"string\">          `</span>-.<span class=\"property\">_</span>        _.-<span class=\"string\">&#x27;                                           </span></span><br><span class=\"line\"><span class=\"string\">              `-.__.-&#x27;</span>                                               </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"attr\">WARNING</span>: <span class=\"title class_\">The</span> <span class=\"variable constant_\">TCP</span> backlog setting <span class=\"keyword\">of</span> <span class=\"number\">511</span> cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value <span class=\"keyword\">of</span> <span class=\"number\">128.</span></span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"title class_\">Server</span> initialized</span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"variable constant_\">WARNING</span> overcommit_memory is set to <span class=\"number\">0</span>! <span class=\"title class_\">Background</span> save may fail under low memory condition. <span class=\"title class_\">To</span> fix <span class=\"variable language_\">this</span> issue add <span class=\"string\">&#x27;vm.overcommit_memory = 1&#x27;</span> to /etc/sysctl.<span class=\"property\">conf</span> and then reboot or run the command <span class=\"string\">&#x27;sysctl vm.overcommit_memory=1&#x27;</span> <span class=\"keyword\">for</span> <span class=\"variable language_\">this</span> to take effect.</span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> # <span class=\"variable constant_\">WARNING</span> you have <span class=\"title class_\">Transparent</span> <span class=\"title class_\">Huge</span> <span class=\"title class_\">Pages</span> (<span class=\"variable constant_\">THP</span>) support enabled <span class=\"keyword\">in</span> your kernel. <span class=\"title class_\">This</span> will create latency and memory usage issues <span class=\"keyword\">with</span> <span class=\"title class_\">Redis</span>. <span class=\"title class_\">To</span> fix <span class=\"variable language_\">this</span> issue run the command <span class=\"string\">&#x27;echo madvise &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27;</span> <span class=\"keyword\">as</span> root, and add it to your /etc/rc.<span class=\"property\">local</span> <span class=\"keyword\">in</span> order to retain the setting after a reboot. <span class=\"title class_\">Redis</span> must be restarted after <span class=\"variable constant_\">THP</span> is disabled (set to <span class=\"string\">&#x27;madvise&#x27;</span> or <span class=\"string\">&#x27;never&#x27;</span>).</span><br><span class=\"line\"><span class=\"number\">15486</span>:M <span class=\"number\">20</span> <span class=\"title class_\">Dec</span> <span class=\"number\">2020</span> <span class=\"number\">15</span>:<span class=\"number\">53</span>:<span class=\"number\">14.106</span> * <span class=\"title class_\">Ready</span> to accept connections</span><br></pre></td></tr></table></figure>\n<h3 id=\"再开一个终端查看下端口\"><a href=\"#再开一个终端查看下端口\" class=\"headerlink\" title=\"再开一个终端查看下端口\"></a>再开一个终端查看下端口</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# netstat -antp|grep :<span class=\"number\">6379</span></span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">6379</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">15486</span>/redis-server  </span><br><span class=\"line\">tcp6       <span class=\"number\">0</span>      <span class=\"number\">0</span> :::<span class=\"number\">6379</span>                 :::*                    <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">15486</span>/redis-server  </span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# vim conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">68</span> bind <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"number\">89</span> protected-mode no</span><br><span class=\"line\"><span class=\"number\">224</span> daemonize yes</span><br><span class=\"line\"><span class=\"number\">255</span> loglevel warning</span><br><span class=\"line\"><span class=\"number\">260</span> logfile <span class=\"string\">&quot;/usr/local/redis/redis.log&quot;</span></span><br><span class=\"line\"><span class=\"number\">283</span> always-show-logo no</span><br><span class=\"line\"><span class=\"number\">365</span> dir /usr/local/redis/</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-server /usr/local/redis/conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# netstat -antp|grep :<span class=\"number\">6379</span></span><br><span class=\"line\">tcp        <span class=\"number\">0</span>      <span class=\"number\">0</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">6379</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:*               <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">15836</span>/redis-server  </span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端测试\"><a href=\"#客户端测试\" class=\"headerlink\" title=\"客户端测试\"></a>客户端测试</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; set <span class=\"variable constant_\">NAME</span> jjh</span><br><span class=\"line\"><span class=\"variable constant_\">OK</span></span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; get <span class=\"variable constant_\">NAME</span></span><br><span class=\"line\"><span class=\"string\">&quot;jjh&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Redis-持久化\"><a href=\"#Redis-持久化\" class=\"headerlink\" title=\"Redis 持久化\"></a>Redis 持久化</h2><p>redis支持两种持久化方式，一种是Snapshotting (快照)也是默认方式，另一种是 Append-only file (缩写aof)的方式。</p>\n<h3 id=\"Snapshotting\"><a href=\"#Snapshotting\" class=\"headerlink\" title=\"Snapshotting\"></a>Snapshotting</h3><p>快照是默认的持久化方式。这种方式是就是将内存中数据以快照的方式写入到二进制文件中，默认的文件名为dump.rdb。可以通过配置设置自动做快照持久化的方式。我们可以配置redis在n秒内如果超过m个key被修改就自动做快照，下面是默认的快照保存配置。</p>\n<ul>\n<li>save 900 1        #900秒内如果超过1个key被修改，则发起快照保存</li>\n<li>save 300 10      #300秒内容如超过10个key被修改，则发起快照保存</li>\n<li>save 60 10000  #60秒内容如超过100000个key被修改，则发起快照保存<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /usr/local/redis/conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">307</span> save <span class=\"number\">900</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">308</span> save <span class=\"number\">300</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"number\">309</span> save <span class=\"number\">60</span> <span class=\"number\">10000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">342</span> dbfilename dump.<span class=\"property\">rdb</span></span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n如果需要恢复数据，只需要将备份文件（dump.rdb）移动到 redis 安装目录并启动服务即可。<br>想知道工作目录在哪<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; config get dir</span><br><span class=\"line\"><span class=\"number\">1</span>) <span class=\"string\">&quot;dir&quot;</span></span><br><span class=\"line\"><span class=\"number\">2</span>) <span class=\"string\">&quot;/usr/local/redis-6.0.9&quot;</span></span><br></pre></td></tr></table></figure>\nsave操作是在主线程中保存快照的，由于redis是用一个主线程来处理，这种方式会阻塞所有 client 请求，所以不推荐使用。另一点需要注意的是，每次快照持久化都是将内存数据完整写入到磁盘， 并不是增量的只同步脏数据。如果数据量大且写操作比较多，必然会引起大量的磁盘 io 操作，可能会严重影响性能。</li>\n</ul>\n<p>另外由于快照方式存在一定间隔时间，如果 redis 意外 down 掉，就会丢失最后一次快照后的所有修改。</p>\n<h3 id=\"Append-only-file\"><a href=\"#Append-only-file\" class=\"headerlink\" title=\"Append-only file\"></a>Append-only file</h3><p>aof 比快照方式有更好的持久化性，在使用 aof 持久化方式时，redis会将每一个收到的写命令都通过 write 函数追加到文件中(默认是appendonly.aof)。 当 redis 重启时会通过重新执行文件中保存的写命令来在内存中重建整个数据库的内容。</p>\n<p>由于 os 会在内核中缓存 write 做的修改，所以可能不是立即写到磁盘上。这样aof方式的持久化也还是有可能会丢失部分修改。不过我们可以通过配置文件告诉redis我们想要通过 fsync 函数强制 os 写入到磁盘的时机。有三种方式如下(默认是:每秒 fsync 一次）</p>\n<p>appendonly yes    //启用 aof 持久化方式</p>\n<ul>\n<li>appendfsync always      //每次收到写命令就立即强制写入磁盘，最慢的，但是保证完全的持久化，不推荐使用</li>\n<li>appendfsync everysec   //每秒钟强制写入磁盘次，在性能和持久化方面做了很好的折中，推荐</li>\n<li>appendfsync no             //完全依赖os,性能最好持久化没保证</li>\n</ul>\n<p>aof 的方式也同时带来了另一个问题：持久化文件会变的越来越大。例如我们调用 incr test 命令100次，文件中必须保存全部的100条命令，其实有99条都是多余的。因为要恢复数据库的状态其实文件中保存一条 set test 100就够了。为了压缩 aof 的持久化文件。redis 提供了 bgrewriteaof 命令。收到此命令 redis 将使用与快照类似的方式将内存中的数据以命令的方式保存到临时文件中，最后替换原来的文件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /usr/local/redis/conf/redis.<span class=\"property\">conf</span> </span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"number\">307</span> #save <span class=\"number\">900</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">308</span> #save <span class=\"number\">300</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"number\">309</span> #save <span class=\"number\">60</span> <span class=\"number\">10000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1089</span> appendonly yes</span><br><span class=\"line\"><span class=\"number\">1093</span> appendfilename <span class=\"string\">&quot;appendonly.aof&quot;</span></span><br><span class=\"line\"><span class=\"number\">1119</span> appendfsync everysec</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n<h2 id=\"Redis-主从复制\"><a href=\"#Redis-主从复制\" class=\"headerlink\" title=\"Redis 主从复制\"></a>Redis 主从复制</h2><p>192.168.0.36 jjh<br>192.168.0.42 jjh2<br>需要注意，主从复制的开启，完全是在从节点发起的，不需要我们在主节点做任何事情<br>从节点开启主从复制，有3种方式：</p>\n<ul>\n<li>配置文件<br>在从服务器的配置文件中加入：slaveof <masterip> <masterport></li>\n<li>启动命令<br>redis-server启动命令后加入 –slaveof <masterip> <masterport></li>\n<li>客户端命令<br>Redis服务器启动后，直接通过客户端执行命令：slaveof <masterip> <masterport>，则该Redis实例成为从节点</li>\n</ul>\n<p>上述3种方式是等效的，下面以客户端命令的方式为例，看一下当执行了slaveof后，Redis主节点和从节点的变化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; slaveof <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> <span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"variable constant_\">OK</span></span><br></pre></td></tr></table></figure>\n<p>在 master 上插入数据</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; set file <span class=\"number\">1.</span>txt</span><br><span class=\"line\"><span class=\"variable constant_\">OK</span></span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; get file</span><br><span class=\"line\"><span class=\"string\">&quot;1.txt&quot;</span></span><br></pre></td></tr></table></figure>\n<p>查看是否成功</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; get file</span><br><span class=\"line\"><span class=\"string\">&quot;1.txt&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Redis-Sentinel-哨兵\"><a href=\"#Redis-Sentinel-哨兵\" class=\"headerlink\" title=\"Redis Sentinel (哨兵)\"></a>Redis Sentinel (哨兵)</h2><p>Redis Sentinl 为 Redis 提供高可用性。实际上，这意味使用 Sentinel 可以创建一个Redis 部署，可以在没有人为干预的情况下抵御某些类型的故障。Redts Sentinel 还提供其他附属任务，如监控、通知、并充当客户端的配置提供程序。</p>\n<p>Sentinel 功能：</p>\n<ul>\n<li>监控：Sentinel 会不断检查主实例和从属实例是否按预期工作。</li>\n<li>通知：Sentinel可以通过API通知系统管理员，另一台计算机程序，其中一个受监控的Redis实例出现问题。</li>\n<li>自动故障转移：如果主服务器未按预期工作，Sentinel 可以启动故障转移过程，其中从服务器被提升为主服务器，其他其他服务器将重新配置为使用新主服务器，并且使用 Redis 服务器的应用程序会通知有关新服务器的地址连接。</li>\n<li>配置提供商：Sentinel 充当客户端服务发现的权限来源：客户端连接到Sentinel ，以便询问负责给定服务的当前 Redis 主服务器的地址。如果发生故障转移，Sentinel 将报告新地址。</li>\n</ul>\n<p>主从节点配置 sentinel.conf 文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# cat conf/sentinel.<span class=\"property\">conf</span> </span><br><span class=\"line\"><span class=\"number\">17</span> protected-mode no      <span class=\"comment\">//设置为非保护模式</span></span><br><span class=\"line\"><span class=\"number\">26</span> daemonize yes          <span class=\"comment\">//设置为守护线程方式运行</span></span><br><span class=\"line\"><span class=\"number\">68</span> sentinel monitor mymaster <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> <span class=\"number\">6379</span> <span class=\"number\">2</span>   <span class=\"comment\">//设置监听的master服务器(服务名，IP，端口，投票数)</span></span><br><span class=\"line\"><span class=\"number\">165</span> sentinel failover-timeout mymaster <span class=\"number\">5000</span>  <span class=\"comment\">//故障转移时间，设置为5秒，默认为3分钟</span></span><br></pre></td></tr></table></figure>\n<p>启动 sentinel 服务，查看主从节点的状态</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-server /usr/local/redis/conf/sentinel.<span class=\"property\">conf</span> --sentinel</span><br><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:master</span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"attr\">slave0</span>:ip=<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span>,port=<span class=\"number\">6379</span>,state=online,offset=<span class=\"number\">478558</span>,lag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">slave1</span>:ip=<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span>,port=<span class=\"number\">6379</span>,state=online,offset=<span class=\"number\">478419</span>,lag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:01b5782acd9d0e503fded1438c05ec6c7ca58201</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">478558</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">8420</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">478558</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:slave</span><br><span class=\"line\"><span class=\"attr\">master_host</span>:<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\"><span class=\"attr\">master_port</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">master_link_status</span>:up</span><br><span class=\"line\"><span class=\"attr\">master_last_io_seconds_ago</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_sync_in_progress</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">slave_repl_offset</span>:<span class=\"number\">522776</span></span><br><span class=\"line\"><span class=\"attr\">slave_priority</span>:<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attr\">slave_read_only</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:<span class=\"number\">0000000000000000000000000000000000000000</span></span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">522776</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:-<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">48185</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">474592</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@jjh3 redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:slave</span><br><span class=\"line\"><span class=\"attr\">master_host</span>:<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span></span><br><span class=\"line\"><span class=\"attr\">master_port</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">master_link_status</span>:up</span><br><span class=\"line\"><span class=\"attr\">master_last_io_seconds_ago</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_sync_in_progress</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">slave_repl_offset</span>:<span class=\"number\">490443</span></span><br><span class=\"line\"><span class=\"attr\">slave_priority</span>:<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attr\">slave_read_only</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:01b5782acd9d0e503fded1438c05ec6c7ca58201</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">490443</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">8420</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">490443</span></span><br></pre></td></tr></table></figure>\n<p>关闭主节点</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh redis-<span class=\"number\">6.0</span><span class=\"number\">.9</span>]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; shutdown</span><br><span class=\"line\">not connected&gt; </span><br></pre></td></tr></table></figure>\n<p>查看从节点的状态</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:master</span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">slave0</span>:ip=<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span>,port=<span class=\"number\">6379</span>,state=online,offset=<span class=\"number\">549683</span>,lag=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:f0287a0dd102e1283d53d362a53d13bbe7666771</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">549822</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">532438</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">48185</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">501638</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@jjh3 ~]# redis-cli</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; info replication</span><br><span class=\"line\"># <span class=\"title class_\">Replication</span></span><br><span class=\"line\"><span class=\"attr\">role</span>:slave</span><br><span class=\"line\"><span class=\"attr\">master_host</span>:<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span></span><br><span class=\"line\"><span class=\"attr\">master_port</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">master_link_status</span>:up</span><br><span class=\"line\"><span class=\"attr\">master_last_io_seconds_ago</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">master_sync_in_progress</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">slave_repl_offset</span>:<span class=\"number\">561568</span></span><br><span class=\"line\"><span class=\"attr\">slave_priority</span>:<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"attr\">slave_read_only</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">connected_slaves</span>:<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">master_replid</span>:f0287a0dd102e1283d53d362a53d13bbe7666771</span><br><span class=\"line\"><span class=\"attr\">master_replid2</span>:6efce840d54c12d3e558966ec3adc6e41cfd422c</span><br><span class=\"line\"><span class=\"attr\">master_repl_offset</span>:<span class=\"number\">561568</span></span><br><span class=\"line\"><span class=\"attr\">second_repl_offset</span>:<span class=\"number\">532438</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_active</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_size</span>:<span class=\"number\">1048576</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_first_byte_offset</span>:<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">repl_backlog_histlen</span>:<span class=\"number\">561568</span></span><br></pre></td></tr></table></figure>\n<p>可以看到主节点已经自动切换，说明 sentinel.conf 配置已经成功。</p>\n"},{"title":"Prometheus介绍与安装","date":"2021-01-27T16:00:00.000Z","updated":"2022-11-20T14:53:46.563Z","description":null,"cover":"https://img.imgdb.cn/item/601267593ffa7d37b3b746d1.jpg","_content":"## Prometheus简介\nPrometheus是最初在SoundCloud上构建的开源系统监视和警报工具包 。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目拥有非常活跃的开发人员和用户社区。现在，它是一个独立的开源项目，并且独立于任何公司进行维护。为了强调这一点并阐明项目的治理结构，Prometheus在2016年加入了 Cloud Native Computing Foundation，这是继Kubernetes之后的第二个托管项目。\n###  特点\n* 一个多维数据模型，其中包含通过度量标准名称和键/值对标识的时间序列数据\n* PromQL，一种灵活的查询语言 ，可利用此维度\n* 不依赖分布式存储；单服务器节点是自治的\n* 时间序列收集通过HTTP上的拉模型进行\n* 通过中间网关支持推送时间序列\n* 通过服务发现或静态配置发现目标\n* 多种图形和仪表板支持模式\n###  体系\n![](https://img.imgdb.cn/item/601264c73ffa7d37b3b5a3b6.jpg)\n## Prometheus安装\n### GO安装\n[GO官网](https://golang.google.cn/)\n```javascript\n[root@prometheus ~]# wget https://golang.google.cn/dl/go1.15.7.linux-amd64.tar.gz\n[root@prometheus ~]# tar -zxvf go1.15.7.linux-amd64.tar.gz -C /usr/local/\n[root@prometheus ~]# vim /etc/profile\n···\nexport PATH=$PATH:/usr/local/go/bin\n···\n# 配置环境变量\n[root@prometheus ~]# source /etc/profile\n[root@prometheus ~]# go version\ngo version go1.15.7 linux/amd64\n# 查看go版本\n```\n### Prometheus安装\n[Prometheus官网](https://prometheus.io/)\n```javascript\n[root@prometheus ~]# wget https://github.com/prometheus/prometheus/releases/download/v2.24.1/prometheus-2.24.1.linux-amd64.tar.gz\n[root@prometheus ~]# tar -zxvf prometheus-2.24.1.linux-amd64.tar.gz -C /usr/local/\n[root@prometheus ~]# ln -sv /usr/local/prometheus-2.24.1.linux-amd64/ /usr/local/Prometheus\n‘/usr/local/Prometheus’ -> ‘/usr/local/prometheus-2.24.1.linux-amd64/’\n[root@prometheus ~]# /usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &\n# 启动promethus服务\n```\n打开 http://localhost:9090/ ,可查看普罗米修斯自带的监控页面\n![](https://img.imgdb.cn/item/60114bb03ffa7d37b32a1a85.png)\n### Grafana安装\n[Grafana官网](https://grafana.com/)\n```javascript\n[root@prometheus ~]# wget https://dl.grafana.com/oss/release/grafana-7.3.7.linux-amd64.tar.gz\n[root@prometheus ~]# tar -zxvf grafana-7.3.7.linux-amd64.tar.gz -C /usr/local/\n[root@prometheus ~]# cd /usr/local/grafana-7.3.7/\n[root@prometheus grafana-7.3.7]# ./bin/grafana-server web &\n```\n打开 http://localhost:3000/ ,验证是否成功\n![](https://img.imgdb.cn/item/60114be03ffa7d37b32a2e27.png)\n账号：admin\n密码：admin\n#### 添加prometheus数据源\n点击界面的 \"Add data source\" \n![](https://img.imgdb.cn/item/60114ff33ffa7d37b32c3ec9.jpg)\n选择Prometheus\n![](https://img.imgdb.cn/item/6011501a3ffa7d37b32c55ba.jpg)\nDashboards页面选择 \"Prometheus 2.0 Stats\"\n![](https://img.imgdb.cn/item/6011515a3ffa7d37b32cfe2c.jpg)\nSettings页面填写 prometheus 地址并保存\n![](https://img.imgdb.cn/item/601150863ffa7d37b32c9247.jpg)\n切换到 \"Prometheus 2.0 Stats\" 查看整个监控页面\n![](https://img.imgdb.cn/item/601151a23ffa7d37b32d1fb8.jpg)\n### 添加常用监控项\n####  MariaDB监控\n```javascript\n[root@prometheus ~]# vim /usr/local/Prometheus/prometheus.yml\n···\n# MySQL监控\n  - job_name: 'MariaDB'\n    static_configs:\n    - targets: ['192.168.0.63:9104']\n# 默认mysqld-exporter端口为9104\n···\n[root@prometheus ~]# pkill prometheus\n[root@prometheus ~]# /usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &\n# 重启下 Prometheus \n```\nMariaDB 安装方法此处略\n```javascript\n[root@mariadb ~]# wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz\n[root@mariadb ~]# tar -zxvf mysqld_exporter-0.12.1.linux-amd64.tar.gz -C /usr/local/\n[root@mariadb ~]# cd /usr/local/mysqld_exporter-0.12.1.linux-amd64/\n[root@mariadb mysqld_exporter-0.12.1.linux-amd64]# vim .my.cnf\n[client]\nuser=root\npassword=password\n# 设置配置文件，user为数据库登录用户，password为这个用户的密码\n[root@mariadb mysqld_exporter-0.12.1.linux-amd64]# /usr/local/mysqld_exporter-0.12.1.linux-amd64/mysqld_exporter --config.my-cnf=\"/usr/local/mysqld_exporter-0.12.1.linux-amd64/.my.cnf\" &\n[1] 24834\nINFO[0000] Starting mysqld_exporter (version=0.12.1, branch=HEAD, revision=48667bf7c3b438b5e93b259f3d17b70a7c9aff96)  source=\"mysqld_exporter.go:257\"\nINFO[0000] Build context (go=go1.12.7, user=root@0b3e56a7bc0a, date=20190729-12:35:58)  source=\"mysqld_exporter.go:258\"\nINFO[0000] Enabled scrapers:                             source=\"mysqld_exporter.go:269\"\nINFO[0000]  --collect.global_status                      source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.global_variables                   source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.slave_status                       source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.info_schema.innodb_cmp             source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.info_schema.innodb_cmpmem          source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.info_schema.query_response_time    source=\"mysqld_exporter.go:273\"\nINFO[0000] Listening on :9104                            source=\"mysqld_exporter.go:283\"\n# 启动mysqld-exporter\n[root@mariadb ~]# mysql -uroot -p\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 28834\nServer version: 10.5.8-MariaDB MariaDB Server\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]> grant all on jumpserver.* to 'root'@'%'identified by 'password';   \nQuery OK, 0 rows affected (0.001 sec)\n```\n访问 http://localhost:9090/ \n![](https://img.imgdb.cn/item/60124f963ffa7d37b3a85b8c.jpg)\nGrafana 添加MariaDB数据源\n![](https://img.imgdb.cn/item/601152e33ffa7d37b32dc15f.jpg)\n添加需要被监控的数据库及相关信息\n![](https://img.imgdb.cn/item/601153503ffa7d37b32dfd0b.jpg)\n查看监控\n![](https://img.imgdb.cn/item/601251be3ffa7d37b3a96852.jpg)\n####  Redis监控\n[redis_exporter](https://github.com/oliver006/redis_exporter)\n```javascript\n[root@redis ~]# git clone https://github.com/oliver006/redis_exporter.git\n[root@redis ~]# cd redis_exporter\n[root@redis redis_exporter]# go build .\ngo: github.com/gomodule/redigo@v1.8.3: Get \"https://proxy.golang.org/github.com/gomodule/redigo/@v/v1.8.3.mod\": dial tcp 172.217.27.145:443: i/o timeout\n# 这个异常的原因是因为某些特殊原因, 我们无法下载墙外的依赖, 所以我们需要去代理服务器进行下载\n[root@redis redis_exporter]# vim /etc/profile\n···\nexport GOPROXY=https://goproxy.io/\n[root@redis redis_exporter]# go build .\n[root@redis redis_exporter]# ./redis_exporter --version\nINFO[0000] Redis Metrics Exporter <<< filled in by build >>>    build date: <<< filled in by build >>>    sha1: <<< filled in by build >>>    Go: go1.15.7    GOOS: linux    GOARCH: amd64 \n[root@redis redis_exporter]# ./redis_exporter -redis.addr 192.168.0.64:6379 -redis.password \"password\" & \n```\n```javascript\n[root@prometheus ~]# vim /usr/local/Prometheus/prometheus.yml\n···\n# Redis监控\n  - job_name: 'Redis'\n    static_configs:\n    - targets: ['192.168.0.64:9121']               \n# 默认redis-exporter端口为9121\n···\n[root@prometheus ~]# pkill prometheus\n[root@prometheus ~]# /usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &\n# 重启下 Prometheus \n```\n访问 http://localhost:9090/ \n![](https://img.imgdb.cn/item/601262b23ffa7d37b3b414b3.jpg)\n访问 http://localhost:3000/ \n![](https://img.imgdb.cn/item/601263153ffa7d37b3b46cd4.jpg)\n未完待续。。。\n","source":"_posts/Prometheus介绍与安装.md","raw":"---\ntitle: Prometheus介绍与安装\ndate: 2021-1-28\nupdated:\ndescription:\ncover: https://img.imgdb.cn/item/601267593ffa7d37b3b746d1.jpg\ntag:\n  - Prometheus\ncategories:\n  - 监控\n---\n## Prometheus简介\nPrometheus是最初在SoundCloud上构建的开源系统监视和警报工具包 。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目拥有非常活跃的开发人员和用户社区。现在，它是一个独立的开源项目，并且独立于任何公司进行维护。为了强调这一点并阐明项目的治理结构，Prometheus在2016年加入了 Cloud Native Computing Foundation，这是继Kubernetes之后的第二个托管项目。\n###  特点\n* 一个多维数据模型，其中包含通过度量标准名称和键/值对标识的时间序列数据\n* PromQL，一种灵活的查询语言 ，可利用此维度\n* 不依赖分布式存储；单服务器节点是自治的\n* 时间序列收集通过HTTP上的拉模型进行\n* 通过中间网关支持推送时间序列\n* 通过服务发现或静态配置发现目标\n* 多种图形和仪表板支持模式\n###  体系\n![](https://img.imgdb.cn/item/601264c73ffa7d37b3b5a3b6.jpg)\n## Prometheus安装\n### GO安装\n[GO官网](https://golang.google.cn/)\n```javascript\n[root@prometheus ~]# wget https://golang.google.cn/dl/go1.15.7.linux-amd64.tar.gz\n[root@prometheus ~]# tar -zxvf go1.15.7.linux-amd64.tar.gz -C /usr/local/\n[root@prometheus ~]# vim /etc/profile\n···\nexport PATH=$PATH:/usr/local/go/bin\n···\n# 配置环境变量\n[root@prometheus ~]# source /etc/profile\n[root@prometheus ~]# go version\ngo version go1.15.7 linux/amd64\n# 查看go版本\n```\n### Prometheus安装\n[Prometheus官网](https://prometheus.io/)\n```javascript\n[root@prometheus ~]# wget https://github.com/prometheus/prometheus/releases/download/v2.24.1/prometheus-2.24.1.linux-amd64.tar.gz\n[root@prometheus ~]# tar -zxvf prometheus-2.24.1.linux-amd64.tar.gz -C /usr/local/\n[root@prometheus ~]# ln -sv /usr/local/prometheus-2.24.1.linux-amd64/ /usr/local/Prometheus\n‘/usr/local/Prometheus’ -> ‘/usr/local/prometheus-2.24.1.linux-amd64/’\n[root@prometheus ~]# /usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &\n# 启动promethus服务\n```\n打开 http://localhost:9090/ ,可查看普罗米修斯自带的监控页面\n![](https://img.imgdb.cn/item/60114bb03ffa7d37b32a1a85.png)\n### Grafana安装\n[Grafana官网](https://grafana.com/)\n```javascript\n[root@prometheus ~]# wget https://dl.grafana.com/oss/release/grafana-7.3.7.linux-amd64.tar.gz\n[root@prometheus ~]# tar -zxvf grafana-7.3.7.linux-amd64.tar.gz -C /usr/local/\n[root@prometheus ~]# cd /usr/local/grafana-7.3.7/\n[root@prometheus grafana-7.3.7]# ./bin/grafana-server web &\n```\n打开 http://localhost:3000/ ,验证是否成功\n![](https://img.imgdb.cn/item/60114be03ffa7d37b32a2e27.png)\n账号：admin\n密码：admin\n#### 添加prometheus数据源\n点击界面的 \"Add data source\" \n![](https://img.imgdb.cn/item/60114ff33ffa7d37b32c3ec9.jpg)\n选择Prometheus\n![](https://img.imgdb.cn/item/6011501a3ffa7d37b32c55ba.jpg)\nDashboards页面选择 \"Prometheus 2.0 Stats\"\n![](https://img.imgdb.cn/item/6011515a3ffa7d37b32cfe2c.jpg)\nSettings页面填写 prometheus 地址并保存\n![](https://img.imgdb.cn/item/601150863ffa7d37b32c9247.jpg)\n切换到 \"Prometheus 2.0 Stats\" 查看整个监控页面\n![](https://img.imgdb.cn/item/601151a23ffa7d37b32d1fb8.jpg)\n### 添加常用监控项\n####  MariaDB监控\n```javascript\n[root@prometheus ~]# vim /usr/local/Prometheus/prometheus.yml\n···\n# MySQL监控\n  - job_name: 'MariaDB'\n    static_configs:\n    - targets: ['192.168.0.63:9104']\n# 默认mysqld-exporter端口为9104\n···\n[root@prometheus ~]# pkill prometheus\n[root@prometheus ~]# /usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &\n# 重启下 Prometheus \n```\nMariaDB 安装方法此处略\n```javascript\n[root@mariadb ~]# wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz\n[root@mariadb ~]# tar -zxvf mysqld_exporter-0.12.1.linux-amd64.tar.gz -C /usr/local/\n[root@mariadb ~]# cd /usr/local/mysqld_exporter-0.12.1.linux-amd64/\n[root@mariadb mysqld_exporter-0.12.1.linux-amd64]# vim .my.cnf\n[client]\nuser=root\npassword=password\n# 设置配置文件，user为数据库登录用户，password为这个用户的密码\n[root@mariadb mysqld_exporter-0.12.1.linux-amd64]# /usr/local/mysqld_exporter-0.12.1.linux-amd64/mysqld_exporter --config.my-cnf=\"/usr/local/mysqld_exporter-0.12.1.linux-amd64/.my.cnf\" &\n[1] 24834\nINFO[0000] Starting mysqld_exporter (version=0.12.1, branch=HEAD, revision=48667bf7c3b438b5e93b259f3d17b70a7c9aff96)  source=\"mysqld_exporter.go:257\"\nINFO[0000] Build context (go=go1.12.7, user=root@0b3e56a7bc0a, date=20190729-12:35:58)  source=\"mysqld_exporter.go:258\"\nINFO[0000] Enabled scrapers:                             source=\"mysqld_exporter.go:269\"\nINFO[0000]  --collect.global_status                      source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.global_variables                   source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.slave_status                       source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.info_schema.innodb_cmp             source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.info_schema.innodb_cmpmem          source=\"mysqld_exporter.go:273\"\nINFO[0000]  --collect.info_schema.query_response_time    source=\"mysqld_exporter.go:273\"\nINFO[0000] Listening on :9104                            source=\"mysqld_exporter.go:283\"\n# 启动mysqld-exporter\n[root@mariadb ~]# mysql -uroot -p\nEnter password: \nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 28834\nServer version: 10.5.8-MariaDB MariaDB Server\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]> grant all on jumpserver.* to 'root'@'%'identified by 'password';   \nQuery OK, 0 rows affected (0.001 sec)\n```\n访问 http://localhost:9090/ \n![](https://img.imgdb.cn/item/60124f963ffa7d37b3a85b8c.jpg)\nGrafana 添加MariaDB数据源\n![](https://img.imgdb.cn/item/601152e33ffa7d37b32dc15f.jpg)\n添加需要被监控的数据库及相关信息\n![](https://img.imgdb.cn/item/601153503ffa7d37b32dfd0b.jpg)\n查看监控\n![](https://img.imgdb.cn/item/601251be3ffa7d37b3a96852.jpg)\n####  Redis监控\n[redis_exporter](https://github.com/oliver006/redis_exporter)\n```javascript\n[root@redis ~]# git clone https://github.com/oliver006/redis_exporter.git\n[root@redis ~]# cd redis_exporter\n[root@redis redis_exporter]# go build .\ngo: github.com/gomodule/redigo@v1.8.3: Get \"https://proxy.golang.org/github.com/gomodule/redigo/@v/v1.8.3.mod\": dial tcp 172.217.27.145:443: i/o timeout\n# 这个异常的原因是因为某些特殊原因, 我们无法下载墙外的依赖, 所以我们需要去代理服务器进行下载\n[root@redis redis_exporter]# vim /etc/profile\n···\nexport GOPROXY=https://goproxy.io/\n[root@redis redis_exporter]# go build .\n[root@redis redis_exporter]# ./redis_exporter --version\nINFO[0000] Redis Metrics Exporter <<< filled in by build >>>    build date: <<< filled in by build >>>    sha1: <<< filled in by build >>>    Go: go1.15.7    GOOS: linux    GOARCH: amd64 \n[root@redis redis_exporter]# ./redis_exporter -redis.addr 192.168.0.64:6379 -redis.password \"password\" & \n```\n```javascript\n[root@prometheus ~]# vim /usr/local/Prometheus/prometheus.yml\n···\n# Redis监控\n  - job_name: 'Redis'\n    static_configs:\n    - targets: ['192.168.0.64:9121']               \n# 默认redis-exporter端口为9121\n···\n[root@prometheus ~]# pkill prometheus\n[root@prometheus ~]# /usr/local/Prometheus/prometheus --config.file=/usr/local/Prometheus/prometheus.yml &\n# 重启下 Prometheus \n```\n访问 http://localhost:9090/ \n![](https://img.imgdb.cn/item/601262b23ffa7d37b3b414b3.jpg)\n访问 http://localhost:3000/ \n![](https://img.imgdb.cn/item/601263153ffa7d37b3b46cd4.jpg)\n未完待续。。。\n","slug":"Prometheus介绍与安装","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avf9000stobvalkf1l62","content":"<h2 id=\"Prometheus简介\"><a href=\"#Prometheus简介\" class=\"headerlink\" title=\"Prometheus简介\"></a>Prometheus简介</h2><p>Prometheus是最初在SoundCloud上构建的开源系统监视和警报工具包 。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目拥有非常活跃的开发人员和用户社区。现在，它是一个独立的开源项目，并且独立于任何公司进行维护。为了强调这一点并阐明项目的治理结构，Prometheus在2016年加入了 Cloud Native Computing Foundation，这是继Kubernetes之后的第二个托管项目。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>一个多维数据模型，其中包含通过度量标准名称和键/值对标识的时间序列数据</li>\n<li>PromQL，一种灵活的查询语言 ，可利用此维度</li>\n<li>不依赖分布式存储；单服务器节点是自治的</li>\n<li>时间序列收集通过HTTP上的拉模型进行</li>\n<li>通过中间网关支持推送时间序列</li>\n<li>通过服务发现或静态配置发现目标</li>\n<li>多种图形和仪表板支持模式<h3 id=\"体系\"><a href=\"#体系\" class=\"headerlink\" title=\"体系\"></a>体系</h3><img src=\"https://img.imgdb.cn/item/601264c73ffa7d37b3b5a3b6.jpg\"><h2 id=\"Prometheus安装\"><a href=\"#Prometheus安装\" class=\"headerlink\" title=\"Prometheus安装\"></a>Prometheus安装</h2><h3 id=\"GO安装\"><a href=\"#GO安装\" class=\"headerlink\" title=\"GO安装\"></a>GO安装</h3><a href=\"https://golang.google.cn/\">GO官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//golang.google.cn/dl/go1.15.7.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@prometheus ~]# tar -zxvf go1<span class=\"number\">.15</span><span class=\"number\">.7</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@prometheus ~]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:<span class=\"regexp\">/usr/</span>local/go/bin</span><br><span class=\"line\">···</span><br><span class=\"line\"># 配置环境变量</span><br><span class=\"line\">[root@prometheus ~]# source /etc/profile</span><br><span class=\"line\">[root@prometheus ~]# go version</span><br><span class=\"line\">go version go1<span class=\"number\">.15</span><span class=\"number\">.7</span> linux/amd64</span><br><span class=\"line\"># 查看go版本</span><br></pre></td></tr></table></figure>\n<h3 id=\"Prometheus安装-1\"><a href=\"#Prometheus安装-1\" class=\"headerlink\" title=\"Prometheus安装\"></a>Prometheus安装</h3><a href=\"https://prometheus.io/\">Prometheus官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/prometheus/prometheus/releases/download/v2.24.1/prometheus-2.24.1.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@prometheus ~]# tar -zxvf prometheus-<span class=\"number\">2.24</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@prometheus ~]# ln -sv /usr/local/prometheus-<span class=\"number\">2.24</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/ <span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span></span><br><span class=\"line\">‘/usr/local/<span class=\"title class_\">Prometheus</span>’ -&gt; ‘/usr/local/prometheus-<span class=\"number\">2.24</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/’</span><br><span class=\"line\">[root@prometheus ~]# /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus --config.<span class=\"property\">file</span>=<span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span> &amp;</span><br><span class=\"line\"># 启动promethus服务</span><br></pre></td></tr></table></figure>\n打开 <a href=\"http://localhost:9090/\">http://localhost:9090/</a> ,可查看普罗米修斯自带的监控页面<br><img src=\"https://img.imgdb.cn/item/60114bb03ffa7d37b32a1a85.png\"><h3 id=\"Grafana安装\"><a href=\"#Grafana安装\" class=\"headerlink\" title=\"Grafana安装\"></a>Grafana安装</h3><a href=\"https://grafana.com/\">Grafana官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//dl.grafana.com/oss/release/grafana-7.3.7.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@prometheus ~]# tar -zxvf grafana-<span class=\"number\">7.3</span><span class=\"number\">.7</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@prometheus ~]# cd /usr/local/grafana-<span class=\"number\">7.3</span><span class=\"number\">.7</span>/</span><br><span class=\"line\">[root@prometheus grafana-<span class=\"number\">7.3</span><span class=\"number\">.7</span>]# ./bin/grafana-server web &amp;</span><br></pre></td></tr></table></figure>\n打开 <a href=\"http://localhost:3000/\">http://localhost:3000/</a> ,验证是否成功<br><img src=\"https://img.imgdb.cn/item/60114be03ffa7d37b32a2e27.png\"><br>账号：admin<br>密码：admin<h4 id=\"添加prometheus数据源\"><a href=\"#添加prometheus数据源\" class=\"headerlink\" title=\"添加prometheus数据源\"></a>添加prometheus数据源</h4>点击界面的 “Add data source”<br><img src=\"https://img.imgdb.cn/item/60114ff33ffa7d37b32c3ec9.jpg\"><br>选择Prometheus<br><img src=\"https://img.imgdb.cn/item/6011501a3ffa7d37b32c55ba.jpg\"><br>Dashboards页面选择 “Prometheus 2.0 Stats”<br><img src=\"https://img.imgdb.cn/item/6011515a3ffa7d37b32cfe2c.jpg\"><br>Settings页面填写 prometheus 地址并保存<br><img src=\"https://img.imgdb.cn/item/601150863ffa7d37b32c9247.jpg\"><br>切换到 “Prometheus 2.0 Stats” 查看整个监控页面<br><img src=\"https://img.imgdb.cn/item/601151a23ffa7d37b32d1fb8.jpg\"><h3 id=\"添加常用监控项\"><a href=\"#添加常用监控项\" class=\"headerlink\" title=\"添加常用监控项\"></a>添加常用监控项</h3><h4 id=\"MariaDB监控\"><a href=\"#MariaDB监控\" class=\"headerlink\" title=\"MariaDB监控\"></a>MariaDB监控</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# vim /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span></span><br><span class=\"line\">···</span><br><span class=\"line\"># <span class=\"title class_\">MySQL</span>监控</span><br><span class=\"line\">  - <span class=\"attr\">job_name</span>: <span class=\"string\">&#x27;MariaDB&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">static_configs</span>:</span><br><span class=\"line\">    - <span class=\"attr\">targets</span>: [<span class=\"string\">&#x27;192.168.0.63:9104&#x27;</span>]</span><br><span class=\"line\"># 默认mysqld-exporter端口为<span class=\"number\">9104</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@prometheus ~]# pkill prometheus</span><br><span class=\"line\">[root@prometheus ~]# /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus --config.<span class=\"property\">file</span>=<span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span> &amp;</span><br><span class=\"line\"># 重启下 <span class=\"title class_\">Prometheus</span> </span><br></pre></td></tr></table></figure>\nMariaDB 安装方法此处略<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mariadb ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@mariadb ~]# tar -zxvf mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@mariadb ~]# cd /usr/local/mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/</span><br><span class=\"line\">[root@mariadb mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64]# vim .<span class=\"property\">my</span>.<span class=\"property\">cnf</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=password</span><br><span class=\"line\"># 设置配置文件，user为数据库登录用户，password为这个用户的密码</span><br><span class=\"line\">[root@mariadb mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64]# /usr/local/mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/mysqld_exporter --config.<span class=\"property\">my</span>-cnf=<span class=\"string\">&quot;/usr/local/mysqld_exporter-0.12.1.linux-amd64/.my.cnf&quot;</span> &amp;</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">24834</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Starting</span> mysqld_exporter (version=<span class=\"number\">0.12</span><span class=\"number\">.1</span>, branch=<span class=\"variable constant_\">HEAD</span>, revision=48667bf7c3b438b5e93b259f3d17b70a7c9aff96)  source=<span class=\"string\">&quot;mysqld_exporter.go:257&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Build</span> context (go=go1<span class=\"number\">.12</span><span class=\"number\">.7</span>, user=root@0b3e56a7bc0a, date=<span class=\"number\">20190729</span>-<span class=\"number\">12</span>:<span class=\"number\">35</span>:<span class=\"number\">58</span>)  source=<span class=\"string\">&quot;mysqld_exporter.go:258&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Enabled</span> <span class=\"attr\">scrapers</span>:                             source=<span class=\"string\">&quot;mysqld_exporter.go:269&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">global_status</span>                      source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">global_variables</span>                   source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">slave_status</span>                       source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">info_schema</span>.<span class=\"property\">innodb_cmp</span>             source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">info_schema</span>.<span class=\"property\">innodb_cmpmem</span>          source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">info_schema</span>.<span class=\"property\">query_response_time</span>    source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Listening</span> on :<span class=\"number\">9104</span>                            source=<span class=\"string\">&quot;mysqld_exporter.go:283&quot;</span></span><br><span class=\"line\"># 启动mysqld-exporter</span><br><span class=\"line\">[root@mariadb ~]# mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MariaDB</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MariaDB</span> connection id is <span class=\"number\">28834</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">10.5</span><span class=\"number\">.8</span>-<span class=\"title class_\">MariaDB</span> <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2018</span>, <span class=\"title class_\">Oracle</span>, <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Corporation</span> <span class=\"title class_\">Ab</span> and others.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; grant all on jumpserver.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>identified by <span class=\"string\">&#x27;password&#x27;</span>;   </span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.001</span> sec)</span><br></pre></td></tr></table></figure>\n访问 <a href=\"http://localhost:9090/\">http://localhost:9090/</a><br><img src=\"https://img.imgdb.cn/item/60124f963ffa7d37b3a85b8c.jpg\"><br>Grafana 添加MariaDB数据源<br><img src=\"https://img.imgdb.cn/item/601152e33ffa7d37b32dc15f.jpg\"><br>添加需要被监控的数据库及相关信息<br><img src=\"https://img.imgdb.cn/item/601153503ffa7d37b32dfd0b.jpg\"><br>查看监控<br><img src=\"https://img.imgdb.cn/item/601251be3ffa7d37b3a96852.jpg\"><h4 id=\"Redis监控\"><a href=\"#Redis监控\" class=\"headerlink\" title=\"Redis监控\"></a>Redis监控</h4><a href=\"https://github.com/oliver006/redis_exporter\">redis_exporter</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@redis ~]# git clone <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/oliver006/redis_exporter.git</span></span><br><span class=\"line\">[root@redis ~]# cd redis_exporter</span><br><span class=\"line\">[root@redis redis_exporter]# go build .</span><br><span class=\"line\"><span class=\"attr\">go</span>: github.<span class=\"property\">com</span>/gomodule/redigo@v1<span class=\"number\">.8</span><span class=\"number\">.3</span>: <span class=\"title class_\">Get</span> <span class=\"string\">&quot;https://proxy.golang.org/github.com/gomodule/redigo/@v/v1.8.3.mod&quot;</span>: dial tcp <span class=\"number\">172.217</span><span class=\"number\">.27</span><span class=\"number\">.145</span>:<span class=\"number\">443</span>: i/o timeout</span><br><span class=\"line\"># 这个异常的原因是因为某些特殊原因, 我们无法下载墙外的依赖, 所以我们需要去代理服务器进行下载</span><br><span class=\"line\">[root@redis redis_exporter]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">GOPROXY</span>=<span class=\"attr\">https</span>:<span class=\"comment\">//goproxy.io/</span></span><br><span class=\"line\">[root@redis redis_exporter]# go build .</span><br><span class=\"line\">[root@redis redis_exporter]# ./redis_exporter --version</span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Redis</span> <span class=\"title class_\">Metrics</span> <span class=\"title class_\">Exporter</span> &lt;&lt;&lt; filled <span class=\"keyword\">in</span> by build &gt;&gt;&gt;    build <span class=\"attr\">date</span>: &lt;&lt;&lt; filled <span class=\"keyword\">in</span> by build &gt;&gt;&gt;    <span class=\"attr\">sha1</span>: &lt;&lt;&lt; filled <span class=\"keyword\">in</span> by build &gt;&gt;&gt;    <span class=\"title class_\">Go</span>: go1<span class=\"number\">.15</span><span class=\"number\">.7</span>    <span class=\"attr\">GOOS</span>: linux    <span class=\"attr\">GOARCH</span>: amd64 </span><br><span class=\"line\">[root@redis redis_exporter]# ./redis_exporter -redis.<span class=\"property\">addr</span> <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.64</span>:<span class=\"number\">6379</span> -redis.<span class=\"property\">password</span> <span class=\"string\">&quot;password&quot;</span> &amp; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# vim /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span></span><br><span class=\"line\">···</span><br><span class=\"line\"># <span class=\"title class_\">Redis</span>监控</span><br><span class=\"line\">  - <span class=\"attr\">job_name</span>: <span class=\"string\">&#x27;Redis&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">static_configs</span>:</span><br><span class=\"line\">    - <span class=\"attr\">targets</span>: [<span class=\"string\">&#x27;192.168.0.64:9121&#x27;</span>]               </span><br><span class=\"line\"># 默认redis-exporter端口为<span class=\"number\">9121</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@prometheus ~]# pkill prometheus</span><br><span class=\"line\">[root@prometheus ~]# /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus --config.<span class=\"property\">file</span>=<span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span> &amp;</span><br><span class=\"line\"># 重启下 <span class=\"title class_\">Prometheus</span> </span><br></pre></td></tr></table></figure>\n访问 <a href=\"http://localhost:9090/\">http://localhost:9090/</a><br><img src=\"https://img.imgdb.cn/item/601262b23ffa7d37b3b414b3.jpg\"><br>访问 <a href=\"http://localhost:3000/\">http://localhost:3000/</a><br><img src=\"https://img.imgdb.cn/item/601263153ffa7d37b3b46cd4.jpg\"><br>未完待续。。。</li>\n</ul>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Prometheus简介\"><a href=\"#Prometheus简介\" class=\"headerlink\" title=\"Prometheus简介\"></a>Prometheus简介</h2><p>Prometheus是最初在SoundCloud上构建的开源系统监视和警报工具包 。自2012年成立以来，许多公司和组织都采用了Prometheus，该项目拥有非常活跃的开发人员和用户社区。现在，它是一个独立的开源项目，并且独立于任何公司进行维护。为了强调这一点并阐明项目的治理结构，Prometheus在2016年加入了 Cloud Native Computing Foundation，这是继Kubernetes之后的第二个托管项目。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>一个多维数据模型，其中包含通过度量标准名称和键/值对标识的时间序列数据</li>\n<li>PromQL，一种灵活的查询语言 ，可利用此维度</li>\n<li>不依赖分布式存储；单服务器节点是自治的</li>\n<li>时间序列收集通过HTTP上的拉模型进行</li>\n<li>通过中间网关支持推送时间序列</li>\n<li>通过服务发现或静态配置发现目标</li>\n<li>多种图形和仪表板支持模式<h3 id=\"体系\"><a href=\"#体系\" class=\"headerlink\" title=\"体系\"></a>体系</h3><img src=\"https://img.imgdb.cn/item/601264c73ffa7d37b3b5a3b6.jpg\"><h2 id=\"Prometheus安装\"><a href=\"#Prometheus安装\" class=\"headerlink\" title=\"Prometheus安装\"></a>Prometheus安装</h2><h3 id=\"GO安装\"><a href=\"#GO安装\" class=\"headerlink\" title=\"GO安装\"></a>GO安装</h3><a href=\"https://golang.google.cn/\">GO官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//golang.google.cn/dl/go1.15.7.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@prometheus ~]# tar -zxvf go1<span class=\"number\">.15</span><span class=\"number\">.7</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@prometheus ~]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:<span class=\"regexp\">/usr/</span>local/go/bin</span><br><span class=\"line\">···</span><br><span class=\"line\"># 配置环境变量</span><br><span class=\"line\">[root@prometheus ~]# source /etc/profile</span><br><span class=\"line\">[root@prometheus ~]# go version</span><br><span class=\"line\">go version go1<span class=\"number\">.15</span><span class=\"number\">.7</span> linux/amd64</span><br><span class=\"line\"># 查看go版本</span><br></pre></td></tr></table></figure>\n<h3 id=\"Prometheus安装-1\"><a href=\"#Prometheus安装-1\" class=\"headerlink\" title=\"Prometheus安装\"></a>Prometheus安装</h3><a href=\"https://prometheus.io/\">Prometheus官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/prometheus/prometheus/releases/download/v2.24.1/prometheus-2.24.1.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@prometheus ~]# tar -zxvf prometheus-<span class=\"number\">2.24</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@prometheus ~]# ln -sv /usr/local/prometheus-<span class=\"number\">2.24</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/ <span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span></span><br><span class=\"line\">‘/usr/local/<span class=\"title class_\">Prometheus</span>’ -&gt; ‘/usr/local/prometheus-<span class=\"number\">2.24</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/’</span><br><span class=\"line\">[root@prometheus ~]# /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus --config.<span class=\"property\">file</span>=<span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span> &amp;</span><br><span class=\"line\"># 启动promethus服务</span><br></pre></td></tr></table></figure>\n打开 <a href=\"http://localhost:9090/\">http://localhost:9090/</a> ,可查看普罗米修斯自带的监控页面<br><img src=\"https://img.imgdb.cn/item/60114bb03ffa7d37b32a1a85.png\"><h3 id=\"Grafana安装\"><a href=\"#Grafana安装\" class=\"headerlink\" title=\"Grafana安装\"></a>Grafana安装</h3><a href=\"https://grafana.com/\">Grafana官网</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//dl.grafana.com/oss/release/grafana-7.3.7.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@prometheus ~]# tar -zxvf grafana-<span class=\"number\">7.3</span><span class=\"number\">.7</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@prometheus ~]# cd /usr/local/grafana-<span class=\"number\">7.3</span><span class=\"number\">.7</span>/</span><br><span class=\"line\">[root@prometheus grafana-<span class=\"number\">7.3</span><span class=\"number\">.7</span>]# ./bin/grafana-server web &amp;</span><br></pre></td></tr></table></figure>\n打开 <a href=\"http://localhost:3000/\">http://localhost:3000/</a> ,验证是否成功<br><img src=\"https://img.imgdb.cn/item/60114be03ffa7d37b32a2e27.png\"><br>账号：admin<br>密码：admin<h4 id=\"添加prometheus数据源\"><a href=\"#添加prometheus数据源\" class=\"headerlink\" title=\"添加prometheus数据源\"></a>添加prometheus数据源</h4>点击界面的 “Add data source”<br><img src=\"https://img.imgdb.cn/item/60114ff33ffa7d37b32c3ec9.jpg\"><br>选择Prometheus<br><img src=\"https://img.imgdb.cn/item/6011501a3ffa7d37b32c55ba.jpg\"><br>Dashboards页面选择 “Prometheus 2.0 Stats”<br><img src=\"https://img.imgdb.cn/item/6011515a3ffa7d37b32cfe2c.jpg\"><br>Settings页面填写 prometheus 地址并保存<br><img src=\"https://img.imgdb.cn/item/601150863ffa7d37b32c9247.jpg\"><br>切换到 “Prometheus 2.0 Stats” 查看整个监控页面<br><img src=\"https://img.imgdb.cn/item/601151a23ffa7d37b32d1fb8.jpg\"><h3 id=\"添加常用监控项\"><a href=\"#添加常用监控项\" class=\"headerlink\" title=\"添加常用监控项\"></a>添加常用监控项</h3><h4 id=\"MariaDB监控\"><a href=\"#MariaDB监控\" class=\"headerlink\" title=\"MariaDB监控\"></a>MariaDB监控</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# vim /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span></span><br><span class=\"line\">···</span><br><span class=\"line\"># <span class=\"title class_\">MySQL</span>监控</span><br><span class=\"line\">  - <span class=\"attr\">job_name</span>: <span class=\"string\">&#x27;MariaDB&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">static_configs</span>:</span><br><span class=\"line\">    - <span class=\"attr\">targets</span>: [<span class=\"string\">&#x27;192.168.0.63:9104&#x27;</span>]</span><br><span class=\"line\"># 默认mysqld-exporter端口为<span class=\"number\">9104</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@prometheus ~]# pkill prometheus</span><br><span class=\"line\">[root@prometheus ~]# /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus --config.<span class=\"property\">file</span>=<span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span> &amp;</span><br><span class=\"line\"># 重启下 <span class=\"title class_\">Prometheus</span> </span><br></pre></td></tr></table></figure>\nMariaDB 安装方法此处略<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@mariadb ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz</span></span><br><span class=\"line\">[root@mariadb ~]# tar -zxvf mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@mariadb ~]# cd /usr/local/mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/</span><br><span class=\"line\">[root@mariadb mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64]# vim .<span class=\"property\">my</span>.<span class=\"property\">cnf</span></span><br><span class=\"line\">[client]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=password</span><br><span class=\"line\"># 设置配置文件，user为数据库登录用户，password为这个用户的密码</span><br><span class=\"line\">[root@mariadb mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64]# /usr/local/mysqld_exporter-<span class=\"number\">0.12</span><span class=\"number\">.1</span>.<span class=\"property\">linux</span>-amd64/mysqld_exporter --config.<span class=\"property\">my</span>-cnf=<span class=\"string\">&quot;/usr/local/mysqld_exporter-0.12.1.linux-amd64/.my.cnf&quot;</span> &amp;</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">24834</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Starting</span> mysqld_exporter (version=<span class=\"number\">0.12</span><span class=\"number\">.1</span>, branch=<span class=\"variable constant_\">HEAD</span>, revision=48667bf7c3b438b5e93b259f3d17b70a7c9aff96)  source=<span class=\"string\">&quot;mysqld_exporter.go:257&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Build</span> context (go=go1<span class=\"number\">.12</span><span class=\"number\">.7</span>, user=root@0b3e56a7bc0a, date=<span class=\"number\">20190729</span>-<span class=\"number\">12</span>:<span class=\"number\">35</span>:<span class=\"number\">58</span>)  source=<span class=\"string\">&quot;mysqld_exporter.go:258&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Enabled</span> <span class=\"attr\">scrapers</span>:                             source=<span class=\"string\">&quot;mysqld_exporter.go:269&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">global_status</span>                      source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">global_variables</span>                   source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">slave_status</span>                       source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">info_schema</span>.<span class=\"property\">innodb_cmp</span>             source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">info_schema</span>.<span class=\"property\">innodb_cmpmem</span>          source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>]  --collect.<span class=\"property\">info_schema</span>.<span class=\"property\">query_response_time</span>    source=<span class=\"string\">&quot;mysqld_exporter.go:273&quot;</span></span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Listening</span> on :<span class=\"number\">9104</span>                            source=<span class=\"string\">&quot;mysqld_exporter.go:283&quot;</span></span><br><span class=\"line\"># 启动mysqld-exporter</span><br><span class=\"line\">[root@mariadb ~]# mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">Enter</span> <span class=\"attr\">password</span>: </span><br><span class=\"line\"><span class=\"title class_\">Welcome</span> to the <span class=\"title class_\">MariaDB</span> monitor.  <span class=\"title class_\">Commands</span> end <span class=\"keyword\">with</span> ; or \\g.</span><br><span class=\"line\"><span class=\"title class_\">Your</span> <span class=\"title class_\">MariaDB</span> connection id is <span class=\"number\">28834</span></span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">version</span>: <span class=\"number\">10.5</span><span class=\"number\">.8</span>-<span class=\"title class_\">MariaDB</span> <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (c) <span class=\"number\">2000</span>, <span class=\"number\">2018</span>, <span class=\"title class_\">Oracle</span>, <span class=\"title class_\">MariaDB</span> <span class=\"title class_\">Corporation</span> <span class=\"title class_\">Ab</span> and others.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Type</span> <span class=\"string\">&#x27;help;&#x27;</span> or <span class=\"string\">&#x27;\\h&#x27;</span> <span class=\"keyword\">for</span> help. <span class=\"title class_\">Type</span> <span class=\"string\">&#x27;\\c&#x27;</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; grant all on jumpserver.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>identified by <span class=\"string\">&#x27;password&#x27;</span>;   </span><br><span class=\"line\"><span class=\"title class_\">Query</span> <span class=\"variable constant_\">OK</span>, <span class=\"number\">0</span> rows affected (<span class=\"number\">0.001</span> sec)</span><br></pre></td></tr></table></figure>\n访问 <a href=\"http://localhost:9090/\">http://localhost:9090/</a><br><img src=\"https://img.imgdb.cn/item/60124f963ffa7d37b3a85b8c.jpg\"><br>Grafana 添加MariaDB数据源<br><img src=\"https://img.imgdb.cn/item/601152e33ffa7d37b32dc15f.jpg\"><br>添加需要被监控的数据库及相关信息<br><img src=\"https://img.imgdb.cn/item/601153503ffa7d37b32dfd0b.jpg\"><br>查看监控<br><img src=\"https://img.imgdb.cn/item/601251be3ffa7d37b3a96852.jpg\"><h4 id=\"Redis监控\"><a href=\"#Redis监控\" class=\"headerlink\" title=\"Redis监控\"></a>Redis监控</h4><a href=\"https://github.com/oliver006/redis_exporter\">redis_exporter</a><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@redis ~]# git clone <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/oliver006/redis_exporter.git</span></span><br><span class=\"line\">[root@redis ~]# cd redis_exporter</span><br><span class=\"line\">[root@redis redis_exporter]# go build .</span><br><span class=\"line\"><span class=\"attr\">go</span>: github.<span class=\"property\">com</span>/gomodule/redigo@v1<span class=\"number\">.8</span><span class=\"number\">.3</span>: <span class=\"title class_\">Get</span> <span class=\"string\">&quot;https://proxy.golang.org/github.com/gomodule/redigo/@v/v1.8.3.mod&quot;</span>: dial tcp <span class=\"number\">172.217</span><span class=\"number\">.27</span><span class=\"number\">.145</span>:<span class=\"number\">443</span>: i/o timeout</span><br><span class=\"line\"># 这个异常的原因是因为某些特殊原因, 我们无法下载墙外的依赖, 所以我们需要去代理服务器进行下载</span><br><span class=\"line\">[root@redis redis_exporter]# vim /etc/profile</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"variable constant_\">GOPROXY</span>=<span class=\"attr\">https</span>:<span class=\"comment\">//goproxy.io/</span></span><br><span class=\"line\">[root@redis redis_exporter]# go build .</span><br><span class=\"line\">[root@redis redis_exporter]# ./redis_exporter --version</span><br><span class=\"line\"><span class=\"variable constant_\">INFO</span>[<span class=\"number\">0000</span>] <span class=\"title class_\">Redis</span> <span class=\"title class_\">Metrics</span> <span class=\"title class_\">Exporter</span> &lt;&lt;&lt; filled <span class=\"keyword\">in</span> by build &gt;&gt;&gt;    build <span class=\"attr\">date</span>: &lt;&lt;&lt; filled <span class=\"keyword\">in</span> by build &gt;&gt;&gt;    <span class=\"attr\">sha1</span>: &lt;&lt;&lt; filled <span class=\"keyword\">in</span> by build &gt;&gt;&gt;    <span class=\"title class_\">Go</span>: go1<span class=\"number\">.15</span><span class=\"number\">.7</span>    <span class=\"attr\">GOOS</span>: linux    <span class=\"attr\">GOARCH</span>: amd64 </span><br><span class=\"line\">[root@redis redis_exporter]# ./redis_exporter -redis.<span class=\"property\">addr</span> <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.64</span>:<span class=\"number\">6379</span> -redis.<span class=\"property\">password</span> <span class=\"string\">&quot;password&quot;</span> &amp; </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@prometheus ~]# vim /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span></span><br><span class=\"line\">···</span><br><span class=\"line\"># <span class=\"title class_\">Redis</span>监控</span><br><span class=\"line\">  - <span class=\"attr\">job_name</span>: <span class=\"string\">&#x27;Redis&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">static_configs</span>:</span><br><span class=\"line\">    - <span class=\"attr\">targets</span>: [<span class=\"string\">&#x27;192.168.0.64:9121&#x27;</span>]               </span><br><span class=\"line\"># 默认redis-exporter端口为<span class=\"number\">9121</span></span><br><span class=\"line\">···</span><br><span class=\"line\">[root@prometheus ~]# pkill prometheus</span><br><span class=\"line\">[root@prometheus ~]# /usr/local/<span class=\"title class_\">Prometheus</span>/prometheus --config.<span class=\"property\">file</span>=<span class=\"regexp\">/usr/</span>local/<span class=\"title class_\">Prometheus</span>/prometheus.<span class=\"property\">yml</span> &amp;</span><br><span class=\"line\"># 重启下 <span class=\"title class_\">Prometheus</span> </span><br></pre></td></tr></table></figure>\n访问 <a href=\"http://localhost:9090/\">http://localhost:9090/</a><br><img src=\"https://img.imgdb.cn/item/601262b23ffa7d37b3b414b3.jpg\"><br>访问 <a href=\"http://localhost:3000/\">http://localhost:3000/</a><br><img src=\"https://img.imgdb.cn/item/601263153ffa7d37b3b46cd4.jpg\"><br>未完待续。。。</li>\n</ul>\n"},{"title":"Samba介绍与安装","date":"2022-11-28T12:43:50.211Z","updated":"2022-12-03T07:09:31.784Z","description":null,"cover":"https://pic.imgdb.cn/item/638af5a416f2c2beb1827dc0.jpg","_content":"## Samba简介\nSamba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。可以在各个操作系统之间实现资源共享。\nSamba包含smbd和 nmbd两个关键程序，可以实施四种基本的现代CIFS服务：\n* 文件和打印服务\n* 认证与授权\nSmbd 提供“共享模式”和“用户模式”的身份验证和授权，可以通过要求密码来保护共享文件和打印服务。\n共享模式：可以将密码分配给共享目录或打印机，然后将这个单一密码提供给允许使用共享的每个人。\n用户模式：每个用户都有自己的用户名和密码，系统管理员可以分别授予或拒绝访问。\n* 名称解析\n名称解析有两种形式：广播和点对点\n客户端将其NetBIOS名称和IP地址发送到NBNS服务器，该服务器将信息保存在简单的数据库中，当客户端要与另一个客户端通话时，它将另一个客户端的名称发送到NBNS服务器。如果名称在列表中，则NBNS递回IP地址。不同子网中的客户端可以共享同一台NBNS服务器。\n* 服务公告（浏览）\n在LAN上，参与的计算机进行选举，以决定其中的哪些计算机将成为本地主浏览器（LMB）。然后，“优胜者”通过声明一个特殊的NetBIOS名称来标识自己。LMB的工作是保留可用服务的列表。\n域主浏览器（DMB）可以在路由网络上跨NT域协调浏览列表。使用NBNS，LMB将找到其DMB，以交换和合并浏览列表。\n[Samba官网](https://wiki.samba.org/)\n##  Samba安装\n###  环境搭建\n|服务器名|操作系统|IP|\n|--|--|--|\n|Samba|CentOS7|192.168.100.101|\n\n####  源码安装 Samba\n```javascript \n[root@samba ~]# yum install -y epel-release \n[root@samba ~]# yum install -y python3 python3-devel perl-Parse-Yapp libtasn1-devel libunistring-devel zlib-devel gmp-devel libffi-devel libldap2-dev lmdb openldap-devel m4 gcc lmdb-devel flex wget\n[root@samba ~]# wget https://gmplib.org/download/gmp/gmp-6.2.1.tar.xz && xz -d gmp-6.2.1.tar.xz && tar -xvf gmp-6.2.1.tar && cd gmp-6.2.1\n[root@localhost gmp-6.2.1]# ./configure\n[root@localhost gmp-6.2.1]# make && make check && make install\n[root@samba gmp-6.2.1]# export GMP_CFLAGS=\"-I/usr/local/include\" GMP_LIBS=\"-L/usr/local/lib -lgmp\"\n\n[root@samba ~]# wget https://ftp.gnu.org/gnu/nettle/nettle-3.7.2.tar.gz && tar -xzvf nettle-3.7.2.tar.gz && cd nettle-3.7.2\n[root@samba nettle-3.7.2]# ./configure --prefix=/usr --enable-static --enable-mini-gmp\n[root@samba nettle-3.7.2]# make && make install\n[root@samba nettle-3.7.2]# chmod -v 755 /usr/lib64/lib{hogweed,nettle}.so && install -v -m755 -d /usr/share/doc/nettle-3.7.2 && install -v -m644 nettle.html /usr/share/doc/nettle-3.7.2\n[root@samba nettle-3.7.2]# nettle-hash --version\n## 查看 nettle 版本\nnettle-hash (nettle 3.7.2)\n\n[root@samba ~]# wget https://ftp.gnu.org/gnu/libtasn1/libtasn1-4.16.0.tar.gz && tar -xzvf libtasn1-4.16.0.tar.gz && cd libtasn1-4.16.0\n[root@samba libtasn1-4.16.0]# export CFLAGS=\"-std=c99\"\n[root@samba libtasn1-4.16.0]# ./configure --prefix=/usr --disable-static\n[root@samba libtasn1-4.16.0]# make && make install\n[root@samba libtasn1-4.16.0]# export CFLAGS=\"\"\n\n[root@samba ~]# wget ftp://sourceware.org/pub/libffi/libffi-3.3.tar.gz && tar xf libffi-3.3.tar.gz && cd libffi-3.3\n[root@samba libffi-3.3]# ./configure --prefix=/usr\n[root@samba libffi-3.3]# make && make install\n[root@samba libffi-3.3]# export LD_LIBRARY_PATH=/usr/libffi-3.3:$LD_LIBRARY_PATH\n\n[root@samba ~]# wget ftp://ftp.gnu.org/gnu/libidn/libidn2-2.3.0.tar.gz && tar -xzvf libidn2-2.3.0.tar.gz && cd libidn2-2.3.0\n[root@samba libidn2-2.3.0]# ./configure --prefix=/usr --disable-static\n[root@samba libidn2-2.3.0]# make && make install\n[root@samba libidn2-2.3.0]# export LIBIDN2_CFLAGS=\"-I/usr/include\" LIBIDN2_LIBS=\"-L/usr/lib -lidn2\"\n\n[root@samba ~]# wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-3.7.1.tar.xz && xz -d gnutls-3.7.1.tar.xz && tar -xvf gnutls-3.7.1.tar && cd gnutls-3.7.1\n[root@samba gnutls-3.7.1]# ./configure --prefix=/usr --docdir=/usr/share/doc/gnutls-3.7.1 --without-p11-kit \n[root@samba gnutls-3.7.1]# make && make install\n[root@samba gnutls-3.7.1]# ldconfig && gnutls-cli -v\ngnutls-cli 3.7.1\nCopyright (C) 2000-2020 Free Software Foundation, and others, all rights reserved.\nThis is free software. It is licensed for use, modification and\nredistribution under the terms of the GNU General Public License,\nversion 3 or later <http://gnu.org/licenses/gpl.html>\n\nPlease send bug reports to:  <bugs@gnutls.org>\n\n[root@samba ~]# wget https://download.samba.org/pub/samba/stable/samba-4.14.3.tar.gz && tar xf samba-4.14.3.tar.gz && cd samba-4.14.3\n[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/gnutls.pc /usr/lib64/pkgconfig/gnutls.pc\n[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so /usr/lib64/libgnutls.so\n[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so.30 /usr/lib64/libgnutls.so.30\n[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/libidn2.pc  /usr/lib64/pkgconfig/libidn2.pc\n[root@samba samba-4.14.3]# ./configure --disable-python --without-ad-dc --without-json --without-libarchive  --without-acl-support --without-pam --with-shared-modules='!vfs_snapper'\n[root@samba samba-4.14.3]# make && make install\n```\n####  验证\n```javascript\n[root@samba ~]# vim /etc/ld.so.conf\n···\n/usr/local/samba/lib\n## 加入一行/usr/local/samba/lib\n···\n[root@samba ~]# ldconfig\n## 执行ldconfig命令让配置生效\n[root@samba ~]# vim /usr/local/samba/etc/smb.conf\n## 创建配置文件\n[root@samba ~]# ln –s  /usr/local/samba/etc/smb.conf   /usr/local/samba/lib/smb.conf \n[root@samba ~]# /usr/local/samba/bin/testparm\n## 如果没有任何错误，说明samba已经安装成功\nLoad smb config files from /usr/local/samba/etc/smb.conf\nLoaded services file OK.\nWeak crypto is allowed\nServer role: ROLE_STANDALONE\n\nPress enter to see a dump of your service definitions\n```\n###  共享模式\n####  修改配置文件\n```javascript\n[root@samba ~]# vim /usr/local/samba/etc/smb.conf\n...\n[global]\n        workgroup = SAMBA          \n        ## 工作组名称\n        security = user            \n        ## 设置用户访问samba服务器的验证方式\n        ## 1. share：用户访问Samba Server不需要提供用户名和口令, 安全性能较低。\n        ## 2. user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。\n        ## 3. server：依靠其他Windows NT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用 Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。\n        ## 4. domain：域安全级别,使用主域控制器(PDC)来完成认证。\n        ## passdb backend = tdbsam    \n        ## 定义用户后台类型\n        ## printing = cups\n        ## 设置共享打印机的配置文件\n        ## printcap name = cups\n        ## Samba共享打印机的类型。\n        ## 现在支持的打印系统有：bsd, sysv, plp, lprng, aix, hpux, qnx\n        ## load printers = yes\n        ## 打印共享功能\n        ## cups options = raw\n        ## 打印机选项\n        map to guest = Bad User \n        ## 添加此项，开启匿名用户访问\n[public]\n##添加的share文件\n        path=/samba/public\n        ##路径\n        public=yes\n        ##公共访问\n        browseable=yes\n        ##能够访问\n        writable=yes\n        ##允许有写的权限\n        create mask=0644\n        ##设置权限\n        directory mask=0755\n...\n[root@samba ~]# mkdir -p /samba/public\n[root@samba ~]# chmod 777 -R /samba/public\n```\n####  启动服务\n```javascript\n[root@samba ~]# /usr/local/samba/sbin/nmbd start\n[root@samba ~]# /usr/local/samba/sbin/smbd start\n```\n####  测试\n![](https://pic.imgdb.cn/item/6094aae7d1a9ae528fabac04.png)\n![](https://pic.imgdb.cn/item/6094aa99d1a9ae528fa9022e.png)\n创建一个测试文件\n```javascript\n[root@samba ~]# cd /samba/public\n[root@samba public]# ll\n总用量 0\n-rw-r--r--. 1 nobody nobody 0 5月   6 17:50 test.txt\n```\n回到Linux服务器可以看到我们共享的文件是匿名访问的\n###  用户模式\n####  修改配置文件\n```javascript\n[root@samba ~]# vim /usr/local/samba/etc/smb.conf\n...\n[global]\n        workgroup = SAMBA\n        security = user\n        passdb backend = tdbsam\n        ## printing = cups\n        ## printcap name = cups\n        ## load printers = yes\n        ## cups options = raw\n        ## map to guest = Bad User \n        ## 注释匿名用户访问\n[private]\n##添加的share文件\n        path=/samba/private\n        ## 路径\n        ## public=yes\n        ## 公共访问\n        browseable=yes\n        ## 能够访问\n        ## writable=yes\n        ##允许有写的权限\n        create mask=0644\n        ## 设置权限\n        directory mask=0755\n        valid users=shuaige liangzai    \n        ## 允许访问的用户\n        write list=shuaige               \n        ## 允许写入的用户   \n        ## hosts deny=xx.xx.xx.xx  \n        ## 拒绝xx.xx.xx.xx访问    \n...\n[root@samba ~]# mkdir -p /samba/private\n[root@samba ~]# chmod 777 -R /samba/private/\n```\n####  添加用户并设置密码\n```javascript\n[root@jjh samba]# useradd shuaige\n## 创建用户\n[root@jjh samba]# /usr/local/samba/bin/smbpasswd -a shuaige\n## 给用户设置密码\nNew SMB password:\nRetype new SMB password:\nAdded user shuaige.\n[root@samba public]# useradd liangzai\n[root@samba public]# /usr/local/samba/bin/smbpasswd -a liangzai\nNew SMB password:\nRetype new SMB password:\nAdded user liangzai.\n[root@samba public]# /usr/local/samba/bin/pdbedit -L\n## 列出smb用户列表\nshuaige:1000:\nliangzai:1001:\n```\n####  启动服务\n```javascript\n[root@samba ~]# /usr/local/samba/sbin/nmbd start\n[root@samba ~]# /usr/local/samba/sbin/smbd start\n```\n####  测试\n![](https://pic.imgdb.cn/item/6094aab6d1a9ae528faa1603.png)\n![](https://pic.imgdb.cn/item/6094aa89d1a9ae528fa86085.png)\n清除登录记录\n![](https://pic.imgdb.cn/item/6094aaadd1a9ae528fa9b800.png)\n![](https://pic.imgdb.cn/item/6094aaa1d1a9ae528fa94b47.png)\n![](https://pic.imgdb.cn/item/6094aa84d1a9ae528fa8330f.png)\n可以看到用户liangzai没有写权限\n```javascript\n[root@samba bin]# cd /samba/private/\n[root@samba private]# ll\n总用量 0\n-rw-r--r--. 1 shuaige shuaige 0 5月   6 18:40 shuaige.txt\n```\n未完待续...\n","source":"_posts/Samba介绍与安装.md","raw":"---\ntitle: Samba介绍与安装\ndate:\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/638af5a416f2c2beb1827dc0.jpg\ntag:\n  - Samba\ncategories:\n  - 共享服务\n---\n## Samba简介\nSamba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。可以在各个操作系统之间实现资源共享。\nSamba包含smbd和 nmbd两个关键程序，可以实施四种基本的现代CIFS服务：\n* 文件和打印服务\n* 认证与授权\nSmbd 提供“共享模式”和“用户模式”的身份验证和授权，可以通过要求密码来保护共享文件和打印服务。\n共享模式：可以将密码分配给共享目录或打印机，然后将这个单一密码提供给允许使用共享的每个人。\n用户模式：每个用户都有自己的用户名和密码，系统管理员可以分别授予或拒绝访问。\n* 名称解析\n名称解析有两种形式：广播和点对点\n客户端将其NetBIOS名称和IP地址发送到NBNS服务器，该服务器将信息保存在简单的数据库中，当客户端要与另一个客户端通话时，它将另一个客户端的名称发送到NBNS服务器。如果名称在列表中，则NBNS递回IP地址。不同子网中的客户端可以共享同一台NBNS服务器。\n* 服务公告（浏览）\n在LAN上，参与的计算机进行选举，以决定其中的哪些计算机将成为本地主浏览器（LMB）。然后，“优胜者”通过声明一个特殊的NetBIOS名称来标识自己。LMB的工作是保留可用服务的列表。\n域主浏览器（DMB）可以在路由网络上跨NT域协调浏览列表。使用NBNS，LMB将找到其DMB，以交换和合并浏览列表。\n[Samba官网](https://wiki.samba.org/)\n##  Samba安装\n###  环境搭建\n|服务器名|操作系统|IP|\n|--|--|--|\n|Samba|CentOS7|192.168.100.101|\n\n####  源码安装 Samba\n```javascript \n[root@samba ~]# yum install -y epel-release \n[root@samba ~]# yum install -y python3 python3-devel perl-Parse-Yapp libtasn1-devel libunistring-devel zlib-devel gmp-devel libffi-devel libldap2-dev lmdb openldap-devel m4 gcc lmdb-devel flex wget\n[root@samba ~]# wget https://gmplib.org/download/gmp/gmp-6.2.1.tar.xz && xz -d gmp-6.2.1.tar.xz && tar -xvf gmp-6.2.1.tar && cd gmp-6.2.1\n[root@localhost gmp-6.2.1]# ./configure\n[root@localhost gmp-6.2.1]# make && make check && make install\n[root@samba gmp-6.2.1]# export GMP_CFLAGS=\"-I/usr/local/include\" GMP_LIBS=\"-L/usr/local/lib -lgmp\"\n\n[root@samba ~]# wget https://ftp.gnu.org/gnu/nettle/nettle-3.7.2.tar.gz && tar -xzvf nettle-3.7.2.tar.gz && cd nettle-3.7.2\n[root@samba nettle-3.7.2]# ./configure --prefix=/usr --enable-static --enable-mini-gmp\n[root@samba nettle-3.7.2]# make && make install\n[root@samba nettle-3.7.2]# chmod -v 755 /usr/lib64/lib{hogweed,nettle}.so && install -v -m755 -d /usr/share/doc/nettle-3.7.2 && install -v -m644 nettle.html /usr/share/doc/nettle-3.7.2\n[root@samba nettle-3.7.2]# nettle-hash --version\n## 查看 nettle 版本\nnettle-hash (nettle 3.7.2)\n\n[root@samba ~]# wget https://ftp.gnu.org/gnu/libtasn1/libtasn1-4.16.0.tar.gz && tar -xzvf libtasn1-4.16.0.tar.gz && cd libtasn1-4.16.0\n[root@samba libtasn1-4.16.0]# export CFLAGS=\"-std=c99\"\n[root@samba libtasn1-4.16.0]# ./configure --prefix=/usr --disable-static\n[root@samba libtasn1-4.16.0]# make && make install\n[root@samba libtasn1-4.16.0]# export CFLAGS=\"\"\n\n[root@samba ~]# wget ftp://sourceware.org/pub/libffi/libffi-3.3.tar.gz && tar xf libffi-3.3.tar.gz && cd libffi-3.3\n[root@samba libffi-3.3]# ./configure --prefix=/usr\n[root@samba libffi-3.3]# make && make install\n[root@samba libffi-3.3]# export LD_LIBRARY_PATH=/usr/libffi-3.3:$LD_LIBRARY_PATH\n\n[root@samba ~]# wget ftp://ftp.gnu.org/gnu/libidn/libidn2-2.3.0.tar.gz && tar -xzvf libidn2-2.3.0.tar.gz && cd libidn2-2.3.0\n[root@samba libidn2-2.3.0]# ./configure --prefix=/usr --disable-static\n[root@samba libidn2-2.3.0]# make && make install\n[root@samba libidn2-2.3.0]# export LIBIDN2_CFLAGS=\"-I/usr/include\" LIBIDN2_LIBS=\"-L/usr/lib -lidn2\"\n\n[root@samba ~]# wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-3.7.1.tar.xz && xz -d gnutls-3.7.1.tar.xz && tar -xvf gnutls-3.7.1.tar && cd gnutls-3.7.1\n[root@samba gnutls-3.7.1]# ./configure --prefix=/usr --docdir=/usr/share/doc/gnutls-3.7.1 --without-p11-kit \n[root@samba gnutls-3.7.1]# make && make install\n[root@samba gnutls-3.7.1]# ldconfig && gnutls-cli -v\ngnutls-cli 3.7.1\nCopyright (C) 2000-2020 Free Software Foundation, and others, all rights reserved.\nThis is free software. It is licensed for use, modification and\nredistribution under the terms of the GNU General Public License,\nversion 3 or later <http://gnu.org/licenses/gpl.html>\n\nPlease send bug reports to:  <bugs@gnutls.org>\n\n[root@samba ~]# wget https://download.samba.org/pub/samba/stable/samba-4.14.3.tar.gz && tar xf samba-4.14.3.tar.gz && cd samba-4.14.3\n[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/gnutls.pc /usr/lib64/pkgconfig/gnutls.pc\n[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so /usr/lib64/libgnutls.so\n[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so.30 /usr/lib64/libgnutls.so.30\n[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/libidn2.pc  /usr/lib64/pkgconfig/libidn2.pc\n[root@samba samba-4.14.3]# ./configure --disable-python --without-ad-dc --without-json --without-libarchive  --without-acl-support --without-pam --with-shared-modules='!vfs_snapper'\n[root@samba samba-4.14.3]# make && make install\n```\n####  验证\n```javascript\n[root@samba ~]# vim /etc/ld.so.conf\n···\n/usr/local/samba/lib\n## 加入一行/usr/local/samba/lib\n···\n[root@samba ~]# ldconfig\n## 执行ldconfig命令让配置生效\n[root@samba ~]# vim /usr/local/samba/etc/smb.conf\n## 创建配置文件\n[root@samba ~]# ln –s  /usr/local/samba/etc/smb.conf   /usr/local/samba/lib/smb.conf \n[root@samba ~]# /usr/local/samba/bin/testparm\n## 如果没有任何错误，说明samba已经安装成功\nLoad smb config files from /usr/local/samba/etc/smb.conf\nLoaded services file OK.\nWeak crypto is allowed\nServer role: ROLE_STANDALONE\n\nPress enter to see a dump of your service definitions\n```\n###  共享模式\n####  修改配置文件\n```javascript\n[root@samba ~]# vim /usr/local/samba/etc/smb.conf\n...\n[global]\n        workgroup = SAMBA          \n        ## 工作组名称\n        security = user            \n        ## 设置用户访问samba服务器的验证方式\n        ## 1. share：用户访问Samba Server不需要提供用户名和口令, 安全性能较低。\n        ## 2. user：Samba Server共享目录只能被授权的用户访问,由Samba Server负责检查账号和密码的正确性。账号和密码要在本Samba Server中建立。\n        ## 3. server：依靠其他Windows NT/2000或Samba Server来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的Windows用户和口令集中到一个NT系统上,使用 Windows NT进行Samba认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,Samba将使用用户级安全模式作为替代的方式。\n        ## 4. domain：域安全级别,使用主域控制器(PDC)来完成认证。\n        ## passdb backend = tdbsam    \n        ## 定义用户后台类型\n        ## printing = cups\n        ## 设置共享打印机的配置文件\n        ## printcap name = cups\n        ## Samba共享打印机的类型。\n        ## 现在支持的打印系统有：bsd, sysv, plp, lprng, aix, hpux, qnx\n        ## load printers = yes\n        ## 打印共享功能\n        ## cups options = raw\n        ## 打印机选项\n        map to guest = Bad User \n        ## 添加此项，开启匿名用户访问\n[public]\n##添加的share文件\n        path=/samba/public\n        ##路径\n        public=yes\n        ##公共访问\n        browseable=yes\n        ##能够访问\n        writable=yes\n        ##允许有写的权限\n        create mask=0644\n        ##设置权限\n        directory mask=0755\n...\n[root@samba ~]# mkdir -p /samba/public\n[root@samba ~]# chmod 777 -R /samba/public\n```\n####  启动服务\n```javascript\n[root@samba ~]# /usr/local/samba/sbin/nmbd start\n[root@samba ~]# /usr/local/samba/sbin/smbd start\n```\n####  测试\n![](https://pic.imgdb.cn/item/6094aae7d1a9ae528fabac04.png)\n![](https://pic.imgdb.cn/item/6094aa99d1a9ae528fa9022e.png)\n创建一个测试文件\n```javascript\n[root@samba ~]# cd /samba/public\n[root@samba public]# ll\n总用量 0\n-rw-r--r--. 1 nobody nobody 0 5月   6 17:50 test.txt\n```\n回到Linux服务器可以看到我们共享的文件是匿名访问的\n###  用户模式\n####  修改配置文件\n```javascript\n[root@samba ~]# vim /usr/local/samba/etc/smb.conf\n...\n[global]\n        workgroup = SAMBA\n        security = user\n        passdb backend = tdbsam\n        ## printing = cups\n        ## printcap name = cups\n        ## load printers = yes\n        ## cups options = raw\n        ## map to guest = Bad User \n        ## 注释匿名用户访问\n[private]\n##添加的share文件\n        path=/samba/private\n        ## 路径\n        ## public=yes\n        ## 公共访问\n        browseable=yes\n        ## 能够访问\n        ## writable=yes\n        ##允许有写的权限\n        create mask=0644\n        ## 设置权限\n        directory mask=0755\n        valid users=shuaige liangzai    \n        ## 允许访问的用户\n        write list=shuaige               \n        ## 允许写入的用户   \n        ## hosts deny=xx.xx.xx.xx  \n        ## 拒绝xx.xx.xx.xx访问    \n...\n[root@samba ~]# mkdir -p /samba/private\n[root@samba ~]# chmod 777 -R /samba/private/\n```\n####  添加用户并设置密码\n```javascript\n[root@jjh samba]# useradd shuaige\n## 创建用户\n[root@jjh samba]# /usr/local/samba/bin/smbpasswd -a shuaige\n## 给用户设置密码\nNew SMB password:\nRetype new SMB password:\nAdded user shuaige.\n[root@samba public]# useradd liangzai\n[root@samba public]# /usr/local/samba/bin/smbpasswd -a liangzai\nNew SMB password:\nRetype new SMB password:\nAdded user liangzai.\n[root@samba public]# /usr/local/samba/bin/pdbedit -L\n## 列出smb用户列表\nshuaige:1000:\nliangzai:1001:\n```\n####  启动服务\n```javascript\n[root@samba ~]# /usr/local/samba/sbin/nmbd start\n[root@samba ~]# /usr/local/samba/sbin/smbd start\n```\n####  测试\n![](https://pic.imgdb.cn/item/6094aab6d1a9ae528faa1603.png)\n![](https://pic.imgdb.cn/item/6094aa89d1a9ae528fa86085.png)\n清除登录记录\n![](https://pic.imgdb.cn/item/6094aaadd1a9ae528fa9b800.png)\n![](https://pic.imgdb.cn/item/6094aaa1d1a9ae528fa94b47.png)\n![](https://pic.imgdb.cn/item/6094aa84d1a9ae528fa8330f.png)\n可以看到用户liangzai没有写权限\n```javascript\n[root@samba bin]# cd /samba/private/\n[root@samba private]# ll\n总用量 0\n-rw-r--r--. 1 shuaige shuaige 0 5月   6 18:40 shuaige.txt\n```\n未完待续...\n","slug":"Samba介绍与安装","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avfa000wtobv18tmetl4","content":"<h2 id=\"Samba简介\"><a href=\"#Samba简介\" class=\"headerlink\" title=\"Samba简介\"></a>Samba简介</h2><p>Samba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。可以在各个操作系统之间实现资源共享。<br>Samba包含smbd和 nmbd两个关键程序，可以实施四种基本的现代CIFS服务：</p>\n<ul>\n<li>文件和打印服务</li>\n<li>认证与授权<br>Smbd 提供“共享模式”和“用户模式”的身份验证和授权，可以通过要求密码来保护共享文件和打印服务。<br>共享模式：可以将密码分配给共享目录或打印机，然后将这个单一密码提供给允许使用共享的每个人。<br>用户模式：每个用户都有自己的用户名和密码，系统管理员可以分别授予或拒绝访问。</li>\n<li>名称解析<br>名称解析有两种形式：广播和点对点<br>客户端将其NetBIOS名称和IP地址发送到NBNS服务器，该服务器将信息保存在简单的数据库中，当客户端要与另一个客户端通话时，它将另一个客户端的名称发送到NBNS服务器。如果名称在列表中，则NBNS递回IP地址。不同子网中的客户端可以共享同一台NBNS服务器。</li>\n<li>服务公告（浏览）<br>在LAN上，参与的计算机进行选举，以决定其中的哪些计算机将成为本地主浏览器（LMB）。然后，“优胜者”通过声明一个特殊的NetBIOS名称来标识自己。LMB的工作是保留可用服务的列表。<br>域主浏览器（DMB）可以在路由网络上跨NT域协调浏览列表。使用NBNS，LMB将找到其DMB，以交换和合并浏览列表。<br><a href=\"https://wiki.samba.org/\">Samba官网</a><h2 id=\"Samba安装\"><a href=\"#Samba安装\" class=\"headerlink\" title=\"Samba安装\"></a>Samba安装</h2><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><table>\n<thead>\n<tr>\n<th>服务器名</th>\n<th>操作系统</th>\n<th>IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Samba</td>\n<td>CentOS7</td>\n<td>192.168.100.101</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"源码安装-Samba\"><a href=\"#源码安装-Samba\" class=\"headerlink\" title=\"源码安装 Samba\"></a>源码安装 Samba</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# yum install -y epel-release </span><br><span class=\"line\">[root@samba ~]# yum install -y python3 python3-devel perl-<span class=\"title class_\">Parse</span>-<span class=\"title class_\">Yapp</span> libtasn1-devel libunistring-devel zlib-devel gmp-devel libffi-devel libldap2-dev lmdb openldap-devel m4 gcc lmdb-devel flex wget</span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//gmplib.org/download/gmp/gmp-6.2.1.tar.xz &amp;&amp; xz -d gmp-6.2.1.tar.xz &amp;&amp; tar -xvf gmp-6.2.1.tar &amp;&amp; cd gmp-6.2.1</span></span><br><span class=\"line\">[root@localhost gmp-<span class=\"number\">6.2</span><span class=\"number\">.1</span>]# ./configure</span><br><span class=\"line\">[root@localhost gmp-<span class=\"number\">6.2</span><span class=\"number\">.1</span>]# make &amp;&amp; make check &amp;&amp; make install</span><br><span class=\"line\">[root@samba gmp-<span class=\"number\">6.2</span><span class=\"number\">.1</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">GMP_CFLAGS</span>=<span class=\"string\">&quot;-I/usr/local/include&quot;</span> <span class=\"variable constant_\">GMP_LIBS</span>=<span class=\"string\">&quot;-L/usr/local/lib -lgmp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//ftp.gnu.org/gnu/nettle/nettle-3.7.2.tar.gz &amp;&amp; tar -xzvf nettle-3.7.2.tar.gz &amp;&amp; cd nettle-3.7.2</span></span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# ./configure --prefix=/usr --enable-<span class=\"keyword\">static</span> --enable-mini-gmp</span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# chmod -v <span class=\"number\">755</span> /usr/lib64/lib&#123;hogweed,nettle&#125;.<span class=\"property\">so</span> &amp;&amp; install -v -m755 -d /usr/share/doc/nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span> &amp;&amp; install -v -m644 nettle.<span class=\"property\">html</span> /usr/share/doc/nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span></span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# nettle-hash --version</span><br><span class=\"line\">## 查看 nettle 版本</span><br><span class=\"line\">nettle-hash (nettle <span class=\"number\">3.7</span><span class=\"number\">.2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//ftp.gnu.org/gnu/libtasn1/libtasn1-4.16.0.tar.gz &amp;&amp; tar -xzvf libtasn1-4.16.0.tar.gz &amp;&amp; cd libtasn1-4.16.0</span></span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">CFLAGS</span>=<span class=\"string\">&quot;-std=c99&quot;</span></span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# ./configure --prefix=/usr --disable-<span class=\"keyword\">static</span></span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">CFLAGS</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">ftp</span>:<span class=\"comment\">//sourceware.org/pub/libffi/libffi-3.3.tar.gz &amp;&amp; tar xf libffi-3.3.tar.gz &amp;&amp; cd libffi-3.3</span></span><br><span class=\"line\">[root@samba libffi-<span class=\"number\">3.3</span>]# ./configure --prefix=/usr</span><br><span class=\"line\">[root@samba libffi-<span class=\"number\">3.3</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba libffi-<span class=\"number\">3.3</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">LD_LIBRARY_PATH</span>=<span class=\"regexp\">/usr/</span>libffi-<span class=\"number\">3.3</span>:$LD_LIBRARY_PATH</span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">ftp</span>:<span class=\"comment\">//ftp.gnu.org/gnu/libidn/libidn2-2.3.0.tar.gz &amp;&amp; tar -xzvf libidn2-2.3.0.tar.gz &amp;&amp; cd libidn2-2.3.0</span></span><br><span class=\"line\">[root@samba libidn2-<span class=\"number\">2.3</span><span class=\"number\">.0</span>]# ./configure --prefix=/usr --disable-<span class=\"keyword\">static</span></span><br><span class=\"line\">[root@samba libidn2-<span class=\"number\">2.3</span><span class=\"number\">.0</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba libidn2-<span class=\"number\">2.3</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"title class_\">LIBIDN2</span>_CFLAGS=<span class=\"string\">&quot;-I/usr/include&quot;</span> <span class=\"title class_\">LIBIDN2</span>_LIBS=<span class=\"string\">&quot;-L/usr/lib -lidn2&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-3.7.1.tar.xz &amp;&amp; xz -d gnutls-3.7.1.tar.xz &amp;&amp; tar -xvf gnutls-3.7.1.tar &amp;&amp; cd gnutls-3.7.1</span></span><br><span class=\"line\">[root@samba gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span>]# ./configure --prefix=<span class=\"regexp\">/usr --docdir=/u</span>sr/share/doc/gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span> --without-p11-kit </span><br><span class=\"line\">[root@samba gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span>]# ldconfig &amp;&amp; gnutls-cli -v</span><br><span class=\"line\">gnutls-cli <span class=\"number\">3.7</span><span class=\"number\">.1</span></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (C) <span class=\"number\">2000</span>-<span class=\"number\">2020</span> <span class=\"title class_\">Free</span> <span class=\"title class_\">Software</span> <span class=\"title class_\">Foundation</span>, and others, all rights reserved.</span><br><span class=\"line\"><span class=\"title class_\">This</span> is free software. <span class=\"title class_\">It</span> is licensed <span class=\"keyword\">for</span> use, modification and</span><br><span class=\"line\">redistribution under the terms <span class=\"keyword\">of</span> the <span class=\"variable constant_\">GNU</span> <span class=\"title class_\">General</span> <span class=\"title class_\">Public</span> <span class=\"title class_\">License</span>,</span><br><span class=\"line\">version <span class=\"number\">3</span> or later &lt;<span class=\"attr\">http</span>:<span class=\"comment\">//gnu.org/licenses/gpl.html&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Please</span> send bug reports <span class=\"attr\">to</span>:  <span class=\"language-xml\">&lt;bugs@gnutls.org&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba ~]# wget https://download.samba.org/pub/samba/stable/samba-4.14.3.tar.gz &amp;&amp; tar xf samba-4.14.3.tar.gz &amp;&amp; cd samba-4.14.3</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/gnutls.pc /usr/lib64/pkgconfig/gnutls.pc</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so /usr/lib64/libgnutls.so</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so.30 /usr/lib64/libgnutls.so.30</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/libidn2.pc  /usr/lib64/pkgconfig/libidn2.pc</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ./configure --disable-python --without-ad-dc --without-json --without-libarchive  --without-acl-support --without-pam --with-shared-modules=&#x27;!vfs_snapper&#x27;</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# vim /etc/ld.<span class=\"property\">so</span>.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\">/usr/local/samba/lib</span><br><span class=\"line\">## 加入一行/usr/local/samba/lib</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@samba ~]# ldconfig</span><br><span class=\"line\">## 执行ldconfig命令让配置生效</span><br><span class=\"line\">[root@samba ~]# vim /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\">## 创建配置文件</span><br><span class=\"line\">[root@samba ~]# ln –s  /usr/local/samba/etc/smb.<span class=\"property\">conf</span>   /usr/local/samba/lib/smb.<span class=\"property\">conf</span> </span><br><span class=\"line\">[root@samba ~]# /usr/local/samba/bin/testparm</span><br><span class=\"line\">## 如果没有任何错误，说明samba已经安装成功</span><br><span class=\"line\"><span class=\"title class_\">Load</span> smb config files <span class=\"keyword\">from</span> /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\"><span class=\"title class_\">Loaded</span> services file <span class=\"variable constant_\">OK</span>.</span><br><span class=\"line\"><span class=\"title class_\">Weak</span> crypto is allowed</span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">role</span>: <span class=\"variable constant_\">ROLE_STANDALONE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Press</span> enter to see a dump <span class=\"keyword\">of</span> your service definitions</span><br></pre></td></tr></table></figure>\n<h3 id=\"共享模式\"><a href=\"#共享模式\" class=\"headerlink\" title=\"共享模式\"></a>共享模式</h3><h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# vim /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\">...</span><br><span class=\"line\">[<span class=\"variable language_\">global</span>]</span><br><span class=\"line\">        workgroup = <span class=\"variable constant_\">SAMBA</span>          </span><br><span class=\"line\">        ## 工作组名称</span><br><span class=\"line\">        security = user            </span><br><span class=\"line\">        ## 设置用户访问samba服务器的验证方式</span><br><span class=\"line\">        ## <span class=\"number\">1.</span> share：用户访问<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>不需要提供用户名和口令, 安全性能较低。</span><br><span class=\"line\">        ## <span class=\"number\">2.</span> user：<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>共享目录只能被授权的用户访问,由<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>负责检查账号和密码的正确性。账号和密码要在本<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>中建立。</span><br><span class=\"line\">        ## <span class=\"number\">3.</span> server：依靠其他<span class=\"title class_\">Windows</span> <span class=\"variable constant_\">NT</span>/<span class=\"number\">2000</span>或<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的<span class=\"title class_\">Windows</span>用户和口令集中到一个<span class=\"variable constant_\">NT</span>系统上,使用 <span class=\"title class_\">Windows</span> <span class=\"variable constant_\">NT</span>进行<span class=\"title class_\">Samba</span>认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,<span class=\"title class_\">Samba</span>将使用用户级安全模式作为替代的方式。</span><br><span class=\"line\">        ## <span class=\"number\">4.</span> domain：域安全级别,使用主域控制器(<span class=\"variable constant_\">PDC</span>)来完成认证。</span><br><span class=\"line\">        ## passdb backend = tdbsam    </span><br><span class=\"line\">        ## 定义用户后台类型</span><br><span class=\"line\">        ## printing = cups</span><br><span class=\"line\">        ## 设置共享打印机的配置文件</span><br><span class=\"line\">        ## printcap name = cups</span><br><span class=\"line\">        ## <span class=\"title class_\">Samba</span>共享打印机的类型。</span><br><span class=\"line\">        ## 现在支持的打印系统有：bsd, sysv, plp, lprng, aix, hpux, qnx</span><br><span class=\"line\">        ## load printers = yes</span><br><span class=\"line\">        ## 打印共享功能</span><br><span class=\"line\">        ## cups options = raw</span><br><span class=\"line\">        ## 打印机选项</span><br><span class=\"line\">        map to guest = <span class=\"title class_\">Bad</span> <span class=\"title class_\">User</span> </span><br><span class=\"line\">        ## 添加此项，开启匿名用户访问</span><br><span class=\"line\">[public]</span><br><span class=\"line\">##添加的share文件</span><br><span class=\"line\">        path=<span class=\"regexp\">/samba/</span>public</span><br><span class=\"line\">        ##路径</span><br><span class=\"line\">        public=yes</span><br><span class=\"line\">        ##公共访问</span><br><span class=\"line\">        browseable=yes</span><br><span class=\"line\">        ##能够访问</span><br><span class=\"line\">        writable=yes</span><br><span class=\"line\">        ##允许有写的权限</span><br><span class=\"line\">        create mask=<span class=\"number\">0644</span></span><br><span class=\"line\">        ##设置权限</span><br><span class=\"line\">        directory mask=<span class=\"number\">0755</span></span><br><span class=\"line\">...</span><br><span class=\"line\">[root@samba ~]# mkdir -p /samba/public</span><br><span class=\"line\">[root@samba ~]# chmod <span class=\"number\">777</span> -R /samba/public</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/nmbd start</span><br><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/smbd start</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><img src=\"https://pic.imgdb.cn/item/6094aae7d1a9ae528fabac04.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aa99d1a9ae528fa9022e.png\"><br>创建一个测试文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# cd /samba/public</span><br><span class=\"line\">[root@samba public]# ll</span><br><span class=\"line\">总用量 <span class=\"number\">0</span></span><br><span class=\"line\">-rw-r--r--. <span class=\"number\">1</span> nobody nobody <span class=\"number\">0</span> <span class=\"number\">5</span>月   <span class=\"number\">6</span> <span class=\"number\">17</span>:<span class=\"number\">50</span> test.<span class=\"property\">txt</span></span><br></pre></td></tr></table></figure>\n<p>回到Linux服务器可以看到我们共享的文件是匿名访问的</p>\n<h3 id=\"用户模式\"><a href=\"#用户模式\" class=\"headerlink\" title=\"用户模式\"></a>用户模式</h3><h4 id=\"修改配置文件-1\"><a href=\"#修改配置文件-1\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# vim /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\">...</span><br><span class=\"line\">[<span class=\"variable language_\">global</span>]</span><br><span class=\"line\">        workgroup = <span class=\"variable constant_\">SAMBA</span></span><br><span class=\"line\">        security = user</span><br><span class=\"line\">        passdb backend = tdbsam</span><br><span class=\"line\">        ## printing = cups</span><br><span class=\"line\">        ## printcap name = cups</span><br><span class=\"line\">        ## load printers = yes</span><br><span class=\"line\">        ## cups options = raw</span><br><span class=\"line\">        ## map to guest = <span class=\"title class_\">Bad</span> <span class=\"title class_\">User</span> </span><br><span class=\"line\">        ## 注释匿名用户访问</span><br><span class=\"line\">[private]</span><br><span class=\"line\">##添加的share文件</span><br><span class=\"line\">        path=<span class=\"regexp\">/samba/</span>private</span><br><span class=\"line\">        ## 路径</span><br><span class=\"line\">        ## public=yes</span><br><span class=\"line\">        ## 公共访问</span><br><span class=\"line\">        browseable=yes</span><br><span class=\"line\">        ## 能够访问</span><br><span class=\"line\">        ## writable=yes</span><br><span class=\"line\">        ##允许有写的权限</span><br><span class=\"line\">        create mask=<span class=\"number\">0644</span></span><br><span class=\"line\">        ## 设置权限</span><br><span class=\"line\">        directory mask=<span class=\"number\">0755</span></span><br><span class=\"line\">        valid users=shuaige liangzai    </span><br><span class=\"line\">        ## 允许访问的用户</span><br><span class=\"line\">        write list=shuaige               </span><br><span class=\"line\">        ## 允许写入的用户   </span><br><span class=\"line\">        ## hosts deny=xx.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>  </span><br><span class=\"line\">        ## 拒绝xx.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>访问    </span><br><span class=\"line\">...</span><br><span class=\"line\">[root@samba ~]# mkdir -p /samba/private</span><br><span class=\"line\">[root@samba ~]# chmod <span class=\"number\">777</span> -R /samba/private/</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加用户并设置密码\"><a href=\"#添加用户并设置密码\" class=\"headerlink\" title=\"添加用户并设置密码\"></a>添加用户并设置密码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh samba]# useradd shuaige</span><br><span class=\"line\">## 创建用户</span><br><span class=\"line\">[root@jjh samba]# /usr/local/samba/bin/smbpasswd -a shuaige</span><br><span class=\"line\">## 给用户设置密码</span><br><span class=\"line\"><span class=\"title class_\">New</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Retype</span> <span class=\"keyword\">new</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Added</span> user shuaige.</span><br><span class=\"line\">[root@samba public]# useradd liangzai</span><br><span class=\"line\">[root@samba public]# /usr/local/samba/bin/smbpasswd -a liangzai</span><br><span class=\"line\"><span class=\"title class_\">New</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Retype</span> <span class=\"keyword\">new</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Added</span> user liangzai.</span><br><span class=\"line\">[root@samba public]# /usr/local/samba/bin/pdbedit -L</span><br><span class=\"line\">## 列出smb用户列表</span><br><span class=\"line\"><span class=\"attr\">shuaige</span>:<span class=\"number\">1000</span>:</span><br><span class=\"line\"><span class=\"attr\">liangzai</span>:<span class=\"number\">1001</span>:</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动服务-1\"><a href=\"#启动服务-1\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/nmbd start</span><br><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/smbd start</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><img src=\"https://pic.imgdb.cn/item/6094aab6d1a9ae528faa1603.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aa89d1a9ae528fa86085.png\"><br>清除登录记录<br><img src=\"https://pic.imgdb.cn/item/6094aaadd1a9ae528fa9b800.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aaa1d1a9ae528fa94b47.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aa84d1a9ae528fa8330f.png\"><br>可以看到用户liangzai没有写权限</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba bin]# cd /samba/private/</span><br><span class=\"line\">[root@samba private]# ll</span><br><span class=\"line\">总用量 <span class=\"number\">0</span></span><br><span class=\"line\">-rw-r--r--. <span class=\"number\">1</span> shuaige shuaige <span class=\"number\">0</span> <span class=\"number\">5</span>月   <span class=\"number\">6</span> <span class=\"number\">18</span>:<span class=\"number\">40</span> shuaige.<span class=\"property\">txt</span></span><br></pre></td></tr></table></figure>\n<p>未完待续…</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Samba简介\"><a href=\"#Samba简介\" class=\"headerlink\" title=\"Samba简介\"></a>Samba简介</h2><p>Samba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。可以在各个操作系统之间实现资源共享。<br>Samba包含smbd和 nmbd两个关键程序，可以实施四种基本的现代CIFS服务：</p>\n<ul>\n<li>文件和打印服务</li>\n<li>认证与授权<br>Smbd 提供“共享模式”和“用户模式”的身份验证和授权，可以通过要求密码来保护共享文件和打印服务。<br>共享模式：可以将密码分配给共享目录或打印机，然后将这个单一密码提供给允许使用共享的每个人。<br>用户模式：每个用户都有自己的用户名和密码，系统管理员可以分别授予或拒绝访问。</li>\n<li>名称解析<br>名称解析有两种形式：广播和点对点<br>客户端将其NetBIOS名称和IP地址发送到NBNS服务器，该服务器将信息保存在简单的数据库中，当客户端要与另一个客户端通话时，它将另一个客户端的名称发送到NBNS服务器。如果名称在列表中，则NBNS递回IP地址。不同子网中的客户端可以共享同一台NBNS服务器。</li>\n<li>服务公告（浏览）<br>在LAN上，参与的计算机进行选举，以决定其中的哪些计算机将成为本地主浏览器（LMB）。然后，“优胜者”通过声明一个特殊的NetBIOS名称来标识自己。LMB的工作是保留可用服务的列表。<br>域主浏览器（DMB）可以在路由网络上跨NT域协调浏览列表。使用NBNS，LMB将找到其DMB，以交换和合并浏览列表。<br><a href=\"https://wiki.samba.org/\">Samba官网</a><h2 id=\"Samba安装\"><a href=\"#Samba安装\" class=\"headerlink\" title=\"Samba安装\"></a>Samba安装</h2><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><table>\n<thead>\n<tr>\n<th>服务器名</th>\n<th>操作系统</th>\n<th>IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Samba</td>\n<td>CentOS7</td>\n<td>192.168.100.101</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h4 id=\"源码安装-Samba\"><a href=\"#源码安装-Samba\" class=\"headerlink\" title=\"源码安装 Samba\"></a>源码安装 Samba</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# yum install -y epel-release </span><br><span class=\"line\">[root@samba ~]# yum install -y python3 python3-devel perl-<span class=\"title class_\">Parse</span>-<span class=\"title class_\">Yapp</span> libtasn1-devel libunistring-devel zlib-devel gmp-devel libffi-devel libldap2-dev lmdb openldap-devel m4 gcc lmdb-devel flex wget</span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//gmplib.org/download/gmp/gmp-6.2.1.tar.xz &amp;&amp; xz -d gmp-6.2.1.tar.xz &amp;&amp; tar -xvf gmp-6.2.1.tar &amp;&amp; cd gmp-6.2.1</span></span><br><span class=\"line\">[root@localhost gmp-<span class=\"number\">6.2</span><span class=\"number\">.1</span>]# ./configure</span><br><span class=\"line\">[root@localhost gmp-<span class=\"number\">6.2</span><span class=\"number\">.1</span>]# make &amp;&amp; make check &amp;&amp; make install</span><br><span class=\"line\">[root@samba gmp-<span class=\"number\">6.2</span><span class=\"number\">.1</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">GMP_CFLAGS</span>=<span class=\"string\">&quot;-I/usr/local/include&quot;</span> <span class=\"variable constant_\">GMP_LIBS</span>=<span class=\"string\">&quot;-L/usr/local/lib -lgmp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//ftp.gnu.org/gnu/nettle/nettle-3.7.2.tar.gz &amp;&amp; tar -xzvf nettle-3.7.2.tar.gz &amp;&amp; cd nettle-3.7.2</span></span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# ./configure --prefix=/usr --enable-<span class=\"keyword\">static</span> --enable-mini-gmp</span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# chmod -v <span class=\"number\">755</span> /usr/lib64/lib&#123;hogweed,nettle&#125;.<span class=\"property\">so</span> &amp;&amp; install -v -m755 -d /usr/share/doc/nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span> &amp;&amp; install -v -m644 nettle.<span class=\"property\">html</span> /usr/share/doc/nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span></span><br><span class=\"line\">[root@samba nettle-<span class=\"number\">3.7</span><span class=\"number\">.2</span>]# nettle-hash --version</span><br><span class=\"line\">## 查看 nettle 版本</span><br><span class=\"line\">nettle-hash (nettle <span class=\"number\">3.7</span><span class=\"number\">.2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//ftp.gnu.org/gnu/libtasn1/libtasn1-4.16.0.tar.gz &amp;&amp; tar -xzvf libtasn1-4.16.0.tar.gz &amp;&amp; cd libtasn1-4.16.0</span></span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">CFLAGS</span>=<span class=\"string\">&quot;-std=c99&quot;</span></span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# ./configure --prefix=/usr --disable-<span class=\"keyword\">static</span></span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba libtasn1-<span class=\"number\">4.16</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">CFLAGS</span>=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">ftp</span>:<span class=\"comment\">//sourceware.org/pub/libffi/libffi-3.3.tar.gz &amp;&amp; tar xf libffi-3.3.tar.gz &amp;&amp; cd libffi-3.3</span></span><br><span class=\"line\">[root@samba libffi-<span class=\"number\">3.3</span>]# ./configure --prefix=/usr</span><br><span class=\"line\">[root@samba libffi-<span class=\"number\">3.3</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba libffi-<span class=\"number\">3.3</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">LD_LIBRARY_PATH</span>=<span class=\"regexp\">/usr/</span>libffi-<span class=\"number\">3.3</span>:$LD_LIBRARY_PATH</span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">ftp</span>:<span class=\"comment\">//ftp.gnu.org/gnu/libidn/libidn2-2.3.0.tar.gz &amp;&amp; tar -xzvf libidn2-2.3.0.tar.gz &amp;&amp; cd libidn2-2.3.0</span></span><br><span class=\"line\">[root@samba libidn2-<span class=\"number\">2.3</span><span class=\"number\">.0</span>]# ./configure --prefix=/usr --disable-<span class=\"keyword\">static</span></span><br><span class=\"line\">[root@samba libidn2-<span class=\"number\">2.3</span><span class=\"number\">.0</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba libidn2-<span class=\"number\">2.3</span><span class=\"number\">.0</span>]# <span class=\"keyword\">export</span> <span class=\"title class_\">LIBIDN2</span>_CFLAGS=<span class=\"string\">&quot;-I/usr/include&quot;</span> <span class=\"title class_\">LIBIDN2</span>_LIBS=<span class=\"string\">&quot;-L/usr/lib -lidn2&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@samba ~]# wget <span class=\"attr\">https</span>:<span class=\"comment\">//www.gnupg.org/ftp/gcrypt/gnutls/v3.7/gnutls-3.7.1.tar.xz &amp;&amp; xz -d gnutls-3.7.1.tar.xz &amp;&amp; tar -xvf gnutls-3.7.1.tar &amp;&amp; cd gnutls-3.7.1</span></span><br><span class=\"line\">[root@samba gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span>]# ./configure --prefix=<span class=\"regexp\">/usr --docdir=/u</span>sr/share/doc/gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span> --without-p11-kit </span><br><span class=\"line\">[root@samba gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@samba gnutls-<span class=\"number\">3.7</span><span class=\"number\">.1</span>]# ldconfig &amp;&amp; gnutls-cli -v</span><br><span class=\"line\">gnutls-cli <span class=\"number\">3.7</span><span class=\"number\">.1</span></span><br><span class=\"line\"><span class=\"title class_\">Copyright</span> (C) <span class=\"number\">2000</span>-<span class=\"number\">2020</span> <span class=\"title class_\">Free</span> <span class=\"title class_\">Software</span> <span class=\"title class_\">Foundation</span>, and others, all rights reserved.</span><br><span class=\"line\"><span class=\"title class_\">This</span> is free software. <span class=\"title class_\">It</span> is licensed <span class=\"keyword\">for</span> use, modification and</span><br><span class=\"line\">redistribution under the terms <span class=\"keyword\">of</span> the <span class=\"variable constant_\">GNU</span> <span class=\"title class_\">General</span> <span class=\"title class_\">Public</span> <span class=\"title class_\">License</span>,</span><br><span class=\"line\">version <span class=\"number\">3</span> or later &lt;<span class=\"attr\">http</span>:<span class=\"comment\">//gnu.org/licenses/gpl.html&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Please</span> send bug reports <span class=\"attr\">to</span>:  <span class=\"language-xml\">&lt;bugs@gnutls.org&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba ~]# wget https://download.samba.org/pub/samba/stable/samba-4.14.3.tar.gz &amp;&amp; tar xf samba-4.14.3.tar.gz &amp;&amp; cd samba-4.14.3</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/gnutls.pc /usr/lib64/pkgconfig/gnutls.pc</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so /usr/lib64/libgnutls.so</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/libgnutls.so.30 /usr/lib64/libgnutls.so.30</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ln -sf /usr/lib/pkgconfig/libidn2.pc  /usr/lib64/pkgconfig/libidn2.pc</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# ./configure --disable-python --without-ad-dc --without-json --without-libarchive  --without-acl-support --without-pam --with-shared-modules=&#x27;!vfs_snapper&#x27;</span></span><br><span class=\"line\"><span class=\"language-xml\">[root@samba samba-4.14.3]# make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# vim /etc/ld.<span class=\"property\">so</span>.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\">/usr/local/samba/lib</span><br><span class=\"line\">## 加入一行/usr/local/samba/lib</span><br><span class=\"line\">···</span><br><span class=\"line\">[root@samba ~]# ldconfig</span><br><span class=\"line\">## 执行ldconfig命令让配置生效</span><br><span class=\"line\">[root@samba ~]# vim /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\">## 创建配置文件</span><br><span class=\"line\">[root@samba ~]# ln –s  /usr/local/samba/etc/smb.<span class=\"property\">conf</span>   /usr/local/samba/lib/smb.<span class=\"property\">conf</span> </span><br><span class=\"line\">[root@samba ~]# /usr/local/samba/bin/testparm</span><br><span class=\"line\">## 如果没有任何错误，说明samba已经安装成功</span><br><span class=\"line\"><span class=\"title class_\">Load</span> smb config files <span class=\"keyword\">from</span> /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\"><span class=\"title class_\">Loaded</span> services file <span class=\"variable constant_\">OK</span>.</span><br><span class=\"line\"><span class=\"title class_\">Weak</span> crypto is allowed</span><br><span class=\"line\"><span class=\"title class_\">Server</span> <span class=\"attr\">role</span>: <span class=\"variable constant_\">ROLE_STANDALONE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Press</span> enter to see a dump <span class=\"keyword\">of</span> your service definitions</span><br></pre></td></tr></table></figure>\n<h3 id=\"共享模式\"><a href=\"#共享模式\" class=\"headerlink\" title=\"共享模式\"></a>共享模式</h3><h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# vim /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\">...</span><br><span class=\"line\">[<span class=\"variable language_\">global</span>]</span><br><span class=\"line\">        workgroup = <span class=\"variable constant_\">SAMBA</span>          </span><br><span class=\"line\">        ## 工作组名称</span><br><span class=\"line\">        security = user            </span><br><span class=\"line\">        ## 设置用户访问samba服务器的验证方式</span><br><span class=\"line\">        ## <span class=\"number\">1.</span> share：用户访问<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>不需要提供用户名和口令, 安全性能较低。</span><br><span class=\"line\">        ## <span class=\"number\">2.</span> user：<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>共享目录只能被授权的用户访问,由<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>负责检查账号和密码的正确性。账号和密码要在本<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>中建立。</span><br><span class=\"line\">        ## <span class=\"number\">3.</span> server：依靠其他<span class=\"title class_\">Windows</span> <span class=\"variable constant_\">NT</span>/<span class=\"number\">2000</span>或<span class=\"title class_\">Samba</span> <span class=\"title class_\">Server</span>来验证用户的账号和密码,是一种代理验证。此种安全模式下,系统管理员可以把所有的<span class=\"title class_\">Windows</span>用户和口令集中到一个<span class=\"variable constant_\">NT</span>系统上,使用 <span class=\"title class_\">Windows</span> <span class=\"variable constant_\">NT</span>进行<span class=\"title class_\">Samba</span>认证, 远程服务器可以自动认证全部用户和口令,如果认证失败,<span class=\"title class_\">Samba</span>将使用用户级安全模式作为替代的方式。</span><br><span class=\"line\">        ## <span class=\"number\">4.</span> domain：域安全级别,使用主域控制器(<span class=\"variable constant_\">PDC</span>)来完成认证。</span><br><span class=\"line\">        ## passdb backend = tdbsam    </span><br><span class=\"line\">        ## 定义用户后台类型</span><br><span class=\"line\">        ## printing = cups</span><br><span class=\"line\">        ## 设置共享打印机的配置文件</span><br><span class=\"line\">        ## printcap name = cups</span><br><span class=\"line\">        ## <span class=\"title class_\">Samba</span>共享打印机的类型。</span><br><span class=\"line\">        ## 现在支持的打印系统有：bsd, sysv, plp, lprng, aix, hpux, qnx</span><br><span class=\"line\">        ## load printers = yes</span><br><span class=\"line\">        ## 打印共享功能</span><br><span class=\"line\">        ## cups options = raw</span><br><span class=\"line\">        ## 打印机选项</span><br><span class=\"line\">        map to guest = <span class=\"title class_\">Bad</span> <span class=\"title class_\">User</span> </span><br><span class=\"line\">        ## 添加此项，开启匿名用户访问</span><br><span class=\"line\">[public]</span><br><span class=\"line\">##添加的share文件</span><br><span class=\"line\">        path=<span class=\"regexp\">/samba/</span>public</span><br><span class=\"line\">        ##路径</span><br><span class=\"line\">        public=yes</span><br><span class=\"line\">        ##公共访问</span><br><span class=\"line\">        browseable=yes</span><br><span class=\"line\">        ##能够访问</span><br><span class=\"line\">        writable=yes</span><br><span class=\"line\">        ##允许有写的权限</span><br><span class=\"line\">        create mask=<span class=\"number\">0644</span></span><br><span class=\"line\">        ##设置权限</span><br><span class=\"line\">        directory mask=<span class=\"number\">0755</span></span><br><span class=\"line\">...</span><br><span class=\"line\">[root@samba ~]# mkdir -p /samba/public</span><br><span class=\"line\">[root@samba ~]# chmod <span class=\"number\">777</span> -R /samba/public</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/nmbd start</span><br><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/smbd start</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><img src=\"https://pic.imgdb.cn/item/6094aae7d1a9ae528fabac04.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aa99d1a9ae528fa9022e.png\"><br>创建一个测试文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# cd /samba/public</span><br><span class=\"line\">[root@samba public]# ll</span><br><span class=\"line\">总用量 <span class=\"number\">0</span></span><br><span class=\"line\">-rw-r--r--. <span class=\"number\">1</span> nobody nobody <span class=\"number\">0</span> <span class=\"number\">5</span>月   <span class=\"number\">6</span> <span class=\"number\">17</span>:<span class=\"number\">50</span> test.<span class=\"property\">txt</span></span><br></pre></td></tr></table></figure>\n<p>回到Linux服务器可以看到我们共享的文件是匿名访问的</p>\n<h3 id=\"用户模式\"><a href=\"#用户模式\" class=\"headerlink\" title=\"用户模式\"></a>用户模式</h3><h4 id=\"修改配置文件-1\"><a href=\"#修改配置文件-1\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# vim /usr/local/samba/etc/smb.<span class=\"property\">conf</span></span><br><span class=\"line\">...</span><br><span class=\"line\">[<span class=\"variable language_\">global</span>]</span><br><span class=\"line\">        workgroup = <span class=\"variable constant_\">SAMBA</span></span><br><span class=\"line\">        security = user</span><br><span class=\"line\">        passdb backend = tdbsam</span><br><span class=\"line\">        ## printing = cups</span><br><span class=\"line\">        ## printcap name = cups</span><br><span class=\"line\">        ## load printers = yes</span><br><span class=\"line\">        ## cups options = raw</span><br><span class=\"line\">        ## map to guest = <span class=\"title class_\">Bad</span> <span class=\"title class_\">User</span> </span><br><span class=\"line\">        ## 注释匿名用户访问</span><br><span class=\"line\">[private]</span><br><span class=\"line\">##添加的share文件</span><br><span class=\"line\">        path=<span class=\"regexp\">/samba/</span>private</span><br><span class=\"line\">        ## 路径</span><br><span class=\"line\">        ## public=yes</span><br><span class=\"line\">        ## 公共访问</span><br><span class=\"line\">        browseable=yes</span><br><span class=\"line\">        ## 能够访问</span><br><span class=\"line\">        ## writable=yes</span><br><span class=\"line\">        ##允许有写的权限</span><br><span class=\"line\">        create mask=<span class=\"number\">0644</span></span><br><span class=\"line\">        ## 设置权限</span><br><span class=\"line\">        directory mask=<span class=\"number\">0755</span></span><br><span class=\"line\">        valid users=shuaige liangzai    </span><br><span class=\"line\">        ## 允许访问的用户</span><br><span class=\"line\">        write list=shuaige               </span><br><span class=\"line\">        ## 允许写入的用户   </span><br><span class=\"line\">        ## hosts deny=xx.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>  </span><br><span class=\"line\">        ## 拒绝xx.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>.<span class=\"property\">xx</span>访问    </span><br><span class=\"line\">...</span><br><span class=\"line\">[root@samba ~]# mkdir -p /samba/private</span><br><span class=\"line\">[root@samba ~]# chmod <span class=\"number\">777</span> -R /samba/private/</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加用户并设置密码\"><a href=\"#添加用户并设置密码\" class=\"headerlink\" title=\"添加用户并设置密码\"></a>添加用户并设置密码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh samba]# useradd shuaige</span><br><span class=\"line\">## 创建用户</span><br><span class=\"line\">[root@jjh samba]# /usr/local/samba/bin/smbpasswd -a shuaige</span><br><span class=\"line\">## 给用户设置密码</span><br><span class=\"line\"><span class=\"title class_\">New</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Retype</span> <span class=\"keyword\">new</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Added</span> user shuaige.</span><br><span class=\"line\">[root@samba public]# useradd liangzai</span><br><span class=\"line\">[root@samba public]# /usr/local/samba/bin/smbpasswd -a liangzai</span><br><span class=\"line\"><span class=\"title class_\">New</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Retype</span> <span class=\"keyword\">new</span> <span class=\"variable constant_\">SMB</span> <span class=\"attr\">password</span>:</span><br><span class=\"line\"><span class=\"title class_\">Added</span> user liangzai.</span><br><span class=\"line\">[root@samba public]# /usr/local/samba/bin/pdbedit -L</span><br><span class=\"line\">## 列出smb用户列表</span><br><span class=\"line\"><span class=\"attr\">shuaige</span>:<span class=\"number\">1000</span>:</span><br><span class=\"line\"><span class=\"attr\">liangzai</span>:<span class=\"number\">1001</span>:</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动服务-1\"><a href=\"#启动服务-1\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/nmbd start</span><br><span class=\"line\">[root@samba ~]# /usr/local/samba/sbin/smbd start</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试-1\"><a href=\"#测试-1\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><img src=\"https://pic.imgdb.cn/item/6094aab6d1a9ae528faa1603.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aa89d1a9ae528fa86085.png\"><br>清除登录记录<br><img src=\"https://pic.imgdb.cn/item/6094aaadd1a9ae528fa9b800.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aaa1d1a9ae528fa94b47.png\"><br><img src=\"https://pic.imgdb.cn/item/6094aa84d1a9ae528fa8330f.png\"><br>可以看到用户liangzai没有写权限</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@samba bin]# cd /samba/private/</span><br><span class=\"line\">[root@samba private]# ll</span><br><span class=\"line\">总用量 <span class=\"number\">0</span></span><br><span class=\"line\">-rw-r--r--. <span class=\"number\">1</span> shuaige shuaige <span class=\"number\">0</span> <span class=\"number\">5</span>月   <span class=\"number\">6</span> <span class=\"number\">18</span>:<span class=\"number\">40</span> shuaige.<span class=\"property\">txt</span></span><br></pre></td></tr></table></figure>\n<p>未完待续…</p>\n"},{"title":"Squid缓存加速","date":"2020-12-27T16:00:00.000Z","updated":"2022-12-03T07:21:07.116Z","description":null,"cover":"https://pic.imgdb.cn/item/638af59516f2c2beb18251ca.jpg","_content":"##  Squid简介\n参考[Squid官网](http://www.squid-cache.org/)\n###  工作机制\n当客户机通过代理来请求Web页面时，指定的代理服务器会先检查自己的缓存，如果缓存中已经有客户机需要的页面，则直接将缓存中的页面内容反馈给客户机\n如果缓存中没有客户机要访问的页面，则由代理服务器向Internet发送请求，当获得返回的Web页面后，将网页数据保存到缓存中并发送给客户机，同时记录缓存\n###  代理基本类型\n* 传统代理(普通代理)\n内网>普通代理服务器>外网\n内网客户机需配置浏览器的LAN代理IP及端口\n无需设置防火墙规则及路由转发\n* 透明代理\n内网>透明代理服务器>外网\n内网客户机无需添加配置\n需要配置防火墙规则(REDIRECT 重定向)，开启路由转发功能\n* 反向代理\n内网服务器<反向代理服务器<外网客户机\n外网客户机无需添加配置\n无需添加防火墙规则\n###  使用Squid代理服务器访问外网的优点\n* 减少重复请求，节约带宽\n* 具有ACL (Access Control List)访问控制列表功能，对客户机上网行为灵活控制\n* 对内网客户机具有保护作用\n##  传统代理\n###  配置Squid\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|squid|CentOS 7|192.168.0.36|\n|nginx|CentOS 7|192.168.0.48|\n|客户机|windows|192.168.0.52|\n\n####  源码安装Squid\n```javascript\n[root@squid ~]# yum install -y perl autoconf automake make libxml2-devel libcap-devel libtool-ltdl-devel gcc gcc-c++\n[root@squid ~]# ls\nsquid-4.13.tar.gz\n[root@squid ~]# tar -zxvf squid-4.13.tar.gz -C /usr/local/\n[root@squid ~]# cd /usr/local/squid-4.13/\n[root@squid squid-4.13]# ./configure --prefix=/usr/local/squid\n[root@squid squid-4.13]# make && make install\n[root@squid squid-4.13]# ln -s /usr/local/squid/sbin/ /usr/local/sbin/\n## 创建软链接\n[root@squid squid-4.13]# useradd -M -s /sbin/nologin squid\n## 创建管理进程的用户\n[root@squid squid-4.13]# chown -R squid.squid /usr/local/squid/var/\n## 修改文件的属主和属组\n```\n####  修改Squid的配置文件\n```javascript\n[root@squid squid-4.13]# vim /etc/squid.conf\n···\ncache_effective_user squid #添加指定程序用户\ncache_effective_group squid #添加指定账号基本组\n···\n```\n#### 启动Squid\n```javascript\n[root@squid squid-4.13]# export PATH=$PATH:/usr/local/squid/sbin/\n[root@squid squid-4.13]# squid -k parse\n## 检查配置文件语法\n[root@squid squid-4.13]# squid           \n## 启动Squid服务\n[root@squid squid-4.13]# netstat -ntap | grep squid    \ntcp6       0      0 :::3128                 :::*                    LISTEN      28971/(squid-1)       \n## 服务启动，Squid服务处于正常监听状态\n```\n###  配置Nginx\nnginx 的安装及修改之前有写过就不在这里详细说明了，记得打开日志\n###  配置客户机\n客户机的代理配置，在IE浏览器中，选择\"工具\"->\"Internet选项\",然后弹出的\"Internet选项\"对话框，在\"连接\"选项中的\"局域网(LAN)设置\"选项组中单击\"局域网设置\"按钮，弹出\"局域网(LAN)设置\"对话框，设置如下:\n![](https://pic.downk.cc/item/5fe9a3053ffa7d37b3ddc84d.png)\n访问 nginx 服务\n![](https://pic.downk.cc/item/5fe9a30e3ffa7d37b3ddd7ca.png)\n###  验证\n```javascript\n[root@nginx logs]# tailf access.log \n192.168.0.36 - - [28/Dec/2020:17:08:24 +0800] \"GET / HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\n192.168.0.36 - - [28/Dec/2020:17:08:24 +0800] \"GET / HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\n192.168.0.36 - - [28/Dec/2020:17:08:24 +0800] \"GET / HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\n```\n可以看到的确是代理服务器访问的，说明传统代理部署成功\n\n","source":"_posts/Squid缓存加速.md","raw":"---\ntitle: Squid缓存加速\ndate: 2020-12-28\nupdated:\ndescription: \ncover: https://pic.imgdb.cn/item/638af59516f2c2beb18251ca.jpg\ntag:\n  - Squid\ncategories:\n  - 缓存加速\n---\n##  Squid简介\n参考[Squid官网](http://www.squid-cache.org/)\n###  工作机制\n当客户机通过代理来请求Web页面时，指定的代理服务器会先检查自己的缓存，如果缓存中已经有客户机需要的页面，则直接将缓存中的页面内容反馈给客户机\n如果缓存中没有客户机要访问的页面，则由代理服务器向Internet发送请求，当获得返回的Web页面后，将网页数据保存到缓存中并发送给客户机，同时记录缓存\n###  代理基本类型\n* 传统代理(普通代理)\n内网>普通代理服务器>外网\n内网客户机需配置浏览器的LAN代理IP及端口\n无需设置防火墙规则及路由转发\n* 透明代理\n内网>透明代理服务器>外网\n内网客户机无需添加配置\n需要配置防火墙规则(REDIRECT 重定向)，开启路由转发功能\n* 反向代理\n内网服务器<反向代理服务器<外网客户机\n外网客户机无需添加配置\n无需添加防火墙规则\n###  使用Squid代理服务器访问外网的优点\n* 减少重复请求，节约带宽\n* 具有ACL (Access Control List)访问控制列表功能，对客户机上网行为灵活控制\n* 对内网客户机具有保护作用\n##  传统代理\n###  配置Squid\n\n|服务器名|操作系统|IP|\n|:--------:|:--------:|:--------:|\n|squid|CentOS 7|192.168.0.36|\n|nginx|CentOS 7|192.168.0.48|\n|客户机|windows|192.168.0.52|\n\n####  源码安装Squid\n```javascript\n[root@squid ~]# yum install -y perl autoconf automake make libxml2-devel libcap-devel libtool-ltdl-devel gcc gcc-c++\n[root@squid ~]# ls\nsquid-4.13.tar.gz\n[root@squid ~]# tar -zxvf squid-4.13.tar.gz -C /usr/local/\n[root@squid ~]# cd /usr/local/squid-4.13/\n[root@squid squid-4.13]# ./configure --prefix=/usr/local/squid\n[root@squid squid-4.13]# make && make install\n[root@squid squid-4.13]# ln -s /usr/local/squid/sbin/ /usr/local/sbin/\n## 创建软链接\n[root@squid squid-4.13]# useradd -M -s /sbin/nologin squid\n## 创建管理进程的用户\n[root@squid squid-4.13]# chown -R squid.squid /usr/local/squid/var/\n## 修改文件的属主和属组\n```\n####  修改Squid的配置文件\n```javascript\n[root@squid squid-4.13]# vim /etc/squid.conf\n···\ncache_effective_user squid #添加指定程序用户\ncache_effective_group squid #添加指定账号基本组\n···\n```\n#### 启动Squid\n```javascript\n[root@squid squid-4.13]# export PATH=$PATH:/usr/local/squid/sbin/\n[root@squid squid-4.13]# squid -k parse\n## 检查配置文件语法\n[root@squid squid-4.13]# squid           \n## 启动Squid服务\n[root@squid squid-4.13]# netstat -ntap | grep squid    \ntcp6       0      0 :::3128                 :::*                    LISTEN      28971/(squid-1)       \n## 服务启动，Squid服务处于正常监听状态\n```\n###  配置Nginx\nnginx 的安装及修改之前有写过就不在这里详细说明了，记得打开日志\n###  配置客户机\n客户机的代理配置，在IE浏览器中，选择\"工具\"->\"Internet选项\",然后弹出的\"Internet选项\"对话框，在\"连接\"选项中的\"局域网(LAN)设置\"选项组中单击\"局域网设置\"按钮，弹出\"局域网(LAN)设置\"对话框，设置如下:\n![](https://pic.downk.cc/item/5fe9a3053ffa7d37b3ddc84d.png)\n访问 nginx 服务\n![](https://pic.downk.cc/item/5fe9a30e3ffa7d37b3ddd7ca.png)\n###  验证\n```javascript\n[root@nginx logs]# tailf access.log \n192.168.0.36 - - [28/Dec/2020:17:08:24 +0800] \"GET / HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\n192.168.0.36 - - [28/Dec/2020:17:08:24 +0800] \"GET / HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\n192.168.0.36 - - [28/Dec/2020:17:08:24 +0800] \"GET / HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\n```\n可以看到的确是代理服务器访问的，说明传统代理部署成功\n\n","slug":"Squid缓存加速","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avfc000ztobvbgay1uhf","content":"<h2 id=\"Squid简介\"><a href=\"#Squid简介\" class=\"headerlink\" title=\"Squid简介\"></a>Squid简介</h2><p>参考<a href=\"http://www.squid-cache.org/\">Squid官网</a></p>\n<h3 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h3><p>当客户机通过代理来请求Web页面时，指定的代理服务器会先检查自己的缓存，如果缓存中已经有客户机需要的页面，则直接将缓存中的页面内容反馈给客户机<br>如果缓存中没有客户机要访问的页面，则由代理服务器向Internet发送请求，当获得返回的Web页面后，将网页数据保存到缓存中并发送给客户机，同时记录缓存</p>\n<h3 id=\"代理基本类型\"><a href=\"#代理基本类型\" class=\"headerlink\" title=\"代理基本类型\"></a>代理基本类型</h3><ul>\n<li>传统代理(普通代理)<br>内网&gt;普通代理服务器&gt;外网<br>内网客户机需配置浏览器的LAN代理IP及端口<br>无需设置防火墙规则及路由转发</li>\n<li>透明代理<br>内网&gt;透明代理服务器&gt;外网<br>内网客户机无需添加配置<br>需要配置防火墙规则(REDIRECT 重定向)，开启路由转发功能</li>\n<li>反向代理<br>内网服务器&lt;反向代理服务器&lt;外网客户机<br>外网客户机无需添加配置<br>无需添加防火墙规则<h3 id=\"使用Squid代理服务器访问外网的优点\"><a href=\"#使用Squid代理服务器访问外网的优点\" class=\"headerlink\" title=\"使用Squid代理服务器访问外网的优点\"></a>使用Squid代理服务器访问外网的优点</h3></li>\n<li>减少重复请求，节约带宽</li>\n<li>具有ACL (Access Control List)访问控制列表功能，对客户机上网行为灵活控制</li>\n<li>对内网客户机具有保护作用<h2 id=\"传统代理\"><a href=\"#传统代理\" class=\"headerlink\" title=\"传统代理\"></a>传统代理</h2><h3 id=\"配置Squid\"><a href=\"#配置Squid\" class=\"headerlink\" title=\"配置Squid\"></a>配置Squid</h3></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">squid</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">nginx</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.48</td>\n</tr>\n<tr>\n<td align=\"center\">客户机</td>\n<td align=\"center\">windows</td>\n<td align=\"center\">192.168.0.52</td>\n</tr>\n</tbody></table>\n<h4 id=\"源码安装Squid\"><a href=\"#源码安装Squid\" class=\"headerlink\" title=\"源码安装Squid\"></a>源码安装Squid</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@squid ~]# yum install -y perl autoconf automake make libxml2-devel libcap-devel libtool-ltdl-devel gcc gcc-c++</span><br><span class=\"line\">[root@squid ~]# ls</span><br><span class=\"line\">squid-<span class=\"number\">4.13</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@squid ~]# tar -zxvf squid-<span class=\"number\">4.13</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@squid ~]# cd /usr/local/squid-<span class=\"number\">4.13</span>/</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# ./configure --prefix=<span class=\"regexp\">/usr/</span>local/squid</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# ln -s /usr/local/squid/sbin/ <span class=\"regexp\">/usr/</span>local/sbin/</span><br><span class=\"line\">## 创建软链接</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# useradd -M -s /sbin/nologin squid</span><br><span class=\"line\">## 创建管理进程的用户</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# chown -R squid.<span class=\"property\">squid</span> /usr/local/squid/<span class=\"keyword\">var</span>/</span><br><span class=\"line\">## 修改文件的属主和属组</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改Squid的配置文件\"><a href=\"#修改Squid的配置文件\" class=\"headerlink\" title=\"修改Squid的配置文件\"></a>修改Squid的配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# vim /etc/squid.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\">cache_effective_user squid #添加指定程序用户</span><br><span class=\"line\">cache_effective_group squid #添加指定账号基本组</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动Squid\"><a href=\"#启动Squid\" class=\"headerlink\" title=\"启动Squid\"></a>启动Squid</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:<span class=\"regexp\">/usr/</span>local/squid/sbin/</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# squid -k parse</span><br><span class=\"line\">## 检查配置文件语法</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# squid           </span><br><span class=\"line\">## 启动<span class=\"title class_\">Squid</span>服务</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# netstat -ntap | grep squid    </span><br><span class=\"line\">tcp6       <span class=\"number\">0</span>      <span class=\"number\">0</span> :::<span class=\"number\">3128</span>                 :::*                    <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">28971</span>/(squid-<span class=\"number\">1</span>)       </span><br><span class=\"line\">## 服务启动，<span class=\"title class_\">Squid</span>服务处于正常监听状态</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h3><p>nginx 的安装及修改之前有写过就不在这里详细说明了，记得打开日志</p>\n<h3 id=\"配置客户机\"><a href=\"#配置客户机\" class=\"headerlink\" title=\"配置客户机\"></a>配置客户机</h3><p>客户机的代理配置，在IE浏览器中，选择”工具”-&gt;”Internet选项”,然后弹出的”Internet选项”对话框，在”连接”选项中的”局域网(LAN)设置”选项组中单击”局域网设置”按钮，弹出”局域网(LAN)设置”对话框，设置如下:<br><img src=\"https://pic.downk.cc/item/5fe9a3053ffa7d37b3ddc84d.png\"><br>访问 nginx 服务<br><img src=\"https://pic.downk.cc/item/5fe9a30e3ffa7d37b3ddd7ca.png\"></p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx logs]# tailf access.<span class=\"property\">log</span> </span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> - - [<span class=\"number\">28</span>/<span class=\"title class_\">Dec</span>/<span class=\"number\">2020</span>:<span class=\"number\">17</span>:<span class=\"number\">08</span>:<span class=\"number\">24</span> +<span class=\"number\">0800</span>] <span class=\"string\">&quot;GET / HTTP/1.1&quot;</span> <span class=\"number\">304</span> <span class=\"number\">0</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span></span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> - - [<span class=\"number\">28</span>/<span class=\"title class_\">Dec</span>/<span class=\"number\">2020</span>:<span class=\"number\">17</span>:<span class=\"number\">08</span>:<span class=\"number\">24</span> +<span class=\"number\">0800</span>] <span class=\"string\">&quot;GET / HTTP/1.1&quot;</span> <span class=\"number\">304</span> <span class=\"number\">0</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span></span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> - - [<span class=\"number\">28</span>/<span class=\"title class_\">Dec</span>/<span class=\"number\">2020</span>:<span class=\"number\">17</span>:<span class=\"number\">08</span>:<span class=\"number\">24</span> +<span class=\"number\">0800</span>] <span class=\"string\">&quot;GET / HTTP/1.1&quot;</span> <span class=\"number\">304</span> <span class=\"number\">0</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span></span><br></pre></td></tr></table></figure>\n<p>可以看到的确是代理服务器访问的，说明传统代理部署成功</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Squid简介\"><a href=\"#Squid简介\" class=\"headerlink\" title=\"Squid简介\"></a>Squid简介</h2><p>参考<a href=\"http://www.squid-cache.org/\">Squid官网</a></p>\n<h3 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h3><p>当客户机通过代理来请求Web页面时，指定的代理服务器会先检查自己的缓存，如果缓存中已经有客户机需要的页面，则直接将缓存中的页面内容反馈给客户机<br>如果缓存中没有客户机要访问的页面，则由代理服务器向Internet发送请求，当获得返回的Web页面后，将网页数据保存到缓存中并发送给客户机，同时记录缓存</p>\n<h3 id=\"代理基本类型\"><a href=\"#代理基本类型\" class=\"headerlink\" title=\"代理基本类型\"></a>代理基本类型</h3><ul>\n<li>传统代理(普通代理)<br>内网&gt;普通代理服务器&gt;外网<br>内网客户机需配置浏览器的LAN代理IP及端口<br>无需设置防火墙规则及路由转发</li>\n<li>透明代理<br>内网&gt;透明代理服务器&gt;外网<br>内网客户机无需添加配置<br>需要配置防火墙规则(REDIRECT 重定向)，开启路由转发功能</li>\n<li>反向代理<br>内网服务器&lt;反向代理服务器&lt;外网客户机<br>外网客户机无需添加配置<br>无需添加防火墙规则<h3 id=\"使用Squid代理服务器访问外网的优点\"><a href=\"#使用Squid代理服务器访问外网的优点\" class=\"headerlink\" title=\"使用Squid代理服务器访问外网的优点\"></a>使用Squid代理服务器访问外网的优点</h3></li>\n<li>减少重复请求，节约带宽</li>\n<li>具有ACL (Access Control List)访问控制列表功能，对客户机上网行为灵活控制</li>\n<li>对内网客户机具有保护作用<h2 id=\"传统代理\"><a href=\"#传统代理\" class=\"headerlink\" title=\"传统代理\"></a>传统代理</h2><h3 id=\"配置Squid\"><a href=\"#配置Squid\" class=\"headerlink\" title=\"配置Squid\"></a>配置Squid</h3></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">服务器名</th>\n<th align=\"center\">操作系统</th>\n<th align=\"center\">IP</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">squid</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.36</td>\n</tr>\n<tr>\n<td align=\"center\">nginx</td>\n<td align=\"center\">CentOS 7</td>\n<td align=\"center\">192.168.0.48</td>\n</tr>\n<tr>\n<td align=\"center\">客户机</td>\n<td align=\"center\">windows</td>\n<td align=\"center\">192.168.0.52</td>\n</tr>\n</tbody></table>\n<h4 id=\"源码安装Squid\"><a href=\"#源码安装Squid\" class=\"headerlink\" title=\"源码安装Squid\"></a>源码安装Squid</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@squid ~]# yum install -y perl autoconf automake make libxml2-devel libcap-devel libtool-ltdl-devel gcc gcc-c++</span><br><span class=\"line\">[root@squid ~]# ls</span><br><span class=\"line\">squid-<span class=\"number\">4.13</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span></span><br><span class=\"line\">[root@squid ~]# tar -zxvf squid-<span class=\"number\">4.13</span>.<span class=\"property\">tar</span>.<span class=\"property\">gz</span> -C /usr/local/</span><br><span class=\"line\">[root@squid ~]# cd /usr/local/squid-<span class=\"number\">4.13</span>/</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# ./configure --prefix=<span class=\"regexp\">/usr/</span>local/squid</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# make &amp;&amp; make install</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# ln -s /usr/local/squid/sbin/ <span class=\"regexp\">/usr/</span>local/sbin/</span><br><span class=\"line\">## 创建软链接</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# useradd -M -s /sbin/nologin squid</span><br><span class=\"line\">## 创建管理进程的用户</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# chown -R squid.<span class=\"property\">squid</span> /usr/local/squid/<span class=\"keyword\">var</span>/</span><br><span class=\"line\">## 修改文件的属主和属组</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改Squid的配置文件\"><a href=\"#修改Squid的配置文件\" class=\"headerlink\" title=\"修改Squid的配置文件\"></a>修改Squid的配置文件</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# vim /etc/squid.<span class=\"property\">conf</span></span><br><span class=\"line\">···</span><br><span class=\"line\">cache_effective_user squid #添加指定程序用户</span><br><span class=\"line\">cache_effective_group squid #添加指定账号基本组</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动Squid\"><a href=\"#启动Squid\" class=\"headerlink\" title=\"启动Squid\"></a>启动Squid</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# <span class=\"keyword\">export</span> <span class=\"variable constant_\">PATH</span>=<span class=\"attr\">$PATH</span>:<span class=\"regexp\">/usr/</span>local/squid/sbin/</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# squid -k parse</span><br><span class=\"line\">## 检查配置文件语法</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# squid           </span><br><span class=\"line\">## 启动<span class=\"title class_\">Squid</span>服务</span><br><span class=\"line\">[root@squid squid-<span class=\"number\">4.13</span>]# netstat -ntap | grep squid    </span><br><span class=\"line\">tcp6       <span class=\"number\">0</span>      <span class=\"number\">0</span> :::<span class=\"number\">3128</span>                 :::*                    <span class=\"variable constant_\">LISTEN</span>      <span class=\"number\">28971</span>/(squid-<span class=\"number\">1</span>)       </span><br><span class=\"line\">## 服务启动，<span class=\"title class_\">Squid</span>服务处于正常监听状态</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置Nginx\"><a href=\"#配置Nginx\" class=\"headerlink\" title=\"配置Nginx\"></a>配置Nginx</h3><p>nginx 的安装及修改之前有写过就不在这里详细说明了，记得打开日志</p>\n<h3 id=\"配置客户机\"><a href=\"#配置客户机\" class=\"headerlink\" title=\"配置客户机\"></a>配置客户机</h3><p>客户机的代理配置，在IE浏览器中，选择”工具”-&gt;”Internet选项”,然后弹出的”Internet选项”对话框，在”连接”选项中的”局域网(LAN)设置”选项组中单击”局域网设置”按钮，弹出”局域网(LAN)设置”对话框，设置如下:<br><img src=\"https://pic.downk.cc/item/5fe9a3053ffa7d37b3ddc84d.png\"><br>访问 nginx 服务<br><img src=\"https://pic.downk.cc/item/5fe9a30e3ffa7d37b3ddd7ca.png\"></p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@nginx logs]# tailf access.<span class=\"property\">log</span> </span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> - - [<span class=\"number\">28</span>/<span class=\"title class_\">Dec</span>/<span class=\"number\">2020</span>:<span class=\"number\">17</span>:<span class=\"number\">08</span>:<span class=\"number\">24</span> +<span class=\"number\">0800</span>] <span class=\"string\">&quot;GET / HTTP/1.1&quot;</span> <span class=\"number\">304</span> <span class=\"number\">0</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span></span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> - - [<span class=\"number\">28</span>/<span class=\"title class_\">Dec</span>/<span class=\"number\">2020</span>:<span class=\"number\">17</span>:<span class=\"number\">08</span>:<span class=\"number\">24</span> +<span class=\"number\">0800</span>] <span class=\"string\">&quot;GET / HTTP/1.1&quot;</span> <span class=\"number\">304</span> <span class=\"number\">0</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span></span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> - - [<span class=\"number\">28</span>/<span class=\"title class_\">Dec</span>/<span class=\"number\">2020</span>:<span class=\"number\">17</span>:<span class=\"number\">08</span>:<span class=\"number\">24</span> +<span class=\"number\">0800</span>] <span class=\"string\">&quot;GET / HTTP/1.1&quot;</span> <span class=\"number\">304</span> <span class=\"number\">0</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span></span><br></pre></td></tr></table></figure>\n<p>可以看到的确是代理服务器访问的，说明传统代理部署成功</p>\n"},{"title":"Zabbix5.0安装","date":"2020-12-04T16:00:00.000Z","updated":"2022-11-20T14:53:46.563Z","description":null,"cover":"https://pic.imgdb.cn/item/60a8c2096ae4f77d3547f25c.jpg","_content":"详细安装说明详见[zabbix官网](https://www.zabbix.com/cn)\n官网上有yum安装的方式，如果是学习使用可以使用yum方式，方便简单。建议在生产环境使用源码方式安装。以下，演示为yum方式安装zabbix服务端与客户端。\n### 准备LAMP\n```javascript\n[root@jjh ~]# yum -y install httpd mariadb-server mariadb php\n[root@jjh ~]# systemctl start httpd.service mariadb.service\n[root@jjh ~]# systemctl enable httpd.service mariadb.service\n```\n### 安装数据库\n```javascript\n[root@jjh ~]# rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm\n[root@jjh ~]# yum clean all\n```\n### 安装Zabbix服务器和代理\n```javascript\n[root@jjh ~]# yum install zabbix-server-mysql zabbix-agent -y\n```\n### 安装Zabbix前端\n```javascript\n[root@jjh ~]# yum install centos-release-scl -y\n```\n### 修改配置文件\n```javascript\n[root@jjh ~]# vim /etc/yum.repos.d/zabbix.repo \n[zabbix-frontend]\n...\nenabled=1\n...\n```\n### 安装Zabbix前端软件包\n```javascript\n[root@jjh ~]# yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y\n```\n### 创建数据库并导入初始数据\n```javascript\n[root@jjh ~]# mysql_secure_installation #初始化数据库信息\n[root@jjh ~]# mysql -uroot -p\nMariaDB [(none)]> create database zabbix character set utf8 collate utf8_bin;\nMariaDB [(none)]> grant all privileges on zabbix.* to zabbix@localhost identified by 'zabbix';\nMariaDB [(none)]> quit;\n```\n### 导入初始架构和数据\n```javascript\n[root@jjh ~]# zcat /usr/share/doc/zabbix-server-mysql-*/create.sql.gz |mysql -uzabbix -pzabbix zabbix\n```\n### 查看和编辑配置文件\n```javascript\n[root@jjh ~]# vim /etc/zabbix/zabbix_server.conf \nDBName=zabbix\nDBUser=zabbix\nDBPassword=zabbix\t#添加此行\nAlertScriptsPath=/usr/lib/zabbix/alertscripts\t#自定义动作脚本存放路径\n[root@jjh zabbix]# vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf\nphp_value[date.timezone] = Asia/Shanghai\n```\n### 启动服务\n```javascript\n[root@jjh zabbix]# systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm\n[root@jjh zabbix]# systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm \n```\n### web界面安装\n浏览器访问：http://localhost/zabbix\n数据库密码：zabbix\n![](https://pic.downk.cc/item/5fcb9026394ac52378a1cfc8.png)\n用户名：Admin\n密码：zabbix\n![](https://pic.downk.cc/item/5fcc725b394ac52378375174.png)\n如果主机可用性为未知，可以查看下日志\n可能是数据库密码错误导致没连上，在配置文件中修改下密码就OK了\n","source":"_posts/Zabbix5.0安装.md","raw":"---\ntitle: Zabbix5.0安装\ndate: 2020-12-5\nupdated:\ndescription: \ncover: https://pic.imgdb.cn/item/60a8c2096ae4f77d3547f25c.jpg\ntag:\n  - Zabbix\ncategories:\n  - 监控\n---\n详细安装说明详见[zabbix官网](https://www.zabbix.com/cn)\n官网上有yum安装的方式，如果是学习使用可以使用yum方式，方便简单。建议在生产环境使用源码方式安装。以下，演示为yum方式安装zabbix服务端与客户端。\n### 准备LAMP\n```javascript\n[root@jjh ~]# yum -y install httpd mariadb-server mariadb php\n[root@jjh ~]# systemctl start httpd.service mariadb.service\n[root@jjh ~]# systemctl enable httpd.service mariadb.service\n```\n### 安装数据库\n```javascript\n[root@jjh ~]# rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm\n[root@jjh ~]# yum clean all\n```\n### 安装Zabbix服务器和代理\n```javascript\n[root@jjh ~]# yum install zabbix-server-mysql zabbix-agent -y\n```\n### 安装Zabbix前端\n```javascript\n[root@jjh ~]# yum install centos-release-scl -y\n```\n### 修改配置文件\n```javascript\n[root@jjh ~]# vim /etc/yum.repos.d/zabbix.repo \n[zabbix-frontend]\n...\nenabled=1\n...\n```\n### 安装Zabbix前端软件包\n```javascript\n[root@jjh ~]# yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y\n```\n### 创建数据库并导入初始数据\n```javascript\n[root@jjh ~]# mysql_secure_installation #初始化数据库信息\n[root@jjh ~]# mysql -uroot -p\nMariaDB [(none)]> create database zabbix character set utf8 collate utf8_bin;\nMariaDB [(none)]> grant all privileges on zabbix.* to zabbix@localhost identified by 'zabbix';\nMariaDB [(none)]> quit;\n```\n### 导入初始架构和数据\n```javascript\n[root@jjh ~]# zcat /usr/share/doc/zabbix-server-mysql-*/create.sql.gz |mysql -uzabbix -pzabbix zabbix\n```\n### 查看和编辑配置文件\n```javascript\n[root@jjh ~]# vim /etc/zabbix/zabbix_server.conf \nDBName=zabbix\nDBUser=zabbix\nDBPassword=zabbix\t#添加此行\nAlertScriptsPath=/usr/lib/zabbix/alertscripts\t#自定义动作脚本存放路径\n[root@jjh zabbix]# vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf\nphp_value[date.timezone] = Asia/Shanghai\n```\n### 启动服务\n```javascript\n[root@jjh zabbix]# systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm\n[root@jjh zabbix]# systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm \n```\n### web界面安装\n浏览器访问：http://localhost/zabbix\n数据库密码：zabbix\n![](https://pic.downk.cc/item/5fcb9026394ac52378a1cfc8.png)\n用户名：Admin\n密码：zabbix\n![](https://pic.downk.cc/item/5fcc725b394ac52378375174.png)\n如果主机可用性为未知，可以查看下日志\n可能是数据库密码错误导致没连上，在配置文件中修改下密码就OK了\n","slug":"Zabbix5.0安装","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avfd0013tobv2s5uhclm","content":"<p>详细安装说明详见<a href=\"https://www.zabbix.com/cn\">zabbix官网</a><br>官网上有yum安装的方式，如果是学习使用可以使用yum方式，方便简单。建议在生产环境使用源码方式安装。以下，演示为yum方式安装zabbix服务端与客户端。</p>\n<h3 id=\"准备LAMP\"><a href=\"#准备LAMP\" class=\"headerlink\" title=\"准备LAMP\"></a>准备LAMP</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum -y install httpd mariadb-server mariadb php</span><br><span class=\"line\">[root@jjh ~]# systemctl start httpd.<span class=\"property\">service</span> mariadb.<span class=\"property\">service</span></span><br><span class=\"line\">[root@jjh ~]# systemctl enable httpd.<span class=\"property\">service</span> mariadb.<span class=\"property\">service</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装数据库\"><a href=\"#安装数据库\" class=\"headerlink\" title=\"安装数据库\"></a>安装数据库</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# rpm -<span class=\"title class_\">Uvh</span> <span class=\"attr\">https</span>:<span class=\"comment\">//repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class=\"line\">[root@jjh ~]# yum clean all</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Zabbix服务器和代理\"><a href=\"#安装Zabbix服务器和代理\" class=\"headerlink\" title=\"安装Zabbix服务器和代理\"></a>安装Zabbix服务器和代理</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install zabbix-server-mysql zabbix-agent -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Zabbix前端\"><a href=\"#安装Zabbix前端\" class=\"headerlink\" title=\"安装Zabbix前端\"></a>安装Zabbix前端</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install centos-release-scl -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/yum.<span class=\"property\">repos</span>.<span class=\"property\">d</span>/zabbix.<span class=\"property\">repo</span> </span><br><span class=\"line\">[zabbix-frontend]</span><br><span class=\"line\">...</span><br><span class=\"line\">enabled=<span class=\"number\">1</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Zabbix前端软件包\"><a href=\"#安装Zabbix前端软件包\" class=\"headerlink\" title=\"安装Zabbix前端软件包\"></a>安装Zabbix前端软件包</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数据库并导入初始数据\"><a href=\"#创建数据库并导入初始数据\" class=\"headerlink\" title=\"创建数据库并导入初始数据\"></a>创建数据库并导入初始数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mysql_secure_installation #初始化数据库信息</span><br><span class=\"line\">[root@jjh ~]# mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by <span class=\"string\">&#x27;zabbix&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; quit;</span><br></pre></td></tr></table></figure>\n<h3 id=\"导入初始架构和数据\"><a href=\"#导入初始架构和数据\" class=\"headerlink\" title=\"导入初始架构和数据\"></a>导入初始架构和数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# zcat /usr/share/doc/zabbix-server-mysql-*/create.<span class=\"property\">sql</span>.<span class=\"property\">gz</span> |mysql -uzabbix -pzabbix zabbix</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看和编辑配置文件\"><a href=\"#查看和编辑配置文件\" class=\"headerlink\" title=\"查看和编辑配置文件\"></a>查看和编辑配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/zabbix/zabbix_server.<span class=\"property\">conf</span> </span><br><span class=\"line\"><span class=\"title class_\">DBName</span>=zabbix</span><br><span class=\"line\"><span class=\"title class_\">DBUser</span>=zabbix</span><br><span class=\"line\"><span class=\"title class_\">DBPassword</span>=zabbix\t#添加此行</span><br><span class=\"line\"><span class=\"title class_\">AlertScriptsPath</span>=<span class=\"regexp\">/usr/</span>lib/zabbix/alertscripts\t#自定义动作脚本存放路径</span><br><span class=\"line\">[root@jjh zabbix]# vim /etc/opt/rh/rh-php72/php-fpm.<span class=\"property\">d</span>/zabbix.<span class=\"property\">conf</span></span><br><span class=\"line\">php_value[date.<span class=\"property\">timezone</span>] = <span class=\"title class_\">Asia</span>/<span class=\"title class_\">Shanghai</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh zabbix]# systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br><span class=\"line\">[root@jjh zabbix]# systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm </span><br></pre></td></tr></table></figure>\n<h3 id=\"web界面安装\"><a href=\"#web界面安装\" class=\"headerlink\" title=\"web界面安装\"></a>web界面安装</h3><p>浏览器访问：<a href=\"http://localhost/zabbix\">http://localhost/zabbix</a><br>数据库密码：zabbix<br><img src=\"https://pic.downk.cc/item/5fcb9026394ac52378a1cfc8.png\"><br>用户名：Admin<br>密码：zabbix<br><img src=\"https://pic.downk.cc/item/5fcc725b394ac52378375174.png\"><br>如果主机可用性为未知，可以查看下日志<br>可能是数据库密码错误导致没连上，在配置文件中修改下密码就OK了</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<p>详细安装说明详见<a href=\"https://www.zabbix.com/cn\">zabbix官网</a><br>官网上有yum安装的方式，如果是学习使用可以使用yum方式，方便简单。建议在生产环境使用源码方式安装。以下，演示为yum方式安装zabbix服务端与客户端。</p>\n<h3 id=\"准备LAMP\"><a href=\"#准备LAMP\" class=\"headerlink\" title=\"准备LAMP\"></a>准备LAMP</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum -y install httpd mariadb-server mariadb php</span><br><span class=\"line\">[root@jjh ~]# systemctl start httpd.<span class=\"property\">service</span> mariadb.<span class=\"property\">service</span></span><br><span class=\"line\">[root@jjh ~]# systemctl enable httpd.<span class=\"property\">service</span> mariadb.<span class=\"property\">service</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装数据库\"><a href=\"#安装数据库\" class=\"headerlink\" title=\"安装数据库\"></a>安装数据库</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# rpm -<span class=\"title class_\">Uvh</span> <span class=\"attr\">https</span>:<span class=\"comment\">//repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class=\"line\">[root@jjh ~]# yum clean all</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Zabbix服务器和代理\"><a href=\"#安装Zabbix服务器和代理\" class=\"headerlink\" title=\"安装Zabbix服务器和代理\"></a>安装Zabbix服务器和代理</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install zabbix-server-mysql zabbix-agent -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Zabbix前端\"><a href=\"#安装Zabbix前端\" class=\"headerlink\" title=\"安装Zabbix前端\"></a>安装Zabbix前端</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install centos-release-scl -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/yum.<span class=\"property\">repos</span>.<span class=\"property\">d</span>/zabbix.<span class=\"property\">repo</span> </span><br><span class=\"line\">[zabbix-frontend]</span><br><span class=\"line\">...</span><br><span class=\"line\">enabled=<span class=\"number\">1</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装Zabbix前端软件包\"><a href=\"#安装Zabbix前端软件包\" class=\"headerlink\" title=\"安装Zabbix前端软件包\"></a>安装Zabbix前端软件包</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数据库并导入初始数据\"><a href=\"#创建数据库并导入初始数据\" class=\"headerlink\" title=\"创建数据库并导入初始数据\"></a>创建数据库并导入初始数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mysql_secure_installation #初始化数据库信息</span><br><span class=\"line\">[root@jjh ~]# mysql -uroot -p</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by <span class=\"string\">&#x27;zabbix&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">MariaDB</span> [(none)]&gt; quit;</span><br></pre></td></tr></table></figure>\n<h3 id=\"导入初始架构和数据\"><a href=\"#导入初始架构和数据\" class=\"headerlink\" title=\"导入初始架构和数据\"></a>导入初始架构和数据</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# zcat /usr/share/doc/zabbix-server-mysql-*/create.<span class=\"property\">sql</span>.<span class=\"property\">gz</span> |mysql -uzabbix -pzabbix zabbix</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看和编辑配置文件\"><a href=\"#查看和编辑配置文件\" class=\"headerlink\" title=\"查看和编辑配置文件\"></a>查看和编辑配置文件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/zabbix/zabbix_server.<span class=\"property\">conf</span> </span><br><span class=\"line\"><span class=\"title class_\">DBName</span>=zabbix</span><br><span class=\"line\"><span class=\"title class_\">DBUser</span>=zabbix</span><br><span class=\"line\"><span class=\"title class_\">DBPassword</span>=zabbix\t#添加此行</span><br><span class=\"line\"><span class=\"title class_\">AlertScriptsPath</span>=<span class=\"regexp\">/usr/</span>lib/zabbix/alertscripts\t#自定义动作脚本存放路径</span><br><span class=\"line\">[root@jjh zabbix]# vim /etc/opt/rh/rh-php72/php-fpm.<span class=\"property\">d</span>/zabbix.<span class=\"property\">conf</span></span><br><span class=\"line\">php_value[date.<span class=\"property\">timezone</span>] = <span class=\"title class_\">Asia</span>/<span class=\"title class_\">Shanghai</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh zabbix]# systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br><span class=\"line\">[root@jjh zabbix]# systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm </span><br></pre></td></tr></table></figure>\n<h3 id=\"web界面安装\"><a href=\"#web界面安装\" class=\"headerlink\" title=\"web界面安装\"></a>web界面安装</h3><p>浏览器访问：<a href=\"http://localhost/zabbix\">http://localhost/zabbix</a><br>数据库密码：zabbix<br><img src=\"https://pic.downk.cc/item/5fcb9026394ac52378a1cfc8.png\"><br>用户名：Admin<br>密码：zabbix<br><img src=\"https://pic.downk.cc/item/5fcc725b394ac52378375174.png\"><br>如果主机可用性为未知，可以查看下日志<br>可能是数据库密码错误导致没连上，在配置文件中修改下密码就OK了</p>\n"},{"title":"搭建自己专属的VPN","date":"2020-11-19T16:00:00.000Z","updated":"2022-12-03T07:13:50.043Z","description":"谁能拒绝一个酷炫的vpn呢！","cover":"https://pic.imgdb.cn/item/6384c18116f2c2beb10a18a7.jpg","_content":"首先你需要准备一台海外服务器\n## 安装Shadowsocks服务端\n```\n[root@jjh ~]# yum install python-setuptools && easy_install pip\n[root@jjh ~]# pip install shadowsocks\n```\n参考[官方Shadowsocks使用说明](https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n### 配置\n修改配置文件 /etc/shadowsocks.json，如果没有可以新建\n内容如下：\n```\n{\n        \"server\":\"0.0.0.0\",\n        \"server_port\":\" 你的端口 \",\n        \"password\":\" 你的密码 \",\n        \"timeout\":300,\n        \"method\":\"aes-256-cfb\",\n        \"fast_open\":false,\n        \"workers\":4\n}\n```\n或者设置多个账号\n```\n{\n        \"server\":\"0.0.0.0\",\n        \"port_password\":{\n        \"端口一\":\"密码\",\n        \"端口二\":\"密码\",\n        }，\n        \"timeout\":300,\n        \"method\":\"aes-256-cfb\",\n        \"fast_open\":false,\n}\n```\n配置说明\n\n |字段|说明|\n |----|----|\n |server|ss服务监听地址|\n |server_port|ss服务监听端口|\n |local_address|本地监听地址|\n |local_port|本地服务监听地址|\n |password|密码|\n |timeout|超时时间，单位 秒|\n |method|加密方法，默认是aes-256-cfb|\n |fast_open|使用TCP_FASTOPEN，true/false|\n |workers|workers数，只支持Unix/Linux系统|\n\n参考[Configuration via Config File](https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File)\n### 启动\n前台启动\n```\nssserver -c /etc/shadowsocks.json\n```\n后台启动与停止\n```\nssserver -c /etc/shadowsacks.json -d start\nssserver -c /etc/shadowsacks.json -d stop\n```\n设置开机自启\n修改/etc/rc.local，加入如下内容\n```\nssserver -c /etc/shadowsacks.json -d start\n```\n日志\nshadowsocks的日志保存在 /var/log/shadowsocks.log\n\n## 安装Shadowsocks客户端\n```\n[root@jjh ~]# yum install python-setuptools && easy_install pip\n[root@jjh ~]# pip install git+https://github.com/shadowsocks/shadowsocks.git@master\n```\n### 配置\n创建一个/etc/shadowsocks.json文件，格式如下\n```\n{\n    \"server\":\"服务器 IP 或是域名\",\n    \"server_port\":端口号,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"加密方式 (chacha20-ietf-poly1305 / aes-256-cfb)\",\n    \"fast_open\": false\n}\n```\n### 启动\n```\nsslocal -c /etc/shadowsocks.json -d start\n```\n## 验证\n```\n[root@jjh ~]# curl --socks5 127.0.0.1:1080 http://httpbin.org/ip\n{\n  \"origin\": \"xxx.xxx.xxx.xxx\"\n}\n```\n如果返回你的ss服务器ip,则测试成功。\n\n此文章仅用于技术交流，请勿作非法之事！\n","source":"_posts/搭建自己专属的VPN.md","raw":"---\ntitle: 搭建自己专属的VPN\ndate: 2020-11-20\nupdated:\ndescription:  谁能拒绝一个酷炫的vpn呢！\ncover: https://pic.imgdb.cn/item/6384c18116f2c2beb10a18a7.jpg\ntag:\n  - Shadowsocks\ncategories:\n  - VPN\n---\n首先你需要准备一台海外服务器\n## 安装Shadowsocks服务端\n```\n[root@jjh ~]# yum install python-setuptools && easy_install pip\n[root@jjh ~]# pip install shadowsocks\n```\n参考[官方Shadowsocks使用说明](https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n### 配置\n修改配置文件 /etc/shadowsocks.json，如果没有可以新建\n内容如下：\n```\n{\n        \"server\":\"0.0.0.0\",\n        \"server_port\":\" 你的端口 \",\n        \"password\":\" 你的密码 \",\n        \"timeout\":300,\n        \"method\":\"aes-256-cfb\",\n        \"fast_open\":false,\n        \"workers\":4\n}\n```\n或者设置多个账号\n```\n{\n        \"server\":\"0.0.0.0\",\n        \"port_password\":{\n        \"端口一\":\"密码\",\n        \"端口二\":\"密码\",\n        }，\n        \"timeout\":300,\n        \"method\":\"aes-256-cfb\",\n        \"fast_open\":false,\n}\n```\n配置说明\n\n |字段|说明|\n |----|----|\n |server|ss服务监听地址|\n |server_port|ss服务监听端口|\n |local_address|本地监听地址|\n |local_port|本地服务监听地址|\n |password|密码|\n |timeout|超时时间，单位 秒|\n |method|加密方法，默认是aes-256-cfb|\n |fast_open|使用TCP_FASTOPEN，true/false|\n |workers|workers数，只支持Unix/Linux系统|\n\n参考[Configuration via Config File](https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File)\n### 启动\n前台启动\n```\nssserver -c /etc/shadowsocks.json\n```\n后台启动与停止\n```\nssserver -c /etc/shadowsacks.json -d start\nssserver -c /etc/shadowsacks.json -d stop\n```\n设置开机自启\n修改/etc/rc.local，加入如下内容\n```\nssserver -c /etc/shadowsacks.json -d start\n```\n日志\nshadowsocks的日志保存在 /var/log/shadowsocks.log\n\n## 安装Shadowsocks客户端\n```\n[root@jjh ~]# yum install python-setuptools && easy_install pip\n[root@jjh ~]# pip install git+https://github.com/shadowsocks/shadowsocks.git@master\n```\n### 配置\n创建一个/etc/shadowsocks.json文件，格式如下\n```\n{\n    \"server\":\"服务器 IP 或是域名\",\n    \"server_port\":端口号,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"密码\",\n    \"timeout\":300,\n    \"method\":\"加密方式 (chacha20-ietf-poly1305 / aes-256-cfb)\",\n    \"fast_open\": false\n}\n```\n### 启动\n```\nsslocal -c /etc/shadowsocks.json -d start\n```\n## 验证\n```\n[root@jjh ~]# curl --socks5 127.0.0.1:1080 http://httpbin.org/ip\n{\n  \"origin\": \"xxx.xxx.xxx.xxx\"\n}\n```\n如果返回你的ss服务器ip,则测试成功。\n\n此文章仅用于技术交流，请勿作非法之事！\n","slug":"搭建自己专属的VPN","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avfd0017tobv47hj8ixr","content":"<p>首先你需要准备一台海外服务器</p>\n<h2 id=\"安装Shadowsocks服务端\"><a href=\"#安装Shadowsocks服务端\" class=\"headerlink\" title=\"安装Shadowsocks服务端\"></a>安装Shadowsocks服务端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class=\"line\">[root@jjh ~]# pip install shadowsocks</span><br></pre></td></tr></table></figure>\n<p>参考<a href=\"https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\">官方Shadowsocks使用说明</a></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>修改配置文件 /etc/shadowsocks.json，如果没有可以新建<br>内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class=\"line\">        &quot;server_port&quot;:&quot; 你的端口 &quot;,</span><br><span class=\"line\">        &quot;password&quot;:&quot; 你的密码 &quot;,</span><br><span class=\"line\">        &quot;timeout&quot;:300,</span><br><span class=\"line\">        &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class=\"line\">        &quot;fast_open&quot;:false,</span><br><span class=\"line\">        &quot;workers&quot;:4</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者设置多个账号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class=\"line\">        &quot;port_password&quot;:&#123;</span><br><span class=\"line\">        &quot;端口一&quot;:&quot;密码&quot;,</span><br><span class=\"line\">        &quot;端口二&quot;:&quot;密码&quot;,</span><br><span class=\"line\">        &#125;，</span><br><span class=\"line\">        &quot;timeout&quot;:300,</span><br><span class=\"line\">        &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class=\"line\">        &quot;fast_open&quot;:false,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置说明</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>server</td>\n<td>ss服务监听地址</td>\n</tr>\n<tr>\n<td>server_port</td>\n<td>ss服务监听端口</td>\n</tr>\n<tr>\n<td>local_address</td>\n<td>本地监听地址</td>\n</tr>\n<tr>\n<td>local_port</td>\n<td>本地服务监听地址</td>\n</tr>\n<tr>\n<td>password</td>\n<td>密码</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>超时时间，单位 秒</td>\n</tr>\n<tr>\n<td>method</td>\n<td>加密方法，默认是aes-256-cfb</td>\n</tr>\n<tr>\n<td>fast_open</td>\n<td>使用TCP_FASTOPEN，true/false</td>\n</tr>\n<tr>\n<td>workers</td>\n<td>workers数，只支持Unix/Linux系统</td>\n</tr>\n</tbody></table>\n<p>参考<a href=\"https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File\">Configuration via Config File</a></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>前台启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>后台启动与停止</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsacks.json -d start</span><br><span class=\"line\">ssserver -c /etc/shadowsacks.json -d stop</span><br></pre></td></tr></table></figure>\n<p>设置开机自启<br>修改/etc/rc.local，加入如下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsacks.json -d start</span><br></pre></td></tr></table></figure>\n<p>日志<br>shadowsocks的日志保存在 /var/log/shadowsocks.log</p>\n<h2 id=\"安装Shadowsocks客户端\"><a href=\"#安装Shadowsocks客户端\" class=\"headerlink\" title=\"安装Shadowsocks客户端\"></a>安装Shadowsocks客户端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class=\"line\">[root@jjh ~]# pip install git+https://github.com/shadowsocks/shadowsocks.git@master</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>创建一个/etc/shadowsocks.json文件，格式如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;server&quot;:&quot;服务器 IP 或是域名&quot;,</span><br><span class=\"line\">    &quot;server_port&quot;:端口号,</span><br><span class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class=\"line\">    &quot;local_port&quot;:1080,</span><br><span class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</span><br><span class=\"line\">    &quot;timeout&quot;:300,</span><br><span class=\"line\">    &quot;method&quot;:&quot;加密方式 (chacha20-ietf-poly1305 / aes-256-cfb)&quot;,</span><br><span class=\"line\">    &quot;fast_open&quot;: false</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sslocal -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# curl --socks5 127.0.0.1:1080 http://httpbin.org/ip</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;origin&quot;: &quot;xxx.xxx.xxx.xxx&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果返回你的ss服务器ip,则测试成功。</p>\n<p>此文章仅用于技术交流，请勿作非法之事！</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<p>首先你需要准备一台海外服务器</p>\n<h2 id=\"安装Shadowsocks服务端\"><a href=\"#安装Shadowsocks服务端\" class=\"headerlink\" title=\"安装Shadowsocks服务端\"></a>安装Shadowsocks服务端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class=\"line\">[root@jjh ~]# pip install shadowsocks</span><br></pre></td></tr></table></figure>\n<p>参考<a href=\"https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\">官方Shadowsocks使用说明</a></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>修改配置文件 /etc/shadowsocks.json，如果没有可以新建<br>内容如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class=\"line\">        &quot;server_port&quot;:&quot; 你的端口 &quot;,</span><br><span class=\"line\">        &quot;password&quot;:&quot; 你的密码 &quot;,</span><br><span class=\"line\">        &quot;timeout&quot;:300,</span><br><span class=\"line\">        &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class=\"line\">        &quot;fast_open&quot;:false,</span><br><span class=\"line\">        &quot;workers&quot;:4</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>或者设置多个账号</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        &quot;server&quot;:&quot;0.0.0.0&quot;,</span><br><span class=\"line\">        &quot;port_password&quot;:&#123;</span><br><span class=\"line\">        &quot;端口一&quot;:&quot;密码&quot;,</span><br><span class=\"line\">        &quot;端口二&quot;:&quot;密码&quot;,</span><br><span class=\"line\">        &#125;，</span><br><span class=\"line\">        &quot;timeout&quot;:300,</span><br><span class=\"line\">        &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class=\"line\">        &quot;fast_open&quot;:false,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置说明</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>server</td>\n<td>ss服务监听地址</td>\n</tr>\n<tr>\n<td>server_port</td>\n<td>ss服务监听端口</td>\n</tr>\n<tr>\n<td>local_address</td>\n<td>本地监听地址</td>\n</tr>\n<tr>\n<td>local_port</td>\n<td>本地服务监听地址</td>\n</tr>\n<tr>\n<td>password</td>\n<td>密码</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>超时时间，单位 秒</td>\n</tr>\n<tr>\n<td>method</td>\n<td>加密方法，默认是aes-256-cfb</td>\n</tr>\n<tr>\n<td>fast_open</td>\n<td>使用TCP_FASTOPEN，true/false</td>\n</tr>\n<tr>\n<td>workers</td>\n<td>workers数，只支持Unix/Linux系统</td>\n</tr>\n</tbody></table>\n<p>参考<a href=\"https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File\">Configuration via Config File</a></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>前台启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>后台启动与停止</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsacks.json -d start</span><br><span class=\"line\">ssserver -c /etc/shadowsacks.json -d stop</span><br></pre></td></tr></table></figure>\n<p>设置开机自启<br>修改/etc/rc.local，加入如下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsacks.json -d start</span><br></pre></td></tr></table></figure>\n<p>日志<br>shadowsocks的日志保存在 /var/log/shadowsocks.log</p>\n<h2 id=\"安装Shadowsocks客户端\"><a href=\"#安装Shadowsocks客户端\" class=\"headerlink\" title=\"安装Shadowsocks客户端\"></a>安装Shadowsocks客户端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class=\"line\">[root@jjh ~]# pip install git+https://github.com/shadowsocks/shadowsocks.git@master</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>创建一个/etc/shadowsocks.json文件，格式如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;server&quot;:&quot;服务器 IP 或是域名&quot;,</span><br><span class=\"line\">    &quot;server_port&quot;:端口号,</span><br><span class=\"line\">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class=\"line\">    &quot;local_port&quot;:1080,</span><br><span class=\"line\">    &quot;password&quot;:&quot;密码&quot;,</span><br><span class=\"line\">    &quot;timeout&quot;:300,</span><br><span class=\"line\">    &quot;method&quot;:&quot;加密方式 (chacha20-ietf-poly1305 / aes-256-cfb)&quot;,</span><br><span class=\"line\">    &quot;fast_open&quot;: false</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sslocal -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure>\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# curl --socks5 127.0.0.1:1080 http://httpbin.org/ip</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;origin&quot;: &quot;xxx.xxx.xxx.xxx&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果返回你的ss服务器ip,则测试成功。</p>\n<p>此文章仅用于技术交流，请勿作非法之事！</p>\n"},{"title":"GitHub备份迁移Hexo","sticky":100,"date":"2020-11-11T16:00:00.000Z","updated":"2022-11-28T13:49:52.425Z","description":"备个份，说不定哪天就丢了。。。","cover":"https://pic.imgdb.cn/item/6384a20416f2c2beb1d0c290.jpg","_content":"## 创建备份文件\n先新建一个hexo文件夹，作为分支的工作目录，用于保存将要备份的文件和文件夹\n```javascript\n[root@jjh ~]# mkdir hexo\n```\n把GitHub上的Hexo仓库clone到hexo文件夹中\n```javascript\n[root@jjh ~]# git clone https://github.com/hehe-tui/hehe-tui.github.io hexo\n```\n删除**除了.git文件夹**的其它所有文件和文件夹，主要是为了得到版本管理的.git。下面命令不会删除隐藏文件和文件夹。\n```javascript\n[root@jjh ~]# cd hexo\n[root@jjh hexo]# rm -r *\n```\n创建.gitignore文件\n```javascript\n[root@jjh hexo]# touch .gitignore\n```\n最后把需要备份的文件和文件夹都复制到hexo文件夹下，hexo的目录结构应该如下\n```javascript\n[root@jjh hexo]# ll -a\ntotal 32\ndrwxr-xr-x  6 root root 4096 Oct 27 09:57 .\ndr-xr-x---. 8 root root 4096 Oct 27 10:00 ..\n-rw-r--r--  1 root root 3210 Oct 27 09:56 _config.yml\ndrwxr-xr-x  8 root root 4096 Oct 27 10:02 .git\n-rw-r--r--  1 root root    0 Oct 27 09:56 .gitignore\n-rw-r--r--  1 root root  842 Oct 27 09:57 package.json\ndrwxr-xr-x  2 root root 4096 Oct 27 09:56 scaffolds\ndrwxr-xr-x  6 root root 4096 Oct 27 09:57 source\ndrwxr-xr-x  4 root root 4096 Oct 27 09:56 themes\n```\n如果使用的主题是从GitHub克隆的，那么主题文件夹下有Git管理文件，需要将它们移除，否则上传github会为空目录。我使用的是hexo-butterfly，需要移除的文件如下\n```javascript\n[root@jjh butterfly]# rm -rf .git*\n```\n\n## 创建分支\n创建一个叫hexo的分支\n```javascript\n[root@jjh hexo]# git checkout -b hexo\n```\n保存所有文件到暂存区\n```javascript\n[root@jjh hexo]# git add --all\n```\n提交变更\n```javascript\n[root@jjh hexo]# git commit -m \"创建hexo分支\"\n```\n推送到GitHub，并用--set-upstream与origin创建关联，将hexo设置为默认分支\n```javascript\n[root@jjh hexo]# git push --set-upstream origin hexo\n```\n\n##  迁移博客\n预先安装环境\n将hexo分支克隆下来\n```javascript\n[root@jjh ~]# git clone -b hexo https://github.com/hehe-tui/hehe-tui.github.io\n```\n然后安装Hexo依赖\n```javascript\nnpm install\n```\n启动服务，访问 http://localhost:4000 判断备份是否成功。\n\n","source":"_posts/github备份迁移hexo.md","raw":"---\ntitle: GitHub备份迁移Hexo\nsticky: 100\ndate: 2020-11-12\nupdated:\ndescription:  备个份，说不定哪天就丢了。。。\ncover: https://pic.imgdb.cn/item/6384a20416f2c2beb1d0c290.jpg\ntag:\n  - Hexo\ncategories:\n  - GitHub\n---\n## 创建备份文件\n先新建一个hexo文件夹，作为分支的工作目录，用于保存将要备份的文件和文件夹\n```javascript\n[root@jjh ~]# mkdir hexo\n```\n把GitHub上的Hexo仓库clone到hexo文件夹中\n```javascript\n[root@jjh ~]# git clone https://github.com/hehe-tui/hehe-tui.github.io hexo\n```\n删除**除了.git文件夹**的其它所有文件和文件夹，主要是为了得到版本管理的.git。下面命令不会删除隐藏文件和文件夹。\n```javascript\n[root@jjh ~]# cd hexo\n[root@jjh hexo]# rm -r *\n```\n创建.gitignore文件\n```javascript\n[root@jjh hexo]# touch .gitignore\n```\n最后把需要备份的文件和文件夹都复制到hexo文件夹下，hexo的目录结构应该如下\n```javascript\n[root@jjh hexo]# ll -a\ntotal 32\ndrwxr-xr-x  6 root root 4096 Oct 27 09:57 .\ndr-xr-x---. 8 root root 4096 Oct 27 10:00 ..\n-rw-r--r--  1 root root 3210 Oct 27 09:56 _config.yml\ndrwxr-xr-x  8 root root 4096 Oct 27 10:02 .git\n-rw-r--r--  1 root root    0 Oct 27 09:56 .gitignore\n-rw-r--r--  1 root root  842 Oct 27 09:57 package.json\ndrwxr-xr-x  2 root root 4096 Oct 27 09:56 scaffolds\ndrwxr-xr-x  6 root root 4096 Oct 27 09:57 source\ndrwxr-xr-x  4 root root 4096 Oct 27 09:56 themes\n```\n如果使用的主题是从GitHub克隆的，那么主题文件夹下有Git管理文件，需要将它们移除，否则上传github会为空目录。我使用的是hexo-butterfly，需要移除的文件如下\n```javascript\n[root@jjh butterfly]# rm -rf .git*\n```\n\n## 创建分支\n创建一个叫hexo的分支\n```javascript\n[root@jjh hexo]# git checkout -b hexo\n```\n保存所有文件到暂存区\n```javascript\n[root@jjh hexo]# git add --all\n```\n提交变更\n```javascript\n[root@jjh hexo]# git commit -m \"创建hexo分支\"\n```\n推送到GitHub，并用--set-upstream与origin创建关联，将hexo设置为默认分支\n```javascript\n[root@jjh hexo]# git push --set-upstream origin hexo\n```\n\n##  迁移博客\n预先安装环境\n将hexo分支克隆下来\n```javascript\n[root@jjh ~]# git clone -b hexo https://github.com/hehe-tui/hehe-tui.github.io\n```\n然后安装Hexo依赖\n```javascript\nnpm install\n```\n启动服务，访问 http://localhost:4000 判断备份是否成功。\n\n","slug":"github备份迁移hexo","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avfe001atobv60mz1bmy","content":"<h2 id=\"创建备份文件\"><a href=\"#创建备份文件\" class=\"headerlink\" title=\"创建备份文件\"></a>创建备份文件</h2><p>先新建一个hexo文件夹，作为分支的工作目录，用于保存将要备份的文件和文件夹</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir hexo</span><br></pre></td></tr></table></figure>\n<p>把GitHub上的Hexo仓库clone到hexo文件夹中</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# git clone <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/hehe-tui/hehe-tui.github.io hexo</span></span><br></pre></td></tr></table></figure>\n<p>删除<strong>除了.git文件夹</strong>的其它所有文件和文件夹，主要是为了得到版本管理的.git。下面命令不会删除隐藏文件和文件夹。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cd hexo</span><br><span class=\"line\">[root@jjh hexo]# rm -r *</span><br></pre></td></tr></table></figure>\n<p>创建.gitignore文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# touch .<span class=\"property\">gitignore</span></span><br></pre></td></tr></table></figure>\n<p>最后把需要备份的文件和文件夹都复制到hexo文件夹下，hexo的目录结构应该如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# ll -a</span><br><span class=\"line\">total <span class=\"number\">32</span></span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">6</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">57</span> .</span><br><span class=\"line\">dr-xr-x---. <span class=\"number\">8</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">10</span>:<span class=\"number\">00</span> ..</span><br><span class=\"line\">-rw-r--r--  <span class=\"number\">1</span> root root <span class=\"number\">3210</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> _config.<span class=\"property\">yml</span></span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">8</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">10</span>:<span class=\"number\">02</span> .<span class=\"property\">git</span></span><br><span class=\"line\">-rw-r--r--  <span class=\"number\">1</span> root root    <span class=\"number\">0</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> .<span class=\"property\">gitignore</span></span><br><span class=\"line\">-rw-r--r--  <span class=\"number\">1</span> root root  <span class=\"number\">842</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">57</span> package.<span class=\"property\">json</span></span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">2</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> scaffolds</span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">6</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">57</span> source</span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">4</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> themes</span><br></pre></td></tr></table></figure>\n<p>如果使用的主题是从GitHub克隆的，那么主题文件夹下有Git管理文件，需要将它们移除，否则上传github会为空目录。我使用的是hexo-butterfly，需要移除的文件如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh butterfly]# rm -rf .<span class=\"property\">git</span>*</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><p>创建一个叫hexo的分支</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git checkout -b hexo</span><br></pre></td></tr></table></figure>\n<p>保存所有文件到暂存区</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git add --all</span><br></pre></td></tr></table></figure>\n<p>提交变更</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git commit -m <span class=\"string\">&quot;创建hexo分支&quot;</span></span><br></pre></td></tr></table></figure>\n<p>推送到GitHub，并用–set-upstream与origin创建关联，将hexo设置为默认分支</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"迁移博客\"><a href=\"#迁移博客\" class=\"headerlink\" title=\"迁移博客\"></a>迁移博客</h2><p>预先安装环境<br>将hexo分支克隆下来</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# git clone -b hexo <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/hehe-tui/hehe-tui.github.io</span></span><br></pre></td></tr></table></figure>\n<p>然后安装Hexo依赖</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>启动服务，访问 <a href=\"http://localhost:4000/\">http://localhost:4000</a> 判断备份是否成功。</p>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"创建备份文件\"><a href=\"#创建备份文件\" class=\"headerlink\" title=\"创建备份文件\"></a>创建备份文件</h2><p>先新建一个hexo文件夹，作为分支的工作目录，用于保存将要备份的文件和文件夹</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# mkdir hexo</span><br></pre></td></tr></table></figure>\n<p>把GitHub上的Hexo仓库clone到hexo文件夹中</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# git clone <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/hehe-tui/hehe-tui.github.io hexo</span></span><br></pre></td></tr></table></figure>\n<p>删除<strong>除了.git文件夹</strong>的其它所有文件和文件夹，主要是为了得到版本管理的.git。下面命令不会删除隐藏文件和文件夹。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cd hexo</span><br><span class=\"line\">[root@jjh hexo]# rm -r *</span><br></pre></td></tr></table></figure>\n<p>创建.gitignore文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# touch .<span class=\"property\">gitignore</span></span><br></pre></td></tr></table></figure>\n<p>最后把需要备份的文件和文件夹都复制到hexo文件夹下，hexo的目录结构应该如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# ll -a</span><br><span class=\"line\">total <span class=\"number\">32</span></span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">6</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">57</span> .</span><br><span class=\"line\">dr-xr-x---. <span class=\"number\">8</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">10</span>:<span class=\"number\">00</span> ..</span><br><span class=\"line\">-rw-r--r--  <span class=\"number\">1</span> root root <span class=\"number\">3210</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> _config.<span class=\"property\">yml</span></span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">8</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">10</span>:<span class=\"number\">02</span> .<span class=\"property\">git</span></span><br><span class=\"line\">-rw-r--r--  <span class=\"number\">1</span> root root    <span class=\"number\">0</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> .<span class=\"property\">gitignore</span></span><br><span class=\"line\">-rw-r--r--  <span class=\"number\">1</span> root root  <span class=\"number\">842</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">57</span> package.<span class=\"property\">json</span></span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">2</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> scaffolds</span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">6</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">57</span> source</span><br><span class=\"line\">drwxr-xr-x  <span class=\"number\">4</span> root root <span class=\"number\">4096</span> <span class=\"title class_\">Oct</span> <span class=\"number\">27</span> <span class=\"number\">09</span>:<span class=\"number\">56</span> themes</span><br></pre></td></tr></table></figure>\n<p>如果使用的主题是从GitHub克隆的，那么主题文件夹下有Git管理文件，需要将它们移除，否则上传github会为空目录。我使用的是hexo-butterfly，需要移除的文件如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh butterfly]# rm -rf .<span class=\"property\">git</span>*</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><p>创建一个叫hexo的分支</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git checkout -b hexo</span><br></pre></td></tr></table></figure>\n<p>保存所有文件到暂存区</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git add --all</span><br></pre></td></tr></table></figure>\n<p>提交变更</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git commit -m <span class=\"string\">&quot;创建hexo分支&quot;</span></span><br></pre></td></tr></table></figure>\n<p>推送到GitHub，并用–set-upstream与origin创建关联，将hexo设置为默认分支</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh hexo]# git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"迁移博客\"><a href=\"#迁移博客\" class=\"headerlink\" title=\"迁移博客\"></a>迁移博客</h2><p>预先安装环境<br>将hexo分支克隆下来</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# git clone -b hexo <span class=\"attr\">https</span>:<span class=\"comment\">//github.com/hehe-tui/hehe-tui.github.io</span></span><br></pre></td></tr></table></figure>\n<p>然后安装Hexo依赖</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>启动服务，访问 <a href=\"http://localhost:4000/\">http://localhost:4000</a> 判断备份是否成功。</p>\n"},{"title":"Kubernetes介绍与安装","date":"2020-12-17T16:00:00.000Z","updated":"2022-11-20T14:53:46.563Z","description":null,"cover":"https://pic.imgdb.cn/item/60a8c21a6ae4f77d3548c1b1.jpg","_content":"## Kubernetes 介绍\n### Kubernetes 简介\nKubernetes 是 Google 在 2014 年 6 月开源的一个容器集群管理系统，使用 GO 语言开发，Kubernetes 简称 K8S。K8S 是 Google 内部一个叫 Borg 的容器集群管理系统衍生出来的，Borg已经在 Google 大规模生产运行十年之久。\nK8S 主要用于自动化部署、扩展和管理容器应用，提供了资源调度、部署管理、服务发现、扩容缩容、监控等一整套功能。K8S 的目标是让部署容器化应用简单高效。2015 年 7月，Kubernetes v1.0 版本正式发布，最新版本详见[Kubernetes官网](https://kubernetes.io/zh/)\n### Kubernetes 主要功能\n* 数据卷\nPod 中容器之间共享数据，可以使用数据卷。\n* 应用程序监控检查\n容器内服务可能进程阻塞无法处理请求，可以设置监控检查策略保证应用健壮性。\n* 复制应用程序实例\n控制器维护着 Pod 副本数量，保证一个 Pod 或一组同类的 Pod 数量始终可用。\n* 弹性伸缩\n根据设定的指标（CPU 利用率）自动缩放 Pod 副本数。\n* 服务发现\n使用环境变量或 DNS 服务插件保证容器中程序发现 Pod 入库访问地址。\n* 负载均衡\n一组 Pod 副本分配一个私有的集群 IP 地址，负载均衡转发请求到后端容器。在集群内部其他 Pod 可以通过这个 cluster IP 访问应用。\n* 滚动更新\n更新服务不中断，一次更新一个 Pod，而不是同时删除整个服务。类似于灰度发布。\n*服务编排\n通过文件描述部署服务，使得应用程序部署变得更高效。\n* 资源监控\nnode 节点组件集成 cAdvisor 资源收集工具，可通过 Heapster 汇总整个集群节点资源数据，然后存储到 InfluxDB 时序数据库，再由Grafana 展示。、\n* 提供认证和授权\n支持角色访问控制（RBAC 基于角色的权限访问控制 Role-Based Access Control）认证授权等策略。\n### 基本对象概念\n* Pod\nPod 是最小部署单元，一个 Pod 由一个或多个容器组成，Pod 中容器共享存储和网络，\n在同一台 docker 主机上运行。\n* Service\nService 是一个应用服务抽象，定义了 Pod 逻辑集合和访问这个 Pod 集合的策略。\nService 代理 Pod 集合对外表现是为一个访问入口，分配一个集群 IP 地址，来自这个 IP的请求将负载均衡转发后端 Pod 中的容器。\nService 通过 Label Selector 选择一组 Pod 提供服务。\n* Volume\n数据卷，共享 Pod 中容器使用的数据。\n* Namespace\n命名空间将对象逻辑上分配到不同 namespace，可以是不同的项目、用户等区分管理，并设定控制策略，从而实现多租户。\n命名空间也成为虚拟集群。\n* Label\n标签用户区分对象（如 Pod、Service），键/值对存在；每个对象可以有多个标签，通过标签关联对象。\n* ReplicaSet（RS）\n下一代 Replication Controller（RC）。确保任何给定时间制定的 Pod 副本数量，并提供声明式更新等功能。\nRC 与 RS 唯一区别就是 label selector 支持不同，RS 支持新的基于集合的标签，RC 仅支持基于等式的标签。推荐使用 RS，后面 RC 将可能被淘汰。\n* Deployment\nDeployment 是一个更高层的 API 对象，它管理 ReplicaSets，意味着可能永远都不需要直接操作 RS 对象。\n* StatefulSet\nStatefulSet 适合持久性的应用程序，有唯一的网络标志符（IP），持久存储，有序的部署、扩展、删除和滚动更新。\n* DaemonSet\nDaemonSet 确保所有（或一些）节点运行同一个 Pod，当节点加入 Kubernetes 集群中，Pod 会被调度到该节点上运行，当节点从集群中移除时，DaemonSet 的 Pod 会被删除。删除DaemonSet 会清理它所有创建的 Pod。例如监控服务，可以使用 DaemonSet 对象管理。\n* Job\n一次性任务，运行完成后 Pod 销毁，不再重新启动新容器。还可以任务定时运行。\n### 系统架构及组件功能\n#### Master 组件：\n* kube-apiserver\nKubernetes API，集群的统一入口，各组件协调者，以 HTTP API 提供接口服务，所有对象资源的增删改查和监听操作都交给 APIServer 处理后再提交给 Etcd 存储。\n* kube-controller-manager\n处理集群中常规后台任务，一个资源对应一个控制器，而 ControllerManager 就是负责管理这些控制器的。\n* kube-scheduler\n根据调度算法为新创建的 Pod 选择一个 Node 节点。\n#### Node 组件：\n* kubelet\nkubelet 是 Master 在 Node 节点上的 Agent，管理本机运行容器的生命周期，比如创建容器、Pod 挂载数据卷、下载 secret、获取容器和节点状态等工作。kubelet 将每个 Pod 转换成一组容器。\n* kube-proxy\n在 Node 节点上实现 Pod 网络代理，维护网络规则和四层负载均衡工作，代理 iptables做防火墙策略。\n* docker 或 rocket/rkt\n运行容器。\n#### 第三方服务：\n* etcd\n分布式键值存储系统，负责集群的持久化。\n用于保持集群状态，比如 Pod、Service 等对象信息。\n## 使用 kubeadm 部署 kubenetes 集群\n### 安装环境\n```javascript\n[root@jjh ~]# cat /etc/hosts\n192.168.0.36 jjh1\n192.168.0.42 jjh2 \n192.168.0.43 jjh3\n```\n#### 安装 docker\n```javascript\n[root@jjh ~]# yum -y install yum-utils device-mapper-persistent-data lvm2\n[root@jjh ~]# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n[root@jjh ~]# yum -y install docker-ce\n[root@jjh ~]# systemctl start docker\n[root@jjh ~]# systemctl enable docker\n```\n将 docker 的镜像仓库改为国内的\n```javascript\n[root@jjh ~]# vim /etc/docker/daemon.json\n{\n \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n[root@jjh ~]# systemctl restart docker\n```\n#### 关闭 swap\n```javascript\n[root@jjh ~]# swapoff -a\n[root@jjh ~]# echo \"/usr/sbin/swapoff -a\" >> /etc/rc.local\n[root@jjh ~]# chmod +x /etc/rc.local\n```\n#### 配置内核参数\n```javascript\n[root@jjh ~]# vim /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_nonlocal_bind = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness=0\n[root@jjh ~]# sysctl --system\n```\n#### 加载必要的内核模块\n```javascript\n[root@jjh ~]# vim /etc/sysconfig/modules/ipvs.modules\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\n[root@jjh ~]# chmod +x /etc/sysconfig/modules/ipvs.modules \n[root@jjh ~]# /etc/sysconfig/modules/ipvs.modules\n```\n由于我们无法访问 kubeadm 官网上提供的源，所以选择阿里的镜像站\n```javascript\n[root@jjh ~]# vim /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\n```\n### 配置 master 节点\n#### 安装所需软件包\n```javascript\n[root@jjh1 ~]# yum install kubeadm kubectl kubelet ipvsadm -y\n```\n使用 kubeadm config print init-defaults > kubeadm-init.yaml 打印出默认配置，然后在根据自己的环境修改配置，尤其是镜像，在国外，默认的下不下来\n```javascript\n[root@jjh1 ~]# kubeadm config print init-defaults > kubeadm-init.yaml\n[root@jjh1 ~]# vim kubeadm-init.yaml\n```\n```\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 192.168.0.36 ## master内网IP\n  bindPort: 6443\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: jjh1\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository:  registry.cn-hangzhou.aliyuncs.com/google_containers ## 更改\nkind: ClusterConfiguration\nkubernetesVersion: v1.20.0\nnetworking:\n  dnsDomain: cluster.local\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n---                                 \napiVersion: kubeproxy.config.k8s.io/v1alpha1   ## 添加\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\n```\n#### 可以预下载镜像\n```javascript\n[root@jjh1 ~]# kubeadm config images pull --config kubeadm-init.yaml\n[root@jjh1 ~]# docker image ls\nREPOSITORY                                                                    TAG        IMAGE ID       CREATED         SIZE\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy                v1.20.0    10cc881966cf   9 days ago      118MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver            v1.20.0    ca9843d3b545   9 days ago      122MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager   v1.20.0    b9fa1895dcaa   9 days ago      116MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler            v1.20.0    3138b6e3d471   9 days ago      46.4MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/etcd                      3.4.13-0   0369cf4303ff   3 months ago    253MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/coredns                   1.7.0      bfe3a36ebd25   6 months ago    45.2MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/pause                     3.2        80d28bedfe5d   10 months ago   683kB\n```\n#### 初始化 master 节点\n```javascript\n[root@jjh1 ~]# systemctl start kubelet\n[root@jjh1 ~]# systemctl enable kubelet\n[root@jjh1 ~]# kubeadm init --pod-network-cidr=10.244.0.0/16 --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers\n......\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.0.36:6443 --token xzdklu.nf4lx1djq61i2kdx \\\n    --discovery-token-ca-cert-hash sha256:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce \n```\n//10.244.0.0/16 是 flannel 网络的默认网段\n\nkubeadm init 主要执行了以下操作：\n[init]：指定版本进行初始化操作\n[preflight] ：初始化前的检查和下载所需要的 Docker 镜像文件\n[kubelet-start] ：生成 kubelet 的配置文件”/var/lib/kubelet/config.yaml”，没有这个文件 kubelet无法启动，所以初始化之前的 kubelet 实际上启动失败。\n[certificates]：生成 Kubernetes 使用的证书，存放在/etc/kubernetes/pki 目录中。\n[kubeconfig] ：生成 KubeConfig 文件，存放在/etc/kubernetes 目录中，组件之间通信需要使用对应文件。\n[control-plane]：使用/etc/kubernetes/manifest 目录下的 YAML 文件，安装 Master 组件。\n[etcd]：使用/etc/kubernetes/manifest/etcd.yaml 安装 Etcd 服务。\n[wait-control-plane]：等待 control-plan 部署的 Master 组件启动。\n[apiclient]：检查 Master 组件服务状态。\n[uploadconfig]：更新配置\n[kubelet]：使用 configMap 配置 kubelet。\n[patchnode]：更新 CNI 信息到 Node 上，通过注释的方式记录。\n[mark-control-plane]：为当前节点打标签，打了角色 Master，和不可调度标签，这样默认就不会使用 Master 节点来运行 Pod。\n[bootstrap-token]：生成 token 记录下来，后边使用 kubeadm join 往集群中添加节点时会用到\n[addons]：安装附加组件 CoreDNS 和 kube-proxy\n#### 为 kubectl 准备 Kubeconfig 文件\nkubectl 默认会在执行的用户家目录下面的.kube 目录下寻找 config 文件。这里是将在初始化时[kubeconfig]步骤生成的 admin.conf 拷到.kube/config\n```javascript\n[root@jjh1 ~]# mkdir -p $HOME/.kube\n[root@jjh1 ~]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n[root@jjh1 ~]# chown $(id -u):$(id -g) $HOME/.kube/config\n```\n在该配置文件中，记录了 API Server 的访问地址，所以后面直接执行 kubectl 命令就可以正常连接到 API Server 中\n#### 验证 master 各组件运行状态\n```javascript\n[root@jjh1 ~]# kubectl get cs\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME                 STATUS      MESSAGE                                                                                       ERROR\nscheduler            Unhealthy   Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused   \ncontroller-manager   Unhealthy   Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused   \netcd-0               Healthy     {\"health\":\"true\"}                                       \n```\n出现报错，解决思路：\n注释掉/etc/kubernetes/manifests下的kube-controller-manager.yaml和kube-scheduler.yaml的- – port=0 \n确认kube-scheduler和kube-controller-manager组件配置是否禁用了非安全端口\n```javascript\n[root@jjh1 ~]# cd /etc/kubernetes/manifests\n[root@jjh1 manifests]# ls\netcd.yaml  kube-apiserver.yaml  kube-controller-manager.yaml  kube-scheduler.yaml\n# 搜索- – port=0更改为：#- – port=0\n[root@jjh1 ~]# systemctl restart kubelet\n# 重启kubelet\n```\n重新验证一下\n```javascript      \n[root@jjh1 ~]# kubectl get cs\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME                 STATUS    MESSAGE             ERROR\ncontroller-manager   Healthy   ok                  \nscheduler            Healthy   ok                  \netcd-0               Healthy   {\"health\":\"true\"}   \n[root@jjh1 ~]#  kubectl get pods -A\nNAMESPACE     NAME                           READY   STATUS    RESTARTS   AGE\nkube-system   coredns-54d67798b7-lfzwm       0/1     Pending   0          2m32s\nkube-system   coredns-54d67798b7-n2k5n       0/1     Pending   0          2m32s\nkube-system   etcd-jjh1                      1/1     Running   0          2m47s\nkube-system   kube-apiserver-jjh1            1/1     Running   0          2m47s\nkube-system   kube-controller-manager-jjh1   1/1     Running   0          56s\nkube-system   kube-proxy-k2wwb               1/1     Running   0          2m32s\nkube-system   kube-scheduler-jjh1            1/1     Running   0          41s\n[root@jjh1 ~]# kubectl get nodes\nNAME   STATUS     ROLES                  AGE     VERSION\njjh1   NotReady   control-plane,master   3m41s   v1.20.0\n```\n### 配置 node 节点\n```javascript\n[root@jjh2 ~]# yum install kubeadm kubectl kubelet ipvsadm -y\n[root@jjh2 ~]# kubeadm join 192.168.0.36:6443 --token xzdklu.nf4lx1djq61i2kdx \\\n    --discovery-token-ca-cert-hash sha256:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce \n```\n看见这段话表示成功：\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\nRun 'kubectl get nodes' on the control-plane to see this node join the cluster.\n回到 master 节点看看 node 信息\n```javascript\n[root@jjh1 ~]# kubectl get nodes\nNAME   STATUS     ROLES                  AGE     VERSION\njjh1   NotReady   control-plane,master   5m21s   v1.20.0\njjh2   NotReady   <none>                 23s     v1.20.0\njjh3   NotReady   <none>                 21s     v1.20.0\n```\n### 部署网络插件 flannel\nMaster 节点 NotReady 的原因就是因为没有使用任何的网络插件，此时 Node 和 Master的连接还不正常。目前最流行的 Kubernetes 网络插件有 Flannel、Calico、Canal、Weave 这里选择使用 flannel。\n在 master 节点上都有执行，执行完成后需要等 flannel 的 pods 运行起来，这需要点时间：\n```javascript\n[root@jjh1 ~]# kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nThe connection to the server raw.githubusercontent.com was refused - did you specify the right host or port?\n```\n外网无法访问，就直接下到本地安装好了\n链接： https://pan.baidu.com/s/13NwlWF24TUpDm23uj66V5Q\n提取码： here \n```javascript\n[root@jjh1 ~]# ls\nflannel.yaml  kubeadm-init.yaml\n[root@jjh1 ~]# kubectl apply -f flannel.yaml\npodsecuritypolicy.policy/psp.flannel.unprivileged created\nWarning: rbac.authorization.k8s.io/v1beta1 ClusterRole is deprecated in v1.17+, unavailable in v1.22+; use rbac.authorization.k8s.io/v1 ClusterRole\nclusterrole.rbac.authorization.k8s.io/flannel created\nWarning: rbac.authorization.k8s.io/v1beta1 ClusterRoleBinding is deprecated in v1.17+, unavailable in v1.22+; use rbac.authorization.k8s.io/v1 ClusterRoleBinding\nclusterrolebinding.rbac.authorization.k8s.io/flannel created\nserviceaccount/flannel created\nconfigmap/kube-flannel-cfg created\ndaemonset.apps/kube-flannel-ds-amd64 created\ndaemonset.apps/kube-flannel-ds-arm64 created\ndaemonset.apps/kube-flannel-ds-arm created\ndaemonset.apps/kube-flannel-ds-ppc64le created\ndaemonset.apps/kube-flannel-ds-s390x created\n```\n现在重新 get 验证一下，看看是否安装成功\n```javascript\n[root@jjh1 ~]# kubectl get nodes\nNAME   STATUS   ROLES                  AGE     VERSION\njjh1    Ready    control-plane,master   35m     v1.20.0\njjh2   Ready    <none>                 7m43s   v1.20.0\njjh3   Ready    <none>                 7m44s   v1.20.0\n[root@jjh1 ~]# kubectl get pods -n kube-system\nNAME                           READY   STATUS    RESTARTS   AGE\ncoredns-54d67798b7-lfzwm       1/1     Running   0          9m6s\ncoredns-54d67798b7-n2k5n       1/1     Running   0          9m6s\netcd-jjh1                      1/1     Running   0          9m21s\nkube-apiserver-jjh1            1/1     Running   0          9m21s\nkube-controller-manager-jjh1   1/1     Running   0          7m30s\nkube-flannel-ds-amd64-7x9v6    1/1     Running   0          117s\nkube-flannel-ds-amd64-8pxgf    1/1     Running   0          117s\nkube-flannel-ds-amd64-jfpxb    1/1     Running   0          117s\nkube-proxy-679sb               1/1     Running   0          4m24s\nkube-proxy-8xm25               1/1     Running   0          4m26s\nkube-proxy-k2wwb               1/1     Running   0          9m6s\nkube-scheduler-jjh1            1/1     Running   0          7m15s\n```\n到此K8S基本安装完成\n\n","source":"_posts/Kubernetes安装部署.md","raw":"---\ntitle: Kubernetes介绍与安装\ndate: 2020-12-18\nupdated:\ndescription:\ncover: https://pic.imgdb.cn/item/60a8c21a6ae4f77d3548c1b1.jpg\ntag:\n  - Kubernetes\ncategories:\n  - Kubernetes\n---\n## Kubernetes 介绍\n### Kubernetes 简介\nKubernetes 是 Google 在 2014 年 6 月开源的一个容器集群管理系统，使用 GO 语言开发，Kubernetes 简称 K8S。K8S 是 Google 内部一个叫 Borg 的容器集群管理系统衍生出来的，Borg已经在 Google 大规模生产运行十年之久。\nK8S 主要用于自动化部署、扩展和管理容器应用，提供了资源调度、部署管理、服务发现、扩容缩容、监控等一整套功能。K8S 的目标是让部署容器化应用简单高效。2015 年 7月，Kubernetes v1.0 版本正式发布，最新版本详见[Kubernetes官网](https://kubernetes.io/zh/)\n### Kubernetes 主要功能\n* 数据卷\nPod 中容器之间共享数据，可以使用数据卷。\n* 应用程序监控检查\n容器内服务可能进程阻塞无法处理请求，可以设置监控检查策略保证应用健壮性。\n* 复制应用程序实例\n控制器维护着 Pod 副本数量，保证一个 Pod 或一组同类的 Pod 数量始终可用。\n* 弹性伸缩\n根据设定的指标（CPU 利用率）自动缩放 Pod 副本数。\n* 服务发现\n使用环境变量或 DNS 服务插件保证容器中程序发现 Pod 入库访问地址。\n* 负载均衡\n一组 Pod 副本分配一个私有的集群 IP 地址，负载均衡转发请求到后端容器。在集群内部其他 Pod 可以通过这个 cluster IP 访问应用。\n* 滚动更新\n更新服务不中断，一次更新一个 Pod，而不是同时删除整个服务。类似于灰度发布。\n*服务编排\n通过文件描述部署服务，使得应用程序部署变得更高效。\n* 资源监控\nnode 节点组件集成 cAdvisor 资源收集工具，可通过 Heapster 汇总整个集群节点资源数据，然后存储到 InfluxDB 时序数据库，再由Grafana 展示。、\n* 提供认证和授权\n支持角色访问控制（RBAC 基于角色的权限访问控制 Role-Based Access Control）认证授权等策略。\n### 基本对象概念\n* Pod\nPod 是最小部署单元，一个 Pod 由一个或多个容器组成，Pod 中容器共享存储和网络，\n在同一台 docker 主机上运行。\n* Service\nService 是一个应用服务抽象，定义了 Pod 逻辑集合和访问这个 Pod 集合的策略。\nService 代理 Pod 集合对外表现是为一个访问入口，分配一个集群 IP 地址，来自这个 IP的请求将负载均衡转发后端 Pod 中的容器。\nService 通过 Label Selector 选择一组 Pod 提供服务。\n* Volume\n数据卷，共享 Pod 中容器使用的数据。\n* Namespace\n命名空间将对象逻辑上分配到不同 namespace，可以是不同的项目、用户等区分管理，并设定控制策略，从而实现多租户。\n命名空间也成为虚拟集群。\n* Label\n标签用户区分对象（如 Pod、Service），键/值对存在；每个对象可以有多个标签，通过标签关联对象。\n* ReplicaSet（RS）\n下一代 Replication Controller（RC）。确保任何给定时间制定的 Pod 副本数量，并提供声明式更新等功能。\nRC 与 RS 唯一区别就是 label selector 支持不同，RS 支持新的基于集合的标签，RC 仅支持基于等式的标签。推荐使用 RS，后面 RC 将可能被淘汰。\n* Deployment\nDeployment 是一个更高层的 API 对象，它管理 ReplicaSets，意味着可能永远都不需要直接操作 RS 对象。\n* StatefulSet\nStatefulSet 适合持久性的应用程序，有唯一的网络标志符（IP），持久存储，有序的部署、扩展、删除和滚动更新。\n* DaemonSet\nDaemonSet 确保所有（或一些）节点运行同一个 Pod，当节点加入 Kubernetes 集群中，Pod 会被调度到该节点上运行，当节点从集群中移除时，DaemonSet 的 Pod 会被删除。删除DaemonSet 会清理它所有创建的 Pod。例如监控服务，可以使用 DaemonSet 对象管理。\n* Job\n一次性任务，运行完成后 Pod 销毁，不再重新启动新容器。还可以任务定时运行。\n### 系统架构及组件功能\n#### Master 组件：\n* kube-apiserver\nKubernetes API，集群的统一入口，各组件协调者，以 HTTP API 提供接口服务，所有对象资源的增删改查和监听操作都交给 APIServer 处理后再提交给 Etcd 存储。\n* kube-controller-manager\n处理集群中常规后台任务，一个资源对应一个控制器，而 ControllerManager 就是负责管理这些控制器的。\n* kube-scheduler\n根据调度算法为新创建的 Pod 选择一个 Node 节点。\n#### Node 组件：\n* kubelet\nkubelet 是 Master 在 Node 节点上的 Agent，管理本机运行容器的生命周期，比如创建容器、Pod 挂载数据卷、下载 secret、获取容器和节点状态等工作。kubelet 将每个 Pod 转换成一组容器。\n* kube-proxy\n在 Node 节点上实现 Pod 网络代理，维护网络规则和四层负载均衡工作，代理 iptables做防火墙策略。\n* docker 或 rocket/rkt\n运行容器。\n#### 第三方服务：\n* etcd\n分布式键值存储系统，负责集群的持久化。\n用于保持集群状态，比如 Pod、Service 等对象信息。\n## 使用 kubeadm 部署 kubenetes 集群\n### 安装环境\n```javascript\n[root@jjh ~]# cat /etc/hosts\n192.168.0.36 jjh1\n192.168.0.42 jjh2 \n192.168.0.43 jjh3\n```\n#### 安装 docker\n```javascript\n[root@jjh ~]# yum -y install yum-utils device-mapper-persistent-data lvm2\n[root@jjh ~]# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n[root@jjh ~]# yum -y install docker-ce\n[root@jjh ~]# systemctl start docker\n[root@jjh ~]# systemctl enable docker\n```\n将 docker 的镜像仓库改为国内的\n```javascript\n[root@jjh ~]# vim /etc/docker/daemon.json\n{\n \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n[root@jjh ~]# systemctl restart docker\n```\n#### 关闭 swap\n```javascript\n[root@jjh ~]# swapoff -a\n[root@jjh ~]# echo \"/usr/sbin/swapoff -a\" >> /etc/rc.local\n[root@jjh ~]# chmod +x /etc/rc.local\n```\n#### 配置内核参数\n```javascript\n[root@jjh ~]# vim /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_nonlocal_bind = 1\nnet.ipv4.ip_forward = 1\nvm.swappiness=0\n[root@jjh ~]# sysctl --system\n```\n#### 加载必要的内核模块\n```javascript\n[root@jjh ~]# vim /etc/sysconfig/modules/ipvs.modules\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\n[root@jjh ~]# chmod +x /etc/sysconfig/modules/ipvs.modules \n[root@jjh ~]# /etc/sysconfig/modules/ipvs.modules\n```\n由于我们无法访问 kubeadm 官网上提供的源，所以选择阿里的镜像站\n```javascript\n[root@jjh ~]# vim /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\n```\n### 配置 master 节点\n#### 安装所需软件包\n```javascript\n[root@jjh1 ~]# yum install kubeadm kubectl kubelet ipvsadm -y\n```\n使用 kubeadm config print init-defaults > kubeadm-init.yaml 打印出默认配置，然后在根据自己的环境修改配置，尤其是镜像，在国外，默认的下不下来\n```javascript\n[root@jjh1 ~]# kubeadm config print init-defaults > kubeadm-init.yaml\n[root@jjh1 ~]# vim kubeadm-init.yaml\n```\n```\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: 192.168.0.36 ## master内网IP\n  bindPort: 6443\nnodeRegistration:\n  criSocket: /var/run/dockershim.sock\n  name: jjh1\n  taints:\n  - effect: NoSchedule\n    key: node-role.kubernetes.io/master\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  type: CoreDNS\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository:  registry.cn-hangzhou.aliyuncs.com/google_containers ## 更改\nkind: ClusterConfiguration\nkubernetesVersion: v1.20.0\nnetworking:\n  dnsDomain: cluster.local\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n---                                 \napiVersion: kubeproxy.config.k8s.io/v1alpha1   ## 添加\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\n```\n#### 可以预下载镜像\n```javascript\n[root@jjh1 ~]# kubeadm config images pull --config kubeadm-init.yaml\n[root@jjh1 ~]# docker image ls\nREPOSITORY                                                                    TAG        IMAGE ID       CREATED         SIZE\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy                v1.20.0    10cc881966cf   9 days ago      118MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver            v1.20.0    ca9843d3b545   9 days ago      122MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager   v1.20.0    b9fa1895dcaa   9 days ago      116MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler            v1.20.0    3138b6e3d471   9 days ago      46.4MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/etcd                      3.4.13-0   0369cf4303ff   3 months ago    253MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/coredns                   1.7.0      bfe3a36ebd25   6 months ago    45.2MB\nregistry.cn-hangzhou.aliyuncs.com/google_containers/pause                     3.2        80d28bedfe5d   10 months ago   683kB\n```\n#### 初始化 master 节点\n```javascript\n[root@jjh1 ~]# systemctl start kubelet\n[root@jjh1 ~]# systemctl enable kubelet\n[root@jjh1 ~]# kubeadm init --pod-network-cidr=10.244.0.0/16 --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers\n......\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.0.36:6443 --token xzdklu.nf4lx1djq61i2kdx \\\n    --discovery-token-ca-cert-hash sha256:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce \n```\n//10.244.0.0/16 是 flannel 网络的默认网段\n\nkubeadm init 主要执行了以下操作：\n[init]：指定版本进行初始化操作\n[preflight] ：初始化前的检查和下载所需要的 Docker 镜像文件\n[kubelet-start] ：生成 kubelet 的配置文件”/var/lib/kubelet/config.yaml”，没有这个文件 kubelet无法启动，所以初始化之前的 kubelet 实际上启动失败。\n[certificates]：生成 Kubernetes 使用的证书，存放在/etc/kubernetes/pki 目录中。\n[kubeconfig] ：生成 KubeConfig 文件，存放在/etc/kubernetes 目录中，组件之间通信需要使用对应文件。\n[control-plane]：使用/etc/kubernetes/manifest 目录下的 YAML 文件，安装 Master 组件。\n[etcd]：使用/etc/kubernetes/manifest/etcd.yaml 安装 Etcd 服务。\n[wait-control-plane]：等待 control-plan 部署的 Master 组件启动。\n[apiclient]：检查 Master 组件服务状态。\n[uploadconfig]：更新配置\n[kubelet]：使用 configMap 配置 kubelet。\n[patchnode]：更新 CNI 信息到 Node 上，通过注释的方式记录。\n[mark-control-plane]：为当前节点打标签，打了角色 Master，和不可调度标签，这样默认就不会使用 Master 节点来运行 Pod。\n[bootstrap-token]：生成 token 记录下来，后边使用 kubeadm join 往集群中添加节点时会用到\n[addons]：安装附加组件 CoreDNS 和 kube-proxy\n#### 为 kubectl 准备 Kubeconfig 文件\nkubectl 默认会在执行的用户家目录下面的.kube 目录下寻找 config 文件。这里是将在初始化时[kubeconfig]步骤生成的 admin.conf 拷到.kube/config\n```javascript\n[root@jjh1 ~]# mkdir -p $HOME/.kube\n[root@jjh1 ~]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n[root@jjh1 ~]# chown $(id -u):$(id -g) $HOME/.kube/config\n```\n在该配置文件中，记录了 API Server 的访问地址，所以后面直接执行 kubectl 命令就可以正常连接到 API Server 中\n#### 验证 master 各组件运行状态\n```javascript\n[root@jjh1 ~]# kubectl get cs\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME                 STATUS      MESSAGE                                                                                       ERROR\nscheduler            Unhealthy   Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused   \ncontroller-manager   Unhealthy   Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused   \netcd-0               Healthy     {\"health\":\"true\"}                                       \n```\n出现报错，解决思路：\n注释掉/etc/kubernetes/manifests下的kube-controller-manager.yaml和kube-scheduler.yaml的- – port=0 \n确认kube-scheduler和kube-controller-manager组件配置是否禁用了非安全端口\n```javascript\n[root@jjh1 ~]# cd /etc/kubernetes/manifests\n[root@jjh1 manifests]# ls\netcd.yaml  kube-apiserver.yaml  kube-controller-manager.yaml  kube-scheduler.yaml\n# 搜索- – port=0更改为：#- – port=0\n[root@jjh1 ~]# systemctl restart kubelet\n# 重启kubelet\n```\n重新验证一下\n```javascript      \n[root@jjh1 ~]# kubectl get cs\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME                 STATUS    MESSAGE             ERROR\ncontroller-manager   Healthy   ok                  \nscheduler            Healthy   ok                  \netcd-0               Healthy   {\"health\":\"true\"}   \n[root@jjh1 ~]#  kubectl get pods -A\nNAMESPACE     NAME                           READY   STATUS    RESTARTS   AGE\nkube-system   coredns-54d67798b7-lfzwm       0/1     Pending   0          2m32s\nkube-system   coredns-54d67798b7-n2k5n       0/1     Pending   0          2m32s\nkube-system   etcd-jjh1                      1/1     Running   0          2m47s\nkube-system   kube-apiserver-jjh1            1/1     Running   0          2m47s\nkube-system   kube-controller-manager-jjh1   1/1     Running   0          56s\nkube-system   kube-proxy-k2wwb               1/1     Running   0          2m32s\nkube-system   kube-scheduler-jjh1            1/1     Running   0          41s\n[root@jjh1 ~]# kubectl get nodes\nNAME   STATUS     ROLES                  AGE     VERSION\njjh1   NotReady   control-plane,master   3m41s   v1.20.0\n```\n### 配置 node 节点\n```javascript\n[root@jjh2 ~]# yum install kubeadm kubectl kubelet ipvsadm -y\n[root@jjh2 ~]# kubeadm join 192.168.0.36:6443 --token xzdklu.nf4lx1djq61i2kdx \\\n    --discovery-token-ca-cert-hash sha256:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce \n```\n看见这段话表示成功：\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\nRun 'kubectl get nodes' on the control-plane to see this node join the cluster.\n回到 master 节点看看 node 信息\n```javascript\n[root@jjh1 ~]# kubectl get nodes\nNAME   STATUS     ROLES                  AGE     VERSION\njjh1   NotReady   control-plane,master   5m21s   v1.20.0\njjh2   NotReady   <none>                 23s     v1.20.0\njjh3   NotReady   <none>                 21s     v1.20.0\n```\n### 部署网络插件 flannel\nMaster 节点 NotReady 的原因就是因为没有使用任何的网络插件，此时 Node 和 Master的连接还不正常。目前最流行的 Kubernetes 网络插件有 Flannel、Calico、Canal、Weave 这里选择使用 flannel。\n在 master 节点上都有执行，执行完成后需要等 flannel 的 pods 运行起来，这需要点时间：\n```javascript\n[root@jjh1 ~]# kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\nThe connection to the server raw.githubusercontent.com was refused - did you specify the right host or port?\n```\n外网无法访问，就直接下到本地安装好了\n链接： https://pan.baidu.com/s/13NwlWF24TUpDm23uj66V5Q\n提取码： here \n```javascript\n[root@jjh1 ~]# ls\nflannel.yaml  kubeadm-init.yaml\n[root@jjh1 ~]# kubectl apply -f flannel.yaml\npodsecuritypolicy.policy/psp.flannel.unprivileged created\nWarning: rbac.authorization.k8s.io/v1beta1 ClusterRole is deprecated in v1.17+, unavailable in v1.22+; use rbac.authorization.k8s.io/v1 ClusterRole\nclusterrole.rbac.authorization.k8s.io/flannel created\nWarning: rbac.authorization.k8s.io/v1beta1 ClusterRoleBinding is deprecated in v1.17+, unavailable in v1.22+; use rbac.authorization.k8s.io/v1 ClusterRoleBinding\nclusterrolebinding.rbac.authorization.k8s.io/flannel created\nserviceaccount/flannel created\nconfigmap/kube-flannel-cfg created\ndaemonset.apps/kube-flannel-ds-amd64 created\ndaemonset.apps/kube-flannel-ds-arm64 created\ndaemonset.apps/kube-flannel-ds-arm created\ndaemonset.apps/kube-flannel-ds-ppc64le created\ndaemonset.apps/kube-flannel-ds-s390x created\n```\n现在重新 get 验证一下，看看是否安装成功\n```javascript\n[root@jjh1 ~]# kubectl get nodes\nNAME   STATUS   ROLES                  AGE     VERSION\njjh1    Ready    control-plane,master   35m     v1.20.0\njjh2   Ready    <none>                 7m43s   v1.20.0\njjh3   Ready    <none>                 7m44s   v1.20.0\n[root@jjh1 ~]# kubectl get pods -n kube-system\nNAME                           READY   STATUS    RESTARTS   AGE\ncoredns-54d67798b7-lfzwm       1/1     Running   0          9m6s\ncoredns-54d67798b7-n2k5n       1/1     Running   0          9m6s\netcd-jjh1                      1/1     Running   0          9m21s\nkube-apiserver-jjh1            1/1     Running   0          9m21s\nkube-controller-manager-jjh1   1/1     Running   0          7m30s\nkube-flannel-ds-amd64-7x9v6    1/1     Running   0          117s\nkube-flannel-ds-amd64-8pxgf    1/1     Running   0          117s\nkube-flannel-ds-amd64-jfpxb    1/1     Running   0          117s\nkube-proxy-679sb               1/1     Running   0          4m24s\nkube-proxy-8xm25               1/1     Running   0          4m26s\nkube-proxy-k2wwb               1/1     Running   0          9m6s\nkube-scheduler-jjh1            1/1     Running   0          7m15s\n```\n到此K8S基本安装完成\n\n","slug":"Kubernetes安装部署","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"clb99avfx002ltobv04iu53ml","content":"<h2 id=\"Kubernetes-介绍\"><a href=\"#Kubernetes-介绍\" class=\"headerlink\" title=\"Kubernetes 介绍\"></a>Kubernetes 介绍</h2><h3 id=\"Kubernetes-简介\"><a href=\"#Kubernetes-简介\" class=\"headerlink\" title=\"Kubernetes 简介\"></a>Kubernetes 简介</h3><p>Kubernetes 是 Google 在 2014 年 6 月开源的一个容器集群管理系统，使用 GO 语言开发，Kubernetes 简称 K8S。K8S 是 Google 内部一个叫 Borg 的容器集群管理系统衍生出来的，Borg已经在 Google 大规模生产运行十年之久。<br>K8S 主要用于自动化部署、扩展和管理容器应用，提供了资源调度、部署管理、服务发现、扩容缩容、监控等一整套功能。K8S 的目标是让部署容器化应用简单高效。2015 年 7月，Kubernetes v1.0 版本正式发布，最新版本详见<a href=\"https://kubernetes.io/zh/\">Kubernetes官网</a></p>\n<h3 id=\"Kubernetes-主要功能\"><a href=\"#Kubernetes-主要功能\" class=\"headerlink\" title=\"Kubernetes 主要功能\"></a>Kubernetes 主要功能</h3><ul>\n<li>数据卷<br>Pod 中容器之间共享数据，可以使用数据卷。</li>\n<li>应用程序监控检查<br>容器内服务可能进程阻塞无法处理请求，可以设置监控检查策略保证应用健壮性。</li>\n<li>复制应用程序实例<br>控制器维护着 Pod 副本数量，保证一个 Pod 或一组同类的 Pod 数量始终可用。</li>\n<li>弹性伸缩<br>根据设定的指标（CPU 利用率）自动缩放 Pod 副本数。</li>\n<li>服务发现<br>使用环境变量或 DNS 服务插件保证容器中程序发现 Pod 入库访问地址。</li>\n<li>负载均衡<br>一组 Pod 副本分配一个私有的集群 IP 地址，负载均衡转发请求到后端容器。在集群内部其他 Pod 可以通过这个 cluster IP 访问应用。</li>\n<li>滚动更新<br>更新服务不中断，一次更新一个 Pod，而不是同时删除整个服务。类似于灰度发布。</li>\n<li>服务编排<br>通过文件描述部署服务，使得应用程序部署变得更高效。</li>\n<li>资源监控<br>node 节点组件集成 cAdvisor 资源收集工具，可通过 Heapster 汇总整个集群节点资源数据，然后存储到 InfluxDB 时序数据库，再由Grafana 展示。、</li>\n<li>提供认证和授权<br>支持角色访问控制（RBAC 基于角色的权限访问控制 Role-Based Access Control）认证授权等策略。<h3 id=\"基本对象概念\"><a href=\"#基本对象概念\" class=\"headerlink\" title=\"基本对象概念\"></a>基本对象概念</h3></li>\n<li>Pod<br>Pod 是最小部署单元，一个 Pod 由一个或多个容器组成，Pod 中容器共享存储和网络，<br>在同一台 docker 主机上运行。</li>\n<li>Service<br>Service 是一个应用服务抽象，定义了 Pod 逻辑集合和访问这个 Pod 集合的策略。<br>Service 代理 Pod 集合对外表现是为一个访问入口，分配一个集群 IP 地址，来自这个 IP的请求将负载均衡转发后端 Pod 中的容器。<br>Service 通过 Label Selector 选择一组 Pod 提供服务。</li>\n<li>Volume<br>数据卷，共享 Pod 中容器使用的数据。</li>\n<li>Namespace<br>命名空间将对象逻辑上分配到不同 namespace，可以是不同的项目、用户等区分管理，并设定控制策略，从而实现多租户。<br>命名空间也成为虚拟集群。</li>\n<li>Label<br>标签用户区分对象（如 Pod、Service），键/值对存在；每个对象可以有多个标签，通过标签关联对象。</li>\n<li>ReplicaSet（RS）<br>下一代 Replication Controller（RC）。确保任何给定时间制定的 Pod 副本数量，并提供声明式更新等功能。<br>RC 与 RS 唯一区别就是 label selector 支持不同，RS 支持新的基于集合的标签，RC 仅支持基于等式的标签。推荐使用 RS，后面 RC 将可能被淘汰。</li>\n<li>Deployment<br>Deployment 是一个更高层的 API 对象，它管理 ReplicaSets，意味着可能永远都不需要直接操作 RS 对象。</li>\n<li>StatefulSet<br>StatefulSet 适合持久性的应用程序，有唯一的网络标志符（IP），持久存储，有序的部署、扩展、删除和滚动更新。</li>\n<li>DaemonSet<br>DaemonSet 确保所有（或一些）节点运行同一个 Pod，当节点加入 Kubernetes 集群中，Pod 会被调度到该节点上运行，当节点从集群中移除时，DaemonSet 的 Pod 会被删除。删除DaemonSet 会清理它所有创建的 Pod。例如监控服务，可以使用 DaemonSet 对象管理。</li>\n<li>Job<br>一次性任务，运行完成后 Pod 销毁，不再重新启动新容器。还可以任务定时运行。<h3 id=\"系统架构及组件功能\"><a href=\"#系统架构及组件功能\" class=\"headerlink\" title=\"系统架构及组件功能\"></a>系统架构及组件功能</h3><h4 id=\"Master-组件：\"><a href=\"#Master-组件：\" class=\"headerlink\" title=\"Master 组件：\"></a>Master 组件：</h4></li>\n<li>kube-apiserver<br>Kubernetes API，集群的统一入口，各组件协调者，以 HTTP API 提供接口服务，所有对象资源的增删改查和监听操作都交给 APIServer 处理后再提交给 Etcd 存储。</li>\n<li>kube-controller-manager<br>处理集群中常规后台任务，一个资源对应一个控制器，而 ControllerManager 就是负责管理这些控制器的。</li>\n<li>kube-scheduler<br>根据调度算法为新创建的 Pod 选择一个 Node 节点。<h4 id=\"Node-组件：\"><a href=\"#Node-组件：\" class=\"headerlink\" title=\"Node 组件：\"></a>Node 组件：</h4></li>\n<li>kubelet<br>kubelet 是 Master 在 Node 节点上的 Agent，管理本机运行容器的生命周期，比如创建容器、Pod 挂载数据卷、下载 secret、获取容器和节点状态等工作。kubelet 将每个 Pod 转换成一组容器。</li>\n<li>kube-proxy<br>在 Node 节点上实现 Pod 网络代理，维护网络规则和四层负载均衡工作，代理 iptables做防火墙策略。</li>\n<li>docker 或 rocket/rkt<br>运行容器。<h4 id=\"第三方服务：\"><a href=\"#第三方服务：\" class=\"headerlink\" title=\"第三方服务：\"></a>第三方服务：</h4></li>\n<li>etcd<br>分布式键值存储系统，负责集群的持久化。<br>用于保持集群状态，比如 Pod、Service 等对象信息。<h2 id=\"使用-kubeadm-部署-kubenetes-集群\"><a href=\"#使用-kubeadm-部署-kubenetes-集群\" class=\"headerlink\" title=\"使用 kubeadm 部署 kubenetes 集群\"></a>使用 kubeadm 部署 kubenetes 集群</h2><h3 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /etc/hosts</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> jjh1</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span> jjh2 </span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span> jjh3</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-docker\"><a href=\"#安装-docker\" class=\"headerlink\" title=\"安装 docker\"></a>安装 docker</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum -y install yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\">[root@jjh ~]# yum-config-manager --add-repo <span class=\"attr\">https</span>:<span class=\"comment\">//download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class=\"line\">[root@jjh ~]# yum -y install docker-ce</span><br><span class=\"line\">[root@jjh ~]# systemctl start docker</span><br><span class=\"line\">[root@jjh ~]# systemctl enable docker</span><br></pre></td></tr></table></figure>\n将 docker 的镜像仓库改为国内的<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/docker/daemon.<span class=\"property\">json</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;https://registry.docker-cn.com&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[root@jjh ~]# systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"关闭-swap\"><a href=\"#关闭-swap\" class=\"headerlink\" title=\"关闭 swap\"></a>关闭 swap</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# swapoff -a</span><br><span class=\"line\">[root@jjh ~]# echo <span class=\"string\">&quot;/usr/sbin/swapoff -a&quot;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>rc.<span class=\"property\">local</span></span><br><span class=\"line\">[root@jjh ~]# chmod +x /etc/rc.<span class=\"property\">local</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"配置内核参数\"><a href=\"#配置内核参数\" class=\"headerlink\" title=\"配置内核参数\"></a>配置内核参数</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/sysctl.<span class=\"property\">d</span>/k8s.<span class=\"property\">conf</span></span><br><span class=\"line\">net.<span class=\"property\">bridge</span>.<span class=\"property\">bridge</span>-nf-call-ip6tables = <span class=\"number\">1</span></span><br><span class=\"line\">net.<span class=\"property\">bridge</span>.<span class=\"property\">bridge</span>-nf-call-iptables = <span class=\"number\">1</span></span><br><span class=\"line\">net.<span class=\"property\">ipv4</span>.<span class=\"property\">ip_nonlocal_bind</span> = <span class=\"number\">1</span></span><br><span class=\"line\">net.<span class=\"property\">ipv4</span>.<span class=\"property\">ip_forward</span> = <span class=\"number\">1</span></span><br><span class=\"line\">vm.<span class=\"property\">swappiness</span>=<span class=\"number\">0</span></span><br><span class=\"line\">[root@jjh ~]# sysctl --system</span><br></pre></td></tr></table></figure>\n<h4 id=\"加载必要的内核模块\"><a href=\"#加载必要的内核模块\" class=\"headerlink\" title=\"加载必要的内核模块\"></a>加载必要的内核模块</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/sysconfig/modules/ipvs.<span class=\"property\">modules</span></span><br><span class=\"line\">#!<span class=\"regexp\">/bin/</span>bash</span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- nf_conntrack_ipv4</span><br><span class=\"line\">[root@jjh ~]# chmod +x /etc/sysconfig/modules/ipvs.<span class=\"property\">modules</span> </span><br><span class=\"line\">[root@jjh ~]# /etc/sysconfig/modules/ipvs.<span class=\"property\">modules</span></span><br></pre></td></tr></table></figure>\n由于我们无法访问 kubeadm 官网上提供的源，所以选择阿里的镜像站<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/yum.<span class=\"property\">repos</span>.<span class=\"property\">d</span>/kubernetes.<span class=\"property\">repo</span></span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=<span class=\"title class_\">Kubernetes</span></span><br><span class=\"line\">baseurl=<span class=\"attr\">https</span>:<span class=\"comment\">//mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class=\"line\">enabled=<span class=\"number\">1</span></span><br><span class=\"line\">gpgcheck=<span class=\"number\">1</span></span><br><span class=\"line\">repo_gpgcheck=<span class=\"number\">1</span></span><br><span class=\"line\">gpgkey=<span class=\"attr\">https</span>:<span class=\"comment\">//mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-master-节点\"><a href=\"#配置-master-节点\" class=\"headerlink\" title=\"配置 master 节点\"></a>配置 master 节点</h3><h4 id=\"安装所需软件包\"><a href=\"#安装所需软件包\" class=\"headerlink\" title=\"安装所需软件包\"></a>安装所需软件包</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# yum install kubeadm kubectl kubelet ipvsadm -y</span><br></pre></td></tr></table></figure>\n使用 kubeadm config print init-defaults &gt; kubeadm-init.yaml 打印出默认配置，然后在根据自己的环境修改配置，尤其是镜像，在国外，默认的下不下来<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubeadm config print init-defaults &gt; kubeadm-init.<span class=\"property\">yaml</span></span><br><span class=\"line\">[root@jjh1 ~]# vim kubeadm-init.<span class=\"property\">yaml</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">bootstrapTokens:</span><br><span class=\"line\">- groups:</span><br><span class=\"line\">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class=\"line\">  token: abcdef.0123456789abcdef</span><br><span class=\"line\">  ttl: 24h0m0s</span><br><span class=\"line\">  usages:</span><br><span class=\"line\">  - signing</span><br><span class=\"line\">  - authentication</span><br><span class=\"line\">kind: InitConfiguration</span><br><span class=\"line\">localAPIEndpoint:</span><br><span class=\"line\">  advertiseAddress: 192.168.0.36 ## master内网IP</span><br><span class=\"line\">  bindPort: 6443</span><br><span class=\"line\">nodeRegistration:</span><br><span class=\"line\">  criSocket: /var/run/dockershim.sock</span><br><span class=\"line\">  name: jjh1</span><br><span class=\"line\">  taints:</span><br><span class=\"line\">  - effect: NoSchedule</span><br><span class=\"line\">    key: node-role.kubernetes.io/master</span><br><span class=\"line\">---</span><br><span class=\"line\">apiServer:</span><br><span class=\"line\">  timeoutForControlPlane: 4m0s</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">certificatesDir: /etc/kubernetes/pki</span><br><span class=\"line\">clusterName: kubernetes</span><br><span class=\"line\">controllerManager: &#123;&#125;</span><br><span class=\"line\">dns:</span><br><span class=\"line\">  type: CoreDNS</span><br><span class=\"line\">etcd:</span><br><span class=\"line\">  local:</span><br><span class=\"line\">    dataDir: /var/lib/etcd</span><br><span class=\"line\">imageRepository:  registry.cn-hangzhou.aliyuncs.com/google_containers ## 更改</span><br><span class=\"line\">kind: ClusterConfiguration</span><br><span class=\"line\">kubernetesVersion: v1.20.0</span><br><span class=\"line\">networking:</span><br><span class=\"line\">  dnsDomain: cluster.local</span><br><span class=\"line\">  serviceSubnet: 10.96.0.0/12</span><br><span class=\"line\">scheduler: &#123;&#125;</span><br><span class=\"line\">---                                 </span><br><span class=\"line\">apiVersion: kubeproxy.config.k8s.io/v1alpha1   ## 添加</span><br><span class=\"line\">kind: KubeProxyConfiguration</span><br><span class=\"line\">mode: &quot;ipvs&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"可以预下载镜像\"><a href=\"#可以预下载镜像\" class=\"headerlink\" title=\"可以预下载镜像\"></a>可以预下载镜像</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubeadm config images pull --config kubeadm-init.<span class=\"property\">yaml</span></span><br><span class=\"line\">[root@jjh1 ~]# docker image ls</span><br><span class=\"line\"><span class=\"variable constant_\">REPOSITORY</span>                                                                    <span class=\"variable constant_\">TAG</span>        <span class=\"variable constant_\">IMAGE</span> <span class=\"variable constant_\">ID</span>       <span class=\"variable constant_\">CREATED</span>         <span class=\"variable constant_\">SIZE</span></span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-proxy                v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    10cc881966cf   <span class=\"number\">9</span> days ago      118MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-apiserver            v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    ca9843d3b545   <span class=\"number\">9</span> days ago      122MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-controller-manager   v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    b9fa1895dcaa   <span class=\"number\">9</span> days ago      116MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-scheduler            v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    3138b6e3d471   <span class=\"number\">9</span> days ago      <span class=\"number\">46.</span>4MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/etcd                      <span class=\"number\">3.4</span><span class=\"number\">.13</span>-<span class=\"number\">0</span>   0369cf4303ff   <span class=\"number\">3</span> months ago    253MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/coredns                   <span class=\"number\">1.7</span><span class=\"number\">.0</span>      bfe3a36ebd25   <span class=\"number\">6</span> months ago    <span class=\"number\">45.</span>2MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/pause                     <span class=\"number\">3.2</span>        80d28bedfe5d   <span class=\"number\">10</span> months ago   683kB</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化-master-节点\"><a href=\"#初始化-master-节点\" class=\"headerlink\" title=\"初始化 master 节点\"></a>初始化 master 节点</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# systemctl start kubelet</span><br><span class=\"line\">[root@jjh1 ~]# systemctl enable kubelet</span><br><span class=\"line\">[root@jjh1 ~]# kubeadm init --pod-network-cidr=<span class=\"number\">10.244</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">16</span> --image-repository=registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"title class_\">You</span> should now deploy a pod network to the cluster.</span><br><span class=\"line\"><span class=\"title class_\">Run</span> <span class=\"string\">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> <span class=\"keyword\">with</span> one <span class=\"keyword\">of</span> the options listed <span class=\"attr\">at</span>:</span><br><span class=\"line\">  <span class=\"attr\">https</span>:<span class=\"comment\">//kubernetes.io/docs/concepts/cluster-administration/addons/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Then</span> you can join any number <span class=\"keyword\">of</span> worker nodes by running the following on each <span class=\"keyword\">as</span> <span class=\"attr\">root</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span>:<span class=\"number\">6443</span> --token xzdklu.<span class=\"property\">nf4lx1djq61i2kdx</span> \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash <span class=\"attr\">sha256</span>:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce </span><br></pre></td></tr></table></figure>\n//10.244.0.0/16 是 flannel 网络的默认网段</li>\n</ul>\n<p>kubeadm init 主要执行了以下操作：<br>[init]：指定版本进行初始化操作<br>[preflight] ：初始化前的检查和下载所需要的 Docker 镜像文件<br>[kubelet-start] ：生成 kubelet 的配置文件”/var/lib/kubelet/config.yaml”，没有这个文件 kubelet无法启动，所以初始化之前的 kubelet 实际上启动失败。<br>[certificates]：生成 Kubernetes 使用的证书，存放在/etc/kubernetes/pki 目录中。<br>[kubeconfig] ：生成 KubeConfig 文件，存放在/etc/kubernetes 目录中，组件之间通信需要使用对应文件。<br>[control-plane]：使用/etc/kubernetes/manifest 目录下的 YAML 文件，安装 Master 组件。<br>[etcd]：使用/etc/kubernetes/manifest/etcd.yaml 安装 Etcd 服务。<br>[wait-control-plane]：等待 control-plan 部署的 Master 组件启动。<br>[apiclient]：检查 Master 组件服务状态。<br>[uploadconfig]：更新配置<br>[kubelet]：使用 configMap 配置 kubelet。<br>[patchnode]：更新 CNI 信息到 Node 上，通过注释的方式记录。<br>[mark-control-plane]：为当前节点打标签，打了角色 Master，和不可调度标签，这样默认就不会使用 Master 节点来运行 Pod。<br>[bootstrap-token]：生成 token 记录下来，后边使用 kubeadm join 往集群中添加节点时会用到<br>[addons]：安装附加组件 CoreDNS 和 kube-proxy</p>\n<h4 id=\"为-kubectl-准备-Kubeconfig-文件\"><a href=\"#为-kubectl-准备-Kubeconfig-文件\" class=\"headerlink\" title=\"为 kubectl 准备 Kubeconfig 文件\"></a>为 kubectl 准备 Kubeconfig 文件</h4><p>kubectl 默认会在执行的用户家目录下面的.kube 目录下寻找 config 文件。这里是将在初始化时[kubeconfig]步骤生成的 admin.conf 拷到.kube/config</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# mkdir -p $HOME/.<span class=\"property\">kube</span></span><br><span class=\"line\">[root@jjh1 ~]# cp -i /etc/kubernetes/admin.<span class=\"property\">conf</span> $HOME/.<span class=\"property\">kube</span>/config</span><br><span class=\"line\">[root@jjh1 ~]# chown $(id -u):$(id -g) $HOME/.<span class=\"property\">kube</span>/config</span><br></pre></td></tr></table></figure>\n<p>在该配置文件中，记录了 API Server 的访问地址，所以后面直接执行 kubectl 命令就可以正常连接到 API Server 中</p>\n<h4 id=\"验证-master-各组件运行状态\"><a href=\"#验证-master-各组件运行状态\" class=\"headerlink\" title=\"验证 master 各组件运行状态\"></a>验证 master 各组件运行状态</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get cs</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: v1 <span class=\"title class_\">ComponentStatus</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.19</span>+</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>                 <span class=\"variable constant_\">STATUS</span>      <span class=\"variable constant_\">MESSAGE</span>                                                                                       <span class=\"variable constant_\">ERROR</span></span><br><span class=\"line\">scheduler            <span class=\"title class_\">Unhealthy</span>   <span class=\"title class_\">Get</span> <span class=\"string\">&quot;http://127.0.0.1:10251/healthz&quot;</span>: dial tcp <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">10251</span>: <span class=\"attr\">connect</span>: connection refused   </span><br><span class=\"line\">controller-manager   <span class=\"title class_\">Unhealthy</span>   <span class=\"title class_\">Get</span> <span class=\"string\">&quot;http://127.0.0.1:10252/healthz&quot;</span>: dial tcp <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">10252</span>: <span class=\"attr\">connect</span>: connection refused   </span><br><span class=\"line\">etcd-<span class=\"number\">0</span>               <span class=\"title class_\">Healthy</span>     &#123;<span class=\"string\">&quot;health&quot;</span>:<span class=\"string\">&quot;true&quot;</span>&#125;                                       </span><br></pre></td></tr></table></figure>\n<p>出现报错，解决思路：<br>注释掉/etc/kubernetes/manifests下的kube-controller-manager.yaml和kube-scheduler.yaml的- – port=0<br>确认kube-scheduler和kube-controller-manager组件配置是否禁用了非安全端口</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# cd /etc/kubernetes/manifests</span><br><span class=\"line\">[root@jjh1 manifests]# ls</span><br><span class=\"line\">etcd.<span class=\"property\">yaml</span>  kube-apiserver.<span class=\"property\">yaml</span>  kube-controller-manager.<span class=\"property\">yaml</span>  kube-scheduler.<span class=\"property\">yaml</span></span><br><span class=\"line\"># 搜索- – port=<span class=\"number\">0</span>更改为：#- – port=<span class=\"number\">0</span></span><br><span class=\"line\">[root@jjh1 ~]# systemctl restart kubelet</span><br><span class=\"line\"># 重启kubelet</span><br></pre></td></tr></table></figure>\n<p>重新验证一下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get cs</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: v1 <span class=\"title class_\">ComponentStatus</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.19</span>+</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>                 <span class=\"variable constant_\">STATUS</span>    <span class=\"variable constant_\">MESSAGE</span>             <span class=\"variable constant_\">ERROR</span></span><br><span class=\"line\">controller-manager   <span class=\"title class_\">Healthy</span>   ok                  </span><br><span class=\"line\">scheduler            <span class=\"title class_\">Healthy</span>   ok                  </span><br><span class=\"line\">etcd-<span class=\"number\">0</span>               <span class=\"title class_\">Healthy</span>   &#123;<span class=\"string\">&quot;health&quot;</span>:<span class=\"string\">&quot;true&quot;</span>&#125;   </span><br><span class=\"line\">[root@jjh1 ~]#  kubectl get pods -A</span><br><span class=\"line\"><span class=\"variable constant_\">NAMESPACE</span>     <span class=\"variable constant_\">NAME</span>                           <span class=\"variable constant_\">READY</span>   <span class=\"variable constant_\">STATUS</span>    <span class=\"variable constant_\">RESTARTS</span>   <span class=\"variable constant_\">AGE</span></span><br><span class=\"line\">kube-system   coredns-54d67798b7-lfzwm       <span class=\"number\">0</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Pending</span>   <span class=\"number\">0</span>          2m32s</span><br><span class=\"line\">kube-system   coredns-54d67798b7-n2k5n       <span class=\"number\">0</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Pending</span>   <span class=\"number\">0</span>          2m32s</span><br><span class=\"line\">kube-system   etcd-jjh1                      <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          2m47s</span><br><span class=\"line\">kube-system   kube-apiserver-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          2m47s</span><br><span class=\"line\">kube-system   kube-controller-manager-jjh1   <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          56s</span><br><span class=\"line\">kube-system   kube-proxy-k2wwb               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          2m32s</span><br><span class=\"line\">kube-system   kube-scheduler-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          41s</span><br><span class=\"line\">[root@jjh1 ~]# kubectl get nodes</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>   <span class=\"variable constant_\">STATUS</span>     <span class=\"variable constant_\">ROLES</span>                  <span class=\"variable constant_\">AGE</span>     <span class=\"variable constant_\">VERSION</span></span><br><span class=\"line\">jjh1   <span class=\"title class_\">NotReady</span>   control-plane,master   3m41s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-node-节点\"><a href=\"#配置-node-节点\" class=\"headerlink\" title=\"配置 node 节点\"></a>配置 node 节点</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# yum install kubeadm kubectl kubelet ipvsadm -y</span><br><span class=\"line\">[root@jjh2 ~]# kubeadm join <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span>:<span class=\"number\">6443</span> --token xzdklu.<span class=\"property\">nf4lx1djq61i2kdx</span> \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash <span class=\"attr\">sha256</span>:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce </span><br></pre></td></tr></table></figure>\n<p>看见这段话表示成功：<br>This node has joined the cluster:</p>\n<ul>\n<li>Certificate signing request was sent to apiserver and a response was received.</li>\n<li>The Kubelet was informed of the new secure connection details.<br>Run ‘kubectl get nodes’ on the control-plane to see this node join the cluster.<br>回到 master 节点看看 node 信息<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get nodes</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>   <span class=\"variable constant_\">STATUS</span>     <span class=\"variable constant_\">ROLES</span>                  <span class=\"variable constant_\">AGE</span>     <span class=\"variable constant_\">VERSION</span></span><br><span class=\"line\">jjh1   <span class=\"title class_\">NotReady</span>   control-plane,master   5m21s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh2   <span class=\"title class_\">NotReady</span>   &lt;none&gt;                 23s     v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh3   <span class=\"title class_\">NotReady</span>   &lt;none&gt;                 21s     v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"部署网络插件-flannel\"><a href=\"#部署网络插件-flannel\" class=\"headerlink\" title=\"部署网络插件 flannel\"></a>部署网络插件 flannel</h3>Master 节点 NotReady 的原因就是因为没有使用任何的网络插件，此时 Node 和 Master的连接还不正常。目前最流行的 Kubernetes 网络插件有 Flannel、Calico、Canal、Weave 这里选择使用 flannel。<br>在 master 节点上都有执行，执行完成后需要等 flannel 的 pods 运行起来，这需要点时间：<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl apply -f <span class=\"attr\">https</span>:<span class=\"comment\">//raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span><br><span class=\"line\"><span class=\"title class_\">The</span> connection to the server raw.<span class=\"property\">githubusercontent</span>.<span class=\"property\">com</span> was refused - did you specify the right host or port?</span><br></pre></td></tr></table></figure>\n外网无法访问，就直接下到本地安装好了<br>链接： <a href=\"https://pan.baidu.com/s/13NwlWF24TUpDm23uj66V5Q\">https://pan.baidu.com/s/13NwlWF24TUpDm23uj66V5Q</a><br>提取码： here <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# ls</span><br><span class=\"line\">flannel.<span class=\"property\">yaml</span>  kubeadm-init.<span class=\"property\">yaml</span></span><br><span class=\"line\">[root@jjh1 ~]# kubectl apply -f flannel.<span class=\"property\">yaml</span></span><br><span class=\"line\">podsecuritypolicy.<span class=\"property\">policy</span>/psp.<span class=\"property\">flannel</span>.<span class=\"property\">unprivileged</span> created</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1beta1 <span class=\"title class_\">ClusterRole</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.17</span>+, unavailable <span class=\"keyword\">in</span> v1<span class=\"number\">.22</span>+; use rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1 <span class=\"title class_\">ClusterRole</span></span><br><span class=\"line\">clusterrole.<span class=\"property\">rbac</span>.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/flannel created</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1beta1 <span class=\"title class_\">ClusterRoleBinding</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.17</span>+, unavailable <span class=\"keyword\">in</span> v1<span class=\"number\">.22</span>+; use rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1 <span class=\"title class_\">ClusterRoleBinding</span></span><br><span class=\"line\">clusterrolebinding.<span class=\"property\">rbac</span>.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/flannel created</span><br><span class=\"line\">serviceaccount/flannel created</span><br><span class=\"line\">configmap/kube-flannel-cfg created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-amd64 created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-arm64 created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-arm created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-ppc64le created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-s390x created</span><br></pre></td></tr></table></figure>\n现在重新 get 验证一下，看看是否安装成功<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get nodes</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>   <span class=\"variable constant_\">STATUS</span>   <span class=\"variable constant_\">ROLES</span>                  <span class=\"variable constant_\">AGE</span>     <span class=\"variable constant_\">VERSION</span></span><br><span class=\"line\">jjh1    <span class=\"title class_\">Ready</span>    control-plane,master   35m     v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh2   <span class=\"title class_\">Ready</span>    &lt;none&gt;                 7m43s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh3   <span class=\"title class_\">Ready</span>    &lt;none&gt;                 7m44s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh1 ~]# kubectl get pods -n kube-system</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>                           <span class=\"variable constant_\">READY</span>   <span class=\"variable constant_\">STATUS</span>    <span class=\"variable constant_\">RESTARTS</span>   <span class=\"variable constant_\">AGE</span></span><br><span class=\"line\">coredns-54d67798b7-lfzwm       <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m6s</span><br><span class=\"line\">coredns-54d67798b7-n2k5n       <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m6s</span><br><span class=\"line\">etcd-jjh1                      <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m21s</span><br><span class=\"line\">kube-apiserver-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m21s</span><br><span class=\"line\">kube-controller-manager-jjh1   <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          7m30s</span><br><span class=\"line\">kube-flannel-ds-amd64-7x9v6    <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          117s</span><br><span class=\"line\">kube-flannel-ds-amd64-8pxgf    <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          117s</span><br><span class=\"line\">kube-flannel-ds-amd64-jfpxb    <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          117s</span><br><span class=\"line\">kube-proxy-679sb               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          4m24s</span><br><span class=\"line\">kube-proxy-8xm25               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          4m26s</span><br><span class=\"line\">kube-proxy-k2wwb               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m6s</span><br><span class=\"line\">kube-scheduler-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          7m15s</span><br></pre></td></tr></table></figure>\n到此K8S基本安装完成</li>\n</ul>\n","site":{"data":{"bangumis":{"wantWatch":[],"watching":[],"watched":[]},"link":[{"class_name":"BIG-OLD","class_desc":"皆九年之学，论秀，吾不及汝","link_list":[{"name":"Adil","link":"https://adil.com.cn","avatar":"https://adil.com.cn/img/%E5%A4%B4%E5%83%8F.jpg","descr":"生命不死，折腾不止"},{"name":"Akilar","link":"https://akilar.top","avatar":"https://akilar.top/img/siteicon/favicon.png","descr":"欢迎光临糖果屋"},{"name":"Alex","link":"https://alexcld.com","avatar":"https://alexcld.com/img/author.jpg","descr":"children don't lie"}]}]}},"excerpt":"","more":"<h2 id=\"Kubernetes-介绍\"><a href=\"#Kubernetes-介绍\" class=\"headerlink\" title=\"Kubernetes 介绍\"></a>Kubernetes 介绍</h2><h3 id=\"Kubernetes-简介\"><a href=\"#Kubernetes-简介\" class=\"headerlink\" title=\"Kubernetes 简介\"></a>Kubernetes 简介</h3><p>Kubernetes 是 Google 在 2014 年 6 月开源的一个容器集群管理系统，使用 GO 语言开发，Kubernetes 简称 K8S。K8S 是 Google 内部一个叫 Borg 的容器集群管理系统衍生出来的，Borg已经在 Google 大规模生产运行十年之久。<br>K8S 主要用于自动化部署、扩展和管理容器应用，提供了资源调度、部署管理、服务发现、扩容缩容、监控等一整套功能。K8S 的目标是让部署容器化应用简单高效。2015 年 7月，Kubernetes v1.0 版本正式发布，最新版本详见<a href=\"https://kubernetes.io/zh/\">Kubernetes官网</a></p>\n<h3 id=\"Kubernetes-主要功能\"><a href=\"#Kubernetes-主要功能\" class=\"headerlink\" title=\"Kubernetes 主要功能\"></a>Kubernetes 主要功能</h3><ul>\n<li>数据卷<br>Pod 中容器之间共享数据，可以使用数据卷。</li>\n<li>应用程序监控检查<br>容器内服务可能进程阻塞无法处理请求，可以设置监控检查策略保证应用健壮性。</li>\n<li>复制应用程序实例<br>控制器维护着 Pod 副本数量，保证一个 Pod 或一组同类的 Pod 数量始终可用。</li>\n<li>弹性伸缩<br>根据设定的指标（CPU 利用率）自动缩放 Pod 副本数。</li>\n<li>服务发现<br>使用环境变量或 DNS 服务插件保证容器中程序发现 Pod 入库访问地址。</li>\n<li>负载均衡<br>一组 Pod 副本分配一个私有的集群 IP 地址，负载均衡转发请求到后端容器。在集群内部其他 Pod 可以通过这个 cluster IP 访问应用。</li>\n<li>滚动更新<br>更新服务不中断，一次更新一个 Pod，而不是同时删除整个服务。类似于灰度发布。</li>\n<li>服务编排<br>通过文件描述部署服务，使得应用程序部署变得更高效。</li>\n<li>资源监控<br>node 节点组件集成 cAdvisor 资源收集工具，可通过 Heapster 汇总整个集群节点资源数据，然后存储到 InfluxDB 时序数据库，再由Grafana 展示。、</li>\n<li>提供认证和授权<br>支持角色访问控制（RBAC 基于角色的权限访问控制 Role-Based Access Control）认证授权等策略。<h3 id=\"基本对象概念\"><a href=\"#基本对象概念\" class=\"headerlink\" title=\"基本对象概念\"></a>基本对象概念</h3></li>\n<li>Pod<br>Pod 是最小部署单元，一个 Pod 由一个或多个容器组成，Pod 中容器共享存储和网络，<br>在同一台 docker 主机上运行。</li>\n<li>Service<br>Service 是一个应用服务抽象，定义了 Pod 逻辑集合和访问这个 Pod 集合的策略。<br>Service 代理 Pod 集合对外表现是为一个访问入口，分配一个集群 IP 地址，来自这个 IP的请求将负载均衡转发后端 Pod 中的容器。<br>Service 通过 Label Selector 选择一组 Pod 提供服务。</li>\n<li>Volume<br>数据卷，共享 Pod 中容器使用的数据。</li>\n<li>Namespace<br>命名空间将对象逻辑上分配到不同 namespace，可以是不同的项目、用户等区分管理，并设定控制策略，从而实现多租户。<br>命名空间也成为虚拟集群。</li>\n<li>Label<br>标签用户区分对象（如 Pod、Service），键/值对存在；每个对象可以有多个标签，通过标签关联对象。</li>\n<li>ReplicaSet（RS）<br>下一代 Replication Controller（RC）。确保任何给定时间制定的 Pod 副本数量，并提供声明式更新等功能。<br>RC 与 RS 唯一区别就是 label selector 支持不同，RS 支持新的基于集合的标签，RC 仅支持基于等式的标签。推荐使用 RS，后面 RC 将可能被淘汰。</li>\n<li>Deployment<br>Deployment 是一个更高层的 API 对象，它管理 ReplicaSets，意味着可能永远都不需要直接操作 RS 对象。</li>\n<li>StatefulSet<br>StatefulSet 适合持久性的应用程序，有唯一的网络标志符（IP），持久存储，有序的部署、扩展、删除和滚动更新。</li>\n<li>DaemonSet<br>DaemonSet 确保所有（或一些）节点运行同一个 Pod，当节点加入 Kubernetes 集群中，Pod 会被调度到该节点上运行，当节点从集群中移除时，DaemonSet 的 Pod 会被删除。删除DaemonSet 会清理它所有创建的 Pod。例如监控服务，可以使用 DaemonSet 对象管理。</li>\n<li>Job<br>一次性任务，运行完成后 Pod 销毁，不再重新启动新容器。还可以任务定时运行。<h3 id=\"系统架构及组件功能\"><a href=\"#系统架构及组件功能\" class=\"headerlink\" title=\"系统架构及组件功能\"></a>系统架构及组件功能</h3><h4 id=\"Master-组件：\"><a href=\"#Master-组件：\" class=\"headerlink\" title=\"Master 组件：\"></a>Master 组件：</h4></li>\n<li>kube-apiserver<br>Kubernetes API，集群的统一入口，各组件协调者，以 HTTP API 提供接口服务，所有对象资源的增删改查和监听操作都交给 APIServer 处理后再提交给 Etcd 存储。</li>\n<li>kube-controller-manager<br>处理集群中常规后台任务，一个资源对应一个控制器，而 ControllerManager 就是负责管理这些控制器的。</li>\n<li>kube-scheduler<br>根据调度算法为新创建的 Pod 选择一个 Node 节点。<h4 id=\"Node-组件：\"><a href=\"#Node-组件：\" class=\"headerlink\" title=\"Node 组件：\"></a>Node 组件：</h4></li>\n<li>kubelet<br>kubelet 是 Master 在 Node 节点上的 Agent，管理本机运行容器的生命周期，比如创建容器、Pod 挂载数据卷、下载 secret、获取容器和节点状态等工作。kubelet 将每个 Pod 转换成一组容器。</li>\n<li>kube-proxy<br>在 Node 节点上实现 Pod 网络代理，维护网络规则和四层负载均衡工作，代理 iptables做防火墙策略。</li>\n<li>docker 或 rocket/rkt<br>运行容器。<h4 id=\"第三方服务：\"><a href=\"#第三方服务：\" class=\"headerlink\" title=\"第三方服务：\"></a>第三方服务：</h4></li>\n<li>etcd<br>分布式键值存储系统，负责集群的持久化。<br>用于保持集群状态，比如 Pod、Service 等对象信息。<h2 id=\"使用-kubeadm-部署-kubenetes-集群\"><a href=\"#使用-kubeadm-部署-kubenetes-集群\" class=\"headerlink\" title=\"使用 kubeadm 部署 kubenetes 集群\"></a>使用 kubeadm 部署 kubenetes 集群</h2><h3 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# cat /etc/hosts</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span> jjh1</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.42</span> jjh2 </span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.43</span> jjh3</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装-docker\"><a href=\"#安装-docker\" class=\"headerlink\" title=\"安装 docker\"></a>安装 docker</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# yum -y install yum-utils device-mapper-persistent-data lvm2</span><br><span class=\"line\">[root@jjh ~]# yum-config-manager --add-repo <span class=\"attr\">https</span>:<span class=\"comment\">//download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class=\"line\">[root@jjh ~]# yum -y install docker-ce</span><br><span class=\"line\">[root@jjh ~]# systemctl start docker</span><br><span class=\"line\">[root@jjh ~]# systemctl enable docker</span><br></pre></td></tr></table></figure>\n将 docker 的镜像仓库改为国内的<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/docker/daemon.<span class=\"property\">json</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"string\">&quot;registry-mirrors&quot;</span>: [<span class=\"string\">&quot;https://registry.docker-cn.com&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[root@jjh ~]# systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h4 id=\"关闭-swap\"><a href=\"#关闭-swap\" class=\"headerlink\" title=\"关闭 swap\"></a>关闭 swap</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# swapoff -a</span><br><span class=\"line\">[root@jjh ~]# echo <span class=\"string\">&quot;/usr/sbin/swapoff -a&quot;</span> &gt;&gt; <span class=\"regexp\">/etc/</span>rc.<span class=\"property\">local</span></span><br><span class=\"line\">[root@jjh ~]# chmod +x /etc/rc.<span class=\"property\">local</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"配置内核参数\"><a href=\"#配置内核参数\" class=\"headerlink\" title=\"配置内核参数\"></a>配置内核参数</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/sysctl.<span class=\"property\">d</span>/k8s.<span class=\"property\">conf</span></span><br><span class=\"line\">net.<span class=\"property\">bridge</span>.<span class=\"property\">bridge</span>-nf-call-ip6tables = <span class=\"number\">1</span></span><br><span class=\"line\">net.<span class=\"property\">bridge</span>.<span class=\"property\">bridge</span>-nf-call-iptables = <span class=\"number\">1</span></span><br><span class=\"line\">net.<span class=\"property\">ipv4</span>.<span class=\"property\">ip_nonlocal_bind</span> = <span class=\"number\">1</span></span><br><span class=\"line\">net.<span class=\"property\">ipv4</span>.<span class=\"property\">ip_forward</span> = <span class=\"number\">1</span></span><br><span class=\"line\">vm.<span class=\"property\">swappiness</span>=<span class=\"number\">0</span></span><br><span class=\"line\">[root@jjh ~]# sysctl --system</span><br></pre></td></tr></table></figure>\n<h4 id=\"加载必要的内核模块\"><a href=\"#加载必要的内核模块\" class=\"headerlink\" title=\"加载必要的内核模块\"></a>加载必要的内核模块</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/sysconfig/modules/ipvs.<span class=\"property\">modules</span></span><br><span class=\"line\">#!<span class=\"regexp\">/bin/</span>bash</span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- nf_conntrack_ipv4</span><br><span class=\"line\">[root@jjh ~]# chmod +x /etc/sysconfig/modules/ipvs.<span class=\"property\">modules</span> </span><br><span class=\"line\">[root@jjh ~]# /etc/sysconfig/modules/ipvs.<span class=\"property\">modules</span></span><br></pre></td></tr></table></figure>\n由于我们无法访问 kubeadm 官网上提供的源，所以选择阿里的镜像站<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh ~]# vim /etc/yum.<span class=\"property\">repos</span>.<span class=\"property\">d</span>/kubernetes.<span class=\"property\">repo</span></span><br><span class=\"line\">[kubernetes]</span><br><span class=\"line\">name=<span class=\"title class_\">Kubernetes</span></span><br><span class=\"line\">baseurl=<span class=\"attr\">https</span>:<span class=\"comment\">//mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class=\"line\">enabled=<span class=\"number\">1</span></span><br><span class=\"line\">gpgcheck=<span class=\"number\">1</span></span><br><span class=\"line\">repo_gpgcheck=<span class=\"number\">1</span></span><br><span class=\"line\">gpgkey=<span class=\"attr\">https</span>:<span class=\"comment\">//mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-master-节点\"><a href=\"#配置-master-节点\" class=\"headerlink\" title=\"配置 master 节点\"></a>配置 master 节点</h3><h4 id=\"安装所需软件包\"><a href=\"#安装所需软件包\" class=\"headerlink\" title=\"安装所需软件包\"></a>安装所需软件包</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# yum install kubeadm kubectl kubelet ipvsadm -y</span><br></pre></td></tr></table></figure>\n使用 kubeadm config print init-defaults &gt; kubeadm-init.yaml 打印出默认配置，然后在根据自己的环境修改配置，尤其是镜像，在国外，默认的下不下来<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubeadm config print init-defaults &gt; kubeadm-init.<span class=\"property\">yaml</span></span><br><span class=\"line\">[root@jjh1 ~]# vim kubeadm-init.<span class=\"property\">yaml</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">bootstrapTokens:</span><br><span class=\"line\">- groups:</span><br><span class=\"line\">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class=\"line\">  token: abcdef.0123456789abcdef</span><br><span class=\"line\">  ttl: 24h0m0s</span><br><span class=\"line\">  usages:</span><br><span class=\"line\">  - signing</span><br><span class=\"line\">  - authentication</span><br><span class=\"line\">kind: InitConfiguration</span><br><span class=\"line\">localAPIEndpoint:</span><br><span class=\"line\">  advertiseAddress: 192.168.0.36 ## master内网IP</span><br><span class=\"line\">  bindPort: 6443</span><br><span class=\"line\">nodeRegistration:</span><br><span class=\"line\">  criSocket: /var/run/dockershim.sock</span><br><span class=\"line\">  name: jjh1</span><br><span class=\"line\">  taints:</span><br><span class=\"line\">  - effect: NoSchedule</span><br><span class=\"line\">    key: node-role.kubernetes.io/master</span><br><span class=\"line\">---</span><br><span class=\"line\">apiServer:</span><br><span class=\"line\">  timeoutForControlPlane: 4m0s</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">certificatesDir: /etc/kubernetes/pki</span><br><span class=\"line\">clusterName: kubernetes</span><br><span class=\"line\">controllerManager: &#123;&#125;</span><br><span class=\"line\">dns:</span><br><span class=\"line\">  type: CoreDNS</span><br><span class=\"line\">etcd:</span><br><span class=\"line\">  local:</span><br><span class=\"line\">    dataDir: /var/lib/etcd</span><br><span class=\"line\">imageRepository:  registry.cn-hangzhou.aliyuncs.com/google_containers ## 更改</span><br><span class=\"line\">kind: ClusterConfiguration</span><br><span class=\"line\">kubernetesVersion: v1.20.0</span><br><span class=\"line\">networking:</span><br><span class=\"line\">  dnsDomain: cluster.local</span><br><span class=\"line\">  serviceSubnet: 10.96.0.0/12</span><br><span class=\"line\">scheduler: &#123;&#125;</span><br><span class=\"line\">---                                 </span><br><span class=\"line\">apiVersion: kubeproxy.config.k8s.io/v1alpha1   ## 添加</span><br><span class=\"line\">kind: KubeProxyConfiguration</span><br><span class=\"line\">mode: &quot;ipvs&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"可以预下载镜像\"><a href=\"#可以预下载镜像\" class=\"headerlink\" title=\"可以预下载镜像\"></a>可以预下载镜像</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubeadm config images pull --config kubeadm-init.<span class=\"property\">yaml</span></span><br><span class=\"line\">[root@jjh1 ~]# docker image ls</span><br><span class=\"line\"><span class=\"variable constant_\">REPOSITORY</span>                                                                    <span class=\"variable constant_\">TAG</span>        <span class=\"variable constant_\">IMAGE</span> <span class=\"variable constant_\">ID</span>       <span class=\"variable constant_\">CREATED</span>         <span class=\"variable constant_\">SIZE</span></span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-proxy                v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    10cc881966cf   <span class=\"number\">9</span> days ago      118MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-apiserver            v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    ca9843d3b545   <span class=\"number\">9</span> days ago      122MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-controller-manager   v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    b9fa1895dcaa   <span class=\"number\">9</span> days ago      116MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/kube-scheduler            v1<span class=\"number\">.20</span><span class=\"number\">.0</span>    3138b6e3d471   <span class=\"number\">9</span> days ago      <span class=\"number\">46.</span>4MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/etcd                      <span class=\"number\">3.4</span><span class=\"number\">.13</span>-<span class=\"number\">0</span>   0369cf4303ff   <span class=\"number\">3</span> months ago    253MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/coredns                   <span class=\"number\">1.7</span><span class=\"number\">.0</span>      bfe3a36ebd25   <span class=\"number\">6</span> months ago    <span class=\"number\">45.</span>2MB</span><br><span class=\"line\">registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers/pause                     <span class=\"number\">3.2</span>        80d28bedfe5d   <span class=\"number\">10</span> months ago   683kB</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化-master-节点\"><a href=\"#初始化-master-节点\" class=\"headerlink\" title=\"初始化 master 节点\"></a>初始化 master 节点</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# systemctl start kubelet</span><br><span class=\"line\">[root@jjh1 ~]# systemctl enable kubelet</span><br><span class=\"line\">[root@jjh1 ~]# kubeadm init --pod-network-cidr=<span class=\"number\">10.244</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">16</span> --image-repository=registry.<span class=\"property\">cn</span>-hangzhou.<span class=\"property\">aliyuncs</span>.<span class=\"property\">com</span>/google_containers</span><br><span class=\"line\">......</span><br><span class=\"line\"><span class=\"title class_\">You</span> should now deploy a pod network to the cluster.</span><br><span class=\"line\"><span class=\"title class_\">Run</span> <span class=\"string\">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> <span class=\"keyword\">with</span> one <span class=\"keyword\">of</span> the options listed <span class=\"attr\">at</span>:</span><br><span class=\"line\">  <span class=\"attr\">https</span>:<span class=\"comment\">//kubernetes.io/docs/concepts/cluster-administration/addons/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Then</span> you can join any number <span class=\"keyword\">of</span> worker nodes by running the following on each <span class=\"keyword\">as</span> <span class=\"attr\">root</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span>:<span class=\"number\">6443</span> --token xzdklu.<span class=\"property\">nf4lx1djq61i2kdx</span> \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash <span class=\"attr\">sha256</span>:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce </span><br></pre></td></tr></table></figure>\n//10.244.0.0/16 是 flannel 网络的默认网段</li>\n</ul>\n<p>kubeadm init 主要执行了以下操作：<br>[init]：指定版本进行初始化操作<br>[preflight] ：初始化前的检查和下载所需要的 Docker 镜像文件<br>[kubelet-start] ：生成 kubelet 的配置文件”/var/lib/kubelet/config.yaml”，没有这个文件 kubelet无法启动，所以初始化之前的 kubelet 实际上启动失败。<br>[certificates]：生成 Kubernetes 使用的证书，存放在/etc/kubernetes/pki 目录中。<br>[kubeconfig] ：生成 KubeConfig 文件，存放在/etc/kubernetes 目录中，组件之间通信需要使用对应文件。<br>[control-plane]：使用/etc/kubernetes/manifest 目录下的 YAML 文件，安装 Master 组件。<br>[etcd]：使用/etc/kubernetes/manifest/etcd.yaml 安装 Etcd 服务。<br>[wait-control-plane]：等待 control-plan 部署的 Master 组件启动。<br>[apiclient]：检查 Master 组件服务状态。<br>[uploadconfig]：更新配置<br>[kubelet]：使用 configMap 配置 kubelet。<br>[patchnode]：更新 CNI 信息到 Node 上，通过注释的方式记录。<br>[mark-control-plane]：为当前节点打标签，打了角色 Master，和不可调度标签，这样默认就不会使用 Master 节点来运行 Pod。<br>[bootstrap-token]：生成 token 记录下来，后边使用 kubeadm join 往集群中添加节点时会用到<br>[addons]：安装附加组件 CoreDNS 和 kube-proxy</p>\n<h4 id=\"为-kubectl-准备-Kubeconfig-文件\"><a href=\"#为-kubectl-准备-Kubeconfig-文件\" class=\"headerlink\" title=\"为 kubectl 准备 Kubeconfig 文件\"></a>为 kubectl 准备 Kubeconfig 文件</h4><p>kubectl 默认会在执行的用户家目录下面的.kube 目录下寻找 config 文件。这里是将在初始化时[kubeconfig]步骤生成的 admin.conf 拷到.kube/config</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# mkdir -p $HOME/.<span class=\"property\">kube</span></span><br><span class=\"line\">[root@jjh1 ~]# cp -i /etc/kubernetes/admin.<span class=\"property\">conf</span> $HOME/.<span class=\"property\">kube</span>/config</span><br><span class=\"line\">[root@jjh1 ~]# chown $(id -u):$(id -g) $HOME/.<span class=\"property\">kube</span>/config</span><br></pre></td></tr></table></figure>\n<p>在该配置文件中，记录了 API Server 的访问地址，所以后面直接执行 kubectl 命令就可以正常连接到 API Server 中</p>\n<h4 id=\"验证-master-各组件运行状态\"><a href=\"#验证-master-各组件运行状态\" class=\"headerlink\" title=\"验证 master 各组件运行状态\"></a>验证 master 各组件运行状态</h4><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get cs</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: v1 <span class=\"title class_\">ComponentStatus</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.19</span>+</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>                 <span class=\"variable constant_\">STATUS</span>      <span class=\"variable constant_\">MESSAGE</span>                                                                                       <span class=\"variable constant_\">ERROR</span></span><br><span class=\"line\">scheduler            <span class=\"title class_\">Unhealthy</span>   <span class=\"title class_\">Get</span> <span class=\"string\">&quot;http://127.0.0.1:10251/healthz&quot;</span>: dial tcp <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">10251</span>: <span class=\"attr\">connect</span>: connection refused   </span><br><span class=\"line\">controller-manager   <span class=\"title class_\">Unhealthy</span>   <span class=\"title class_\">Get</span> <span class=\"string\">&quot;http://127.0.0.1:10252/healthz&quot;</span>: dial tcp <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">10252</span>: <span class=\"attr\">connect</span>: connection refused   </span><br><span class=\"line\">etcd-<span class=\"number\">0</span>               <span class=\"title class_\">Healthy</span>     &#123;<span class=\"string\">&quot;health&quot;</span>:<span class=\"string\">&quot;true&quot;</span>&#125;                                       </span><br></pre></td></tr></table></figure>\n<p>出现报错，解决思路：<br>注释掉/etc/kubernetes/manifests下的kube-controller-manager.yaml和kube-scheduler.yaml的- – port=0<br>确认kube-scheduler和kube-controller-manager组件配置是否禁用了非安全端口</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# cd /etc/kubernetes/manifests</span><br><span class=\"line\">[root@jjh1 manifests]# ls</span><br><span class=\"line\">etcd.<span class=\"property\">yaml</span>  kube-apiserver.<span class=\"property\">yaml</span>  kube-controller-manager.<span class=\"property\">yaml</span>  kube-scheduler.<span class=\"property\">yaml</span></span><br><span class=\"line\"># 搜索- – port=<span class=\"number\">0</span>更改为：#- – port=<span class=\"number\">0</span></span><br><span class=\"line\">[root@jjh1 ~]# systemctl restart kubelet</span><br><span class=\"line\"># 重启kubelet</span><br></pre></td></tr></table></figure>\n<p>重新验证一下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get cs</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: v1 <span class=\"title class_\">ComponentStatus</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.19</span>+</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>                 <span class=\"variable constant_\">STATUS</span>    <span class=\"variable constant_\">MESSAGE</span>             <span class=\"variable constant_\">ERROR</span></span><br><span class=\"line\">controller-manager   <span class=\"title class_\">Healthy</span>   ok                  </span><br><span class=\"line\">scheduler            <span class=\"title class_\">Healthy</span>   ok                  </span><br><span class=\"line\">etcd-<span class=\"number\">0</span>               <span class=\"title class_\">Healthy</span>   &#123;<span class=\"string\">&quot;health&quot;</span>:<span class=\"string\">&quot;true&quot;</span>&#125;   </span><br><span class=\"line\">[root@jjh1 ~]#  kubectl get pods -A</span><br><span class=\"line\"><span class=\"variable constant_\">NAMESPACE</span>     <span class=\"variable constant_\">NAME</span>                           <span class=\"variable constant_\">READY</span>   <span class=\"variable constant_\">STATUS</span>    <span class=\"variable constant_\">RESTARTS</span>   <span class=\"variable constant_\">AGE</span></span><br><span class=\"line\">kube-system   coredns-54d67798b7-lfzwm       <span class=\"number\">0</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Pending</span>   <span class=\"number\">0</span>          2m32s</span><br><span class=\"line\">kube-system   coredns-54d67798b7-n2k5n       <span class=\"number\">0</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Pending</span>   <span class=\"number\">0</span>          2m32s</span><br><span class=\"line\">kube-system   etcd-jjh1                      <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          2m47s</span><br><span class=\"line\">kube-system   kube-apiserver-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          2m47s</span><br><span class=\"line\">kube-system   kube-controller-manager-jjh1   <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          56s</span><br><span class=\"line\">kube-system   kube-proxy-k2wwb               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          2m32s</span><br><span class=\"line\">kube-system   kube-scheduler-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          41s</span><br><span class=\"line\">[root@jjh1 ~]# kubectl get nodes</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>   <span class=\"variable constant_\">STATUS</span>     <span class=\"variable constant_\">ROLES</span>                  <span class=\"variable constant_\">AGE</span>     <span class=\"variable constant_\">VERSION</span></span><br><span class=\"line\">jjh1   <span class=\"title class_\">NotReady</span>   control-plane,master   3m41s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-node-节点\"><a href=\"#配置-node-节点\" class=\"headerlink\" title=\"配置 node 节点\"></a>配置 node 节点</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh2 ~]# yum install kubeadm kubectl kubelet ipvsadm -y</span><br><span class=\"line\">[root@jjh2 ~]# kubeadm join <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.36</span>:<span class=\"number\">6443</span> --token xzdklu.<span class=\"property\">nf4lx1djq61i2kdx</span> \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash <span class=\"attr\">sha256</span>:9cc9686dda3a41b283c7182fd13df1eb98992e5d74a7c7ac03bd25b0d63f90ce </span><br></pre></td></tr></table></figure>\n<p>看见这段话表示成功：<br>This node has joined the cluster:</p>\n<ul>\n<li>Certificate signing request was sent to apiserver and a response was received.</li>\n<li>The Kubelet was informed of the new secure connection details.<br>Run ‘kubectl get nodes’ on the control-plane to see this node join the cluster.<br>回到 master 节点看看 node 信息<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get nodes</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>   <span class=\"variable constant_\">STATUS</span>     <span class=\"variable constant_\">ROLES</span>                  <span class=\"variable constant_\">AGE</span>     <span class=\"variable constant_\">VERSION</span></span><br><span class=\"line\">jjh1   <span class=\"title class_\">NotReady</span>   control-plane,master   5m21s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh2   <span class=\"title class_\">NotReady</span>   &lt;none&gt;                 23s     v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh3   <span class=\"title class_\">NotReady</span>   &lt;none&gt;                 21s     v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"部署网络插件-flannel\"><a href=\"#部署网络插件-flannel\" class=\"headerlink\" title=\"部署网络插件 flannel\"></a>部署网络插件 flannel</h3>Master 节点 NotReady 的原因就是因为没有使用任何的网络插件，此时 Node 和 Master的连接还不正常。目前最流行的 Kubernetes 网络插件有 Flannel、Calico、Canal、Weave 这里选择使用 flannel。<br>在 master 节点上都有执行，执行完成后需要等 flannel 的 pods 运行起来，这需要点时间：<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl apply -f <span class=\"attr\">https</span>:<span class=\"comment\">//raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span><br><span class=\"line\"><span class=\"title class_\">The</span> connection to the server raw.<span class=\"property\">githubusercontent</span>.<span class=\"property\">com</span> was refused - did you specify the right host or port?</span><br></pre></td></tr></table></figure>\n外网无法访问，就直接下到本地安装好了<br>链接： <a href=\"https://pan.baidu.com/s/13NwlWF24TUpDm23uj66V5Q\">https://pan.baidu.com/s/13NwlWF24TUpDm23uj66V5Q</a><br>提取码： here <figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# ls</span><br><span class=\"line\">flannel.<span class=\"property\">yaml</span>  kubeadm-init.<span class=\"property\">yaml</span></span><br><span class=\"line\">[root@jjh1 ~]# kubectl apply -f flannel.<span class=\"property\">yaml</span></span><br><span class=\"line\">podsecuritypolicy.<span class=\"property\">policy</span>/psp.<span class=\"property\">flannel</span>.<span class=\"property\">unprivileged</span> created</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1beta1 <span class=\"title class_\">ClusterRole</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.17</span>+, unavailable <span class=\"keyword\">in</span> v1<span class=\"number\">.22</span>+; use rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1 <span class=\"title class_\">ClusterRole</span></span><br><span class=\"line\">clusterrole.<span class=\"property\">rbac</span>.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/flannel created</span><br><span class=\"line\"><span class=\"title class_\">Warning</span>: rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1beta1 <span class=\"title class_\">ClusterRoleBinding</span> is deprecated <span class=\"keyword\">in</span> v1<span class=\"number\">.17</span>+, unavailable <span class=\"keyword\">in</span> v1<span class=\"number\">.22</span>+; use rbac.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/v1 <span class=\"title class_\">ClusterRoleBinding</span></span><br><span class=\"line\">clusterrolebinding.<span class=\"property\">rbac</span>.<span class=\"property\">authorization</span>.<span class=\"property\">k8s</span>.<span class=\"property\">io</span>/flannel created</span><br><span class=\"line\">serviceaccount/flannel created</span><br><span class=\"line\">configmap/kube-flannel-cfg created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-amd64 created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-arm64 created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-arm created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-ppc64le created</span><br><span class=\"line\">daemonset.<span class=\"property\">apps</span>/kube-flannel-ds-s390x created</span><br></pre></td></tr></table></figure>\n现在重新 get 验证一下，看看是否安装成功<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">[root@jjh1 ~]# kubectl get nodes</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>   <span class=\"variable constant_\">STATUS</span>   <span class=\"variable constant_\">ROLES</span>                  <span class=\"variable constant_\">AGE</span>     <span class=\"variable constant_\">VERSION</span></span><br><span class=\"line\">jjh1    <span class=\"title class_\">Ready</span>    control-plane,master   35m     v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh2   <span class=\"title class_\">Ready</span>    &lt;none&gt;                 7m43s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">jjh3   <span class=\"title class_\">Ready</span>    &lt;none&gt;                 7m44s   v1<span class=\"number\">.20</span><span class=\"number\">.0</span></span><br><span class=\"line\">[root@jjh1 ~]# kubectl get pods -n kube-system</span><br><span class=\"line\"><span class=\"variable constant_\">NAME</span>                           <span class=\"variable constant_\">READY</span>   <span class=\"variable constant_\">STATUS</span>    <span class=\"variable constant_\">RESTARTS</span>   <span class=\"variable constant_\">AGE</span></span><br><span class=\"line\">coredns-54d67798b7-lfzwm       <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m6s</span><br><span class=\"line\">coredns-54d67798b7-n2k5n       <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m6s</span><br><span class=\"line\">etcd-jjh1                      <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m21s</span><br><span class=\"line\">kube-apiserver-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m21s</span><br><span class=\"line\">kube-controller-manager-jjh1   <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          7m30s</span><br><span class=\"line\">kube-flannel-ds-amd64-7x9v6    <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          117s</span><br><span class=\"line\">kube-flannel-ds-amd64-8pxgf    <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          117s</span><br><span class=\"line\">kube-flannel-ds-amd64-jfpxb    <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          117s</span><br><span class=\"line\">kube-proxy-679sb               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          4m24s</span><br><span class=\"line\">kube-proxy-8xm25               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          4m26s</span><br><span class=\"line\">kube-proxy-k2wwb               <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          9m6s</span><br><span class=\"line\">kube-scheduler-jjh1            <span class=\"number\">1</span>/<span class=\"number\">1</span>     <span class=\"title class_\">Running</span>   <span class=\"number\">0</span>          7m15s</span><br></pre></td></tr></table></figure>\n到此K8S基本安装完成</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clb99avet0001tobv65zq977x","category_id":"clb99avew0004tobv41fg1zqf","_id":"clb99avf4000itobvdvntbwqe"},{"post_id":"clb99avev0003tobv80l2hvhc","category_id":"clb99avf1000ctobv2bwf1vvq","_id":"clb99avf7000otobv91fc14nh"},{"post_id":"clb99avf3000htobvcf083gm3","category_id":"clb99avew0004tobv41fg1zqf","_id":"clb99avf9000rtobvfrtr9gln"},{"post_id":"clb99avf5000ltobvb0h2bg4m","category_id":"clb99avew0004tobv41fg1zqf","_id":"clb99avfa000utobvei6q4pes"},{"post_id":"clb99avey0007tobv2lpm1f4e","category_id":"clb99avew0004tobv41fg1zqf","_id":"clb99avfb000xtobvbm39ejmi"},{"post_id":"clb99avf7000qtobv10td0uqb","category_id":"clb99avew0004tobv41fg1zqf","_id":"clb99avfc0010tobv89zzhzyb"},{"post_id":"clb99avez0009tobvg5lkcvix","category_id":"clb99avf1000ctobv2bwf1vvq","_id":"clb99avfd0015tobvc426dtxg"},{"post_id":"clb99avf0000btobvg7a1alam","category_id":"clb99avfa000ttobv57mbeci3","_id":"clb99avfe0018tobv78ob912d"},{"post_id":"clb99avf2000gtobv3d0t62dc","category_id":"clb99avfc0011tobv9d0e13mg","_id":"clb99avfg001dtobv3toze1ja"},{"post_id":"clb99avf6000mtobv18te0pvp","category_id":"clb99avfe0019tobv4aaoh8wf","_id":"clb99avfh001htobvc31m5fov"},{"post_id":"clb99avf9000stobvalkf1l62","category_id":"clb99avfg001etobv65hk9mpz","_id":"clb99avfh001ltobvfbrofxo1"},{"post_id":"clb99avfa000wtobv18tmetl4","category_id":"clb99avfh001itobvfbvb0qda","_id":"clb99avfj001rtobv2m80c9ac"},{"post_id":"clb99avfc000ztobvbgay1uhf","category_id":"clb99avfe0019tobv4aaoh8wf","_id":"clb99avfk001utobv28fqay8l"},{"post_id":"clb99avfd0013tobv2s5uhclm","category_id":"clb99avfg001etobv65hk9mpz","_id":"clb99avfk001xtobvcm6043yi"},{"post_id":"clb99avfd0017tobv47hj8ixr","category_id":"clb99avfk001ttobv3bib06he","_id":"clb99avfl0022tobv2vo3aa6o"},{"post_id":"clb99avfe001atobv60mz1bmy","category_id":"clb99avfk001ytobvho0ngs5i","_id":"clb99avfl0025tobv5b864yin"},{"post_id":"clb99avfx002ltobv04iu53ml","category_id":"clb99avfy002mtobvfqw817u9","_id":"clb99avfz002ptobva4vr3slh"}],"PostTag":[{"post_id":"clb99avet0001tobv65zq977x","tag_id":"clb99avex0005tobvaewk5t26","_id":"clb99avf2000etobv5h9j1vi2"},{"post_id":"clb99avev0003tobv80l2hvhc","tag_id":"clb99avf1000dtobv5wwa79ku","_id":"clb99avfb000ytobvf892huma"},{"post_id":"clb99avev0003tobv80l2hvhc","tag_id":"clb99avf4000ktobv77cl6ib0","_id":"clb99avfc0012tobv5aev4ido"},{"post_id":"clb99avev0003tobv80l2hvhc","tag_id":"clb99avf7000ptobvh7u0fubd","_id":"clb99avfd0016tobv7o68ehwx"},{"post_id":"clb99avey0007tobv2lpm1f4e","tag_id":"clb99avfa000vtobvgp501jq6","_id":"clb99avfg001ctobvhg0984mh"},{"post_id":"clb99avey0007tobv2lpm1f4e","tag_id":"clb99avfd0014tobvexty04vp","_id":"clb99avfg001ftobv916th0bt"},{"post_id":"clb99avez0009tobvg5lkcvix","tag_id":"clb99avff001btobvakj2e9vw","_id":"clb99avfh001ktobvgammdemd"},{"post_id":"clb99avez0009tobvg5lkcvix","tag_id":"clb99avfg001gtobv1nqq5t3l","_id":"clb99avfi001ntobv1twb5goo"},{"post_id":"clb99avf0000btobvg7a1alam","tag_id":"clb99avfh001jtobv0dff9mei","_id":"clb99avfj001ptobvgj6hcm45"},{"post_id":"clb99avf2000gtobv3d0t62dc","tag_id":"clb99avfi001otobv3ly5d57w","_id":"clb99avfk001wtobvdnkdbm2z"},{"post_id":"clb99avf2000gtobv3d0t62dc","tag_id":"clb99avfj001stobvc0m5h09s","_id":"clb99avfk001ztobvf9t97ujs"},{"post_id":"clb99avf3000htobvcf083gm3","tag_id":"clb99avfd0014tobvexty04vp","_id":"clb99avfl0021tobv4b120mnv"},{"post_id":"clb99avf5000ltobvb0h2bg4m","tag_id":"clb99avfd0014tobvexty04vp","_id":"clb99avfl0024tobvdkqj6p0t"},{"post_id":"clb99avf6000mtobv18te0pvp","tag_id":"clb99avfj001stobvc0m5h09s","_id":"clb99avfm0027tobv2lcb0xr7"},{"post_id":"clb99avf7000qtobv10td0uqb","tag_id":"clb99avfl0026tobvggck2bce","_id":"clb99avfm0029tobv215s59ng"},{"post_id":"clb99avf9000stobvalkf1l62","tag_id":"clb99avfm0028tobvfo2ug3zh","_id":"clb99avfm002btobv8xfe4209"},{"post_id":"clb99avfa000wtobv18tmetl4","tag_id":"clb99avfm002atobv892w1wsf","_id":"clb99avfn002dtobv81aqhf7d"},{"post_id":"clb99avfc000ztobvbgay1uhf","tag_id":"clb99avfm002ctobver775aze","_id":"clb99avfn002ftobv571o32wt"},{"post_id":"clb99avfd0013tobv2s5uhclm","tag_id":"clb99avfn002etobv49aj8ib6","_id":"clb99avfn002htobvavry6vzw"},{"post_id":"clb99avfd0017tobv47hj8ixr","tag_id":"clb99avfn002gtobv49xb6nwt","_id":"clb99avfp002jtobv396w3m7r"},{"post_id":"clb99avfe001atobv60mz1bmy","tag_id":"clb99avfp002itobv3aee1wex","_id":"clb99avfq002ktobvf44h0ksp"},{"post_id":"clb99avfx002ltobv04iu53ml","tag_id":"clb99avfy002ntobvferj5obb","_id":"clb99avfz002otobvficp9pnv"}],"Tag":[{"name":"Codis","_id":"clb99avex0005tobvaewk5t26"},{"name":"Elasticsearch","_id":"clb99avf1000dtobv5wwa79ku"},{"name":"Logstash","_id":"clb99avf4000ktobv77cl6ib0"},{"name":"Kibana","_id":"clb99avf7000ptobvh7u0fubd"},{"name":"Docker","_id":"clb99avfa000vtobvgp501jq6"},{"name":"MySQL","_id":"clb99avfd0014tobvexty04vp"},{"name":"Jenkins","_id":"clb99avff001btobvakj2e9vw"},{"name":"GitLab","_id":"clb99avfg001gtobv1nqq5t3l"},{"name":"JumpServer","_id":"clb99avfh001jtobv0dff9mei"},{"name":"HAProxy","_id":"clb99avfi001otobv3ly5d57w"},{"name":"Nginx","_id":"clb99avfj001stobvc0m5h09s"},{"name":"Redis","_id":"clb99avfl0026tobvggck2bce"},{"name":"Prometheus","_id":"clb99avfm0028tobvfo2ug3zh"},{"name":"Samba","_id":"clb99avfm002atobv892w1wsf"},{"name":"Squid","_id":"clb99avfm002ctobver775aze"},{"name":"Zabbix","_id":"clb99avfn002etobv49aj8ib6"},{"name":"Shadowsocks","_id":"clb99avfn002gtobv49xb6nwt"},{"name":"Hexo","_id":"clb99avfp002itobv3aee1wex"},{"name":"Kubernetes","_id":"clb99avfy002ntobvferj5obb"}]}}